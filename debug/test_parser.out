Grammar:

Rule 0     S' -> func_def
Rule 1     func_def -> _1_repeat
Rule 2     _1_repeat -> _1_items
Rule 3     _1_repeat -> <empty>
Rule 4     _1_items -> _1_items _1_item
Rule 5     _1_items -> _1_item
Rule 6     _1_item -> function
Rule 7     function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
Rule 8     _2_repeat -> _2_items
Rule 9     _2_repeat -> <empty>
Rule 10    _2_items -> _2_items _2_item
Rule 11    _2_items -> _2_item
Rule 12    _2_item -> argument
Rule 13    function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL
Rule 14    _3_repeat -> _3_items
Rule 15    _3_repeat -> <empty>
Rule 16    _3_items -> _3_items _3_item
Rule 17    _3_items -> _3_item
Rule 18    _3_item -> argument
Rule 19    function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL
Rule 20    _4_repeat -> _4_items
Rule 21    _4_repeat -> <empty>
Rule 22    _4_items -> _4_items _4_item
Rule 23    _4_items -> _4_item
Rule 24    _4_item -> argument
Rule 25    argument -> BOOL_TYPE IDENTIFIER
Rule 26    argument -> STRING_TYPE IDENTIFIER
Rule 27    argument -> INT IDENTIFIER
Rule 28    block -> BLOCK_START _5_repeat BLOCK_END
Rule 29    _5_repeat -> _5_items
Rule 30    _5_repeat -> <empty>
Rule 31    _5_items -> _5_items _5_item
Rule 32    _5_items -> _5_item
Rule 33    _5_item -> command
Rule 34    block -> BLOCK_START BLOCK_END
Rule 35    command -> RETURN or_expression EOL
Rule 36    command -> block
Rule 37    command -> func_call
Rule 38    command -> IDENTIFIER ASSIGNMENT func_call EOL
Rule 39    command -> IDENTIFIER ASSIGNMENT or_expression EOL
Rule 40    command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
Rule 41    command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
Rule 42    command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL
Rule 43    command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
Rule 44    command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
Rule 45    command -> VAR IDENTIFIER ARROW STRING_TYPE EOL
Rule 46    command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
Rule 47    command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
Rule 48    command -> VAR IDENTIFIER ARROW INT EOL
Rule 49    command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
Rule 50    command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
Rule 51    command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
Rule 52    command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
Rule 53    command -> EOL
Rule 54    func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
Rule 55    _6_repeat -> _6_items
Rule 56    _6_repeat -> <empty>
Rule 57    _6_items -> _6_items _6_item
Rule 58    _6_items -> _6_item
Rule 59    _6_item -> or_expression
Rule 60    elif_statement -> else_statement
Rule 61    elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
Rule 62    elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
Rule 63    else_statement -> ELSE command
Rule 64    or_expression -> and_expression OR or_expression
Rule 65    or_expression -> and_expression
Rule 66    and_expression -> equal_expression AND and_expression
Rule 67    and_expression -> equal_expression
Rule 68    equal_expression -> relative_expression NOT_EQUAL equal_expression
Rule 69    equal_expression -> relative_expression EQUAL equal_expression
Rule 70    equal_expression -> relative_expression
Rule 71    relative_expression -> expression LESSER_EQUAL relative_expression
Rule 72    relative_expression -> expression GREATER_EQUAL relative_expression
Rule 73    relative_expression -> expression LESSER relative_expression
Rule 74    relative_expression -> expression GREATER relative_expression
Rule 75    relative_expression -> expression
Rule 76    expression -> term MINUS expression  [precedence=left, level=1]
Rule 77    expression -> term PLUS expression  [precedence=left, level=1]
Rule 78    expression -> term
Rule 79    term -> factor DIVISION term  [precedence=left, level=2]
Rule 80    term -> factor MULTIPLICATION term  [precedence=left, level=2]
Rule 81    term -> factor
Rule 82    factor -> FALSE
Rule 83    factor -> TRUE
Rule 84    factor -> STRING
Rule 85    factor -> IDENTIFIER
Rule 86    factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
Rule 87    _7_repeat -> _7_items
Rule 88    _7_repeat -> <empty>
Rule 89    _7_items -> _7_items _7_item
Rule 90    _7_items -> _7_item
Rule 91    _7_item -> or_expression
Rule 92    factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
Rule 93    factor -> MINUS factor  [precedence=right, level=3]
Rule 94    factor -> PLUS factor  [precedence=right, level=3]
Rule 95    factor -> NUMBER

Terminals, with rules where they appear:

AND                  : 66
ARROW                : 40 41 42 43 44 45 46 47 48
ASSIGNMENT           : 38 39 40 41 43 44 46 47
BLOCK_END            : 28 34
BLOCK_START          : 28 34
BOOL_TYPE            : 19 25 40 41 42
DIVISION             : 79
ELIF                 : 61 62
ELSE                 : 63
EOL                  : 7 13 19 35 38 39 40 41 42 43 44 45 46 47 48 49 50 52 53
EQUAL                : 69
FALSE                : 82
FUNCTION             : 7 13 19
GREATER              : 74
GREATER_EQUAL        : 72
IDENTIFIER           : 7 13 19 25 26 27 38 39 40 41 42 43 44 45 46 47 48 54 85 86
IF                   : 49 50
INT                  : 7 27 46 47 48
LESSER               : 73
LESSER_EQUAL         : 71
MINUS                : 76 93
MULTIPLICATION       : 80
NOT_EQUAL            : 68
NUMBER               : 95
OR                   : 64
PARENTHESIS_CLOSE    : 7 13 19 49 50 51 52 54 61 62 86 92
PARENTHESIS_OPEN     : 7 13 19 49 50 51 52 54 61 62 86 92
PLUS                 : 77 94
PRINT                : 52
RETURN               : 35
STRING               : 84
STRING_TYPE          : 13 26 43 44 45
TRUE                 : 83
VAR                  : 40 41 42 43 44 45 46 47 48
WHILE                : 51
error                : 

Nonterminals, with rules where they appear:

_1_item              : 4 5
_1_items             : 2 4
_1_repeat            : 1
_2_item              : 10 11
_2_items             : 8 10
_2_repeat            : 7
_3_item              : 16 17
_3_items             : 14 16
_3_repeat            : 13
_4_item              : 22 23
_4_items             : 20 22
_4_repeat            : 19
_5_item              : 31 32
_5_items             : 29 31
_5_repeat            : 28
_6_item              : 57 58
_6_items             : 55 57
_6_repeat            : 54
_7_item              : 89 90
_7_items             : 87 89
_7_repeat            : 86
and_expression       : 64 65 66
argument             : 12 18 24
block                : 7 13 19 36
command              : 33 49 50 51 61 62 63
elif_statement       : 50 62
else_statement       : 60
equal_expression     : 66 67 68 69
expression           : 71 72 73 74 75 76 77
factor               : 79 80 81 93 94
func_call            : 37 38 41 44 47
func_def             : 0
function             : 6
or_expression        : 35 39 40 43 46 49 50 51 52 59 61 62 64 91 92
relative_expression  : 68 69 70 71 72 73 74
term                 : 76 77 78 79 80


state 0

    (0) S' -> . func_def
    (1) func_def -> . _1_repeat
    (2) _1_repeat -> . _1_items
    (3) _1_repeat -> .
    (4) _1_items -> . _1_items _1_item
    (5) _1_items -> . _1_item
    (6) _1_item -> . function
    (7) function -> . INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    (13) function -> . STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL
    (19) function -> . BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL
    $end            reduce using rule 3 (_1_repeat -> .)
    INT             shift and go to state 6
    STRING_TYPE     shift and go to state 7
    BOOL_TYPE       shift and go to state 8

    func_def                       shift and go to state 1
    _1_repeat                      shift and go to state 2
    _1_items                       shift and go to state 3
    _1_item                        shift and go to state 4
    function                       shift and go to state 5

state 1

    (0) S' -> func_def .


state 2

    (1) func_def -> _1_repeat .
    $end            reduce using rule 1 (func_def -> _1_repeat .)


state 3

    (2) _1_repeat -> _1_items .
    (4) _1_items -> _1_items . _1_item
    (6) _1_item -> . function
    (7) function -> . INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    (13) function -> . STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL
    (19) function -> . BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL
    $end            reduce using rule 2 (_1_repeat -> _1_items .)
    INT             shift and go to state 6
    STRING_TYPE     shift and go to state 7
    BOOL_TYPE       shift and go to state 8

    _1_item                        shift and go to state 9
    function                       shift and go to state 5

state 4

    (5) _1_items -> _1_item .
    INT             reduce using rule 5 (_1_items -> _1_item .)
    STRING_TYPE     reduce using rule 5 (_1_items -> _1_item .)
    BOOL_TYPE       reduce using rule 5 (_1_items -> _1_item .)
    $end            reduce using rule 5 (_1_items -> _1_item .)


state 5

    (6) _1_item -> function .
    INT             reduce using rule 6 (_1_item -> function .)
    STRING_TYPE     reduce using rule 6 (_1_item -> function .)
    BOOL_TYPE       reduce using rule 6 (_1_item -> function .)
    $end            reduce using rule 6 (_1_item -> function .)


state 6

    (7) function -> INT . FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    FUNCTION        shift and go to state 10


state 7

    (13) function -> STRING_TYPE . FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL
    FUNCTION        shift and go to state 11


state 8

    (19) function -> BOOL_TYPE . FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL
    FUNCTION        shift and go to state 12


state 9

    (4) _1_items -> _1_items _1_item .
    INT             reduce using rule 4 (_1_items -> _1_items _1_item .)
    STRING_TYPE     reduce using rule 4 (_1_items -> _1_items _1_item .)
    BOOL_TYPE       reduce using rule 4 (_1_items -> _1_items _1_item .)
    $end            reduce using rule 4 (_1_items -> _1_items _1_item .)


state 10

    (7) function -> INT FUNCTION . IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    IDENTIFIER      shift and go to state 13


state 11

    (13) function -> STRING_TYPE FUNCTION . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL
    IDENTIFIER      shift and go to state 14


state 12

    (19) function -> BOOL_TYPE FUNCTION . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL
    IDENTIFIER      shift and go to state 15


state 13

    (7) function -> INT FUNCTION IDENTIFIER . PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    PARENTHESIS_OPEN shift and go to state 16


state 14

    (13) function -> STRING_TYPE FUNCTION IDENTIFIER . PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL
    PARENTHESIS_OPEN shift and go to state 17


state 15

    (19) function -> BOOL_TYPE FUNCTION IDENTIFIER . PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL
    PARENTHESIS_OPEN shift and go to state 18


state 16

    (7) function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN . _2_repeat PARENTHESIS_CLOSE block EOL
    (8) _2_repeat -> . _2_items
    (9) _2_repeat -> .
    (10) _2_items -> . _2_items _2_item
    (11) _2_items -> . _2_item
    (12) _2_item -> . argument
    (25) argument -> . BOOL_TYPE IDENTIFIER
    (26) argument -> . STRING_TYPE IDENTIFIER
    (27) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 9 (_2_repeat -> .)
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25
    INT             shift and go to state 19

    _2_repeat                      shift and go to state 20
    _2_items                       shift and go to state 21
    _2_item                        shift and go to state 22
    argument                       shift and go to state 23

state 17

    (13) function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN . _3_repeat PARENTHESIS_CLOSE block EOL
    (14) _3_repeat -> . _3_items
    (15) _3_repeat -> .
    (16) _3_items -> . _3_items _3_item
    (17) _3_items -> . _3_item
    (18) _3_item -> . argument
    (25) argument -> . BOOL_TYPE IDENTIFIER
    (26) argument -> . STRING_TYPE IDENTIFIER
    (27) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 15 (_3_repeat -> .)
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25
    INT             shift and go to state 19

    _3_repeat                      shift and go to state 26
    _3_items                       shift and go to state 27
    _3_item                        shift and go to state 28
    argument                       shift and go to state 29

state 18

    (19) function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN . _4_repeat PARENTHESIS_CLOSE block EOL
    (20) _4_repeat -> . _4_items
    (21) _4_repeat -> .
    (22) _4_items -> . _4_items _4_item
    (23) _4_items -> . _4_item
    (24) _4_item -> . argument
    (25) argument -> . BOOL_TYPE IDENTIFIER
    (26) argument -> . STRING_TYPE IDENTIFIER
    (27) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 21 (_4_repeat -> .)
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25
    INT             shift and go to state 19

    _4_repeat                      shift and go to state 30
    _4_items                       shift and go to state 31
    _4_item                        shift and go to state 32
    argument                       shift and go to state 33

state 19

    (27) argument -> INT . IDENTIFIER
    IDENTIFIER      shift and go to state 34


state 20

    (7) function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat . PARENTHESIS_CLOSE block EOL
    PARENTHESIS_CLOSE shift and go to state 35


state 21

    (8) _2_repeat -> _2_items .
    (10) _2_items -> _2_items . _2_item
    (12) _2_item -> . argument
    (25) argument -> . BOOL_TYPE IDENTIFIER
    (26) argument -> . STRING_TYPE IDENTIFIER
    (27) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 8 (_2_repeat -> _2_items .)
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25
    INT             shift and go to state 19

    _2_item                        shift and go to state 36
    argument                       shift and go to state 23

state 22

    (11) _2_items -> _2_item .
    BOOL_TYPE       reduce using rule 11 (_2_items -> _2_item .)
    STRING_TYPE     reduce using rule 11 (_2_items -> _2_item .)
    INT             reduce using rule 11 (_2_items -> _2_item .)
    PARENTHESIS_CLOSE reduce using rule 11 (_2_items -> _2_item .)


state 23

    (12) _2_item -> argument .
    BOOL_TYPE       reduce using rule 12 (_2_item -> argument .)
    STRING_TYPE     reduce using rule 12 (_2_item -> argument .)
    INT             reduce using rule 12 (_2_item -> argument .)
    PARENTHESIS_CLOSE reduce using rule 12 (_2_item -> argument .)


state 24

    (25) argument -> BOOL_TYPE . IDENTIFIER
    IDENTIFIER      shift and go to state 37


state 25

    (26) argument -> STRING_TYPE . IDENTIFIER
    IDENTIFIER      shift and go to state 38


state 26

    (13) function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat . PARENTHESIS_CLOSE block EOL
    PARENTHESIS_CLOSE shift and go to state 39


state 27

    (14) _3_repeat -> _3_items .
    (16) _3_items -> _3_items . _3_item
    (18) _3_item -> . argument
    (25) argument -> . BOOL_TYPE IDENTIFIER
    (26) argument -> . STRING_TYPE IDENTIFIER
    (27) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 14 (_3_repeat -> _3_items .)
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25
    INT             shift and go to state 19

    _3_item                        shift and go to state 40
    argument                       shift and go to state 29

state 28

    (17) _3_items -> _3_item .
    BOOL_TYPE       reduce using rule 17 (_3_items -> _3_item .)
    STRING_TYPE     reduce using rule 17 (_3_items -> _3_item .)
    INT             reduce using rule 17 (_3_items -> _3_item .)
    PARENTHESIS_CLOSE reduce using rule 17 (_3_items -> _3_item .)


state 29

    (18) _3_item -> argument .
    BOOL_TYPE       reduce using rule 18 (_3_item -> argument .)
    STRING_TYPE     reduce using rule 18 (_3_item -> argument .)
    INT             reduce using rule 18 (_3_item -> argument .)
    PARENTHESIS_CLOSE reduce using rule 18 (_3_item -> argument .)


state 30

    (19) function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat . PARENTHESIS_CLOSE block EOL
    PARENTHESIS_CLOSE shift and go to state 41


state 31

    (20) _4_repeat -> _4_items .
    (22) _4_items -> _4_items . _4_item
    (24) _4_item -> . argument
    (25) argument -> . BOOL_TYPE IDENTIFIER
    (26) argument -> . STRING_TYPE IDENTIFIER
    (27) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 20 (_4_repeat -> _4_items .)
    BOOL_TYPE       shift and go to state 24
    STRING_TYPE     shift and go to state 25
    INT             shift and go to state 19

    _4_item                        shift and go to state 42
    argument                       shift and go to state 33

state 32

    (23) _4_items -> _4_item .
    BOOL_TYPE       reduce using rule 23 (_4_items -> _4_item .)
    STRING_TYPE     reduce using rule 23 (_4_items -> _4_item .)
    INT             reduce using rule 23 (_4_items -> _4_item .)
    PARENTHESIS_CLOSE reduce using rule 23 (_4_items -> _4_item .)


state 33

    (24) _4_item -> argument .
    BOOL_TYPE       reduce using rule 24 (_4_item -> argument .)
    STRING_TYPE     reduce using rule 24 (_4_item -> argument .)
    INT             reduce using rule 24 (_4_item -> argument .)
    PARENTHESIS_CLOSE reduce using rule 24 (_4_item -> argument .)


state 34

    (27) argument -> INT IDENTIFIER .
    BOOL_TYPE       reduce using rule 27 (argument -> INT IDENTIFIER .)
    STRING_TYPE     reduce using rule 27 (argument -> INT IDENTIFIER .)
    INT             reduce using rule 27 (argument -> INT IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 27 (argument -> INT IDENTIFIER .)


state 35

    (7) function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE . block EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    BLOCK_START     shift and go to state 44

    block                          shift and go to state 43

state 36

    (10) _2_items -> _2_items _2_item .
    BOOL_TYPE       reduce using rule 10 (_2_items -> _2_items _2_item .)
    STRING_TYPE     reduce using rule 10 (_2_items -> _2_items _2_item .)
    INT             reduce using rule 10 (_2_items -> _2_items _2_item .)
    PARENTHESIS_CLOSE reduce using rule 10 (_2_items -> _2_items _2_item .)


state 37

    (25) argument -> BOOL_TYPE IDENTIFIER .
    BOOL_TYPE       reduce using rule 25 (argument -> BOOL_TYPE IDENTIFIER .)
    STRING_TYPE     reduce using rule 25 (argument -> BOOL_TYPE IDENTIFIER .)
    INT             reduce using rule 25 (argument -> BOOL_TYPE IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 25 (argument -> BOOL_TYPE IDENTIFIER .)


state 38

    (26) argument -> STRING_TYPE IDENTIFIER .
    BOOL_TYPE       reduce using rule 26 (argument -> STRING_TYPE IDENTIFIER .)
    STRING_TYPE     reduce using rule 26 (argument -> STRING_TYPE IDENTIFIER .)
    INT             reduce using rule 26 (argument -> STRING_TYPE IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 26 (argument -> STRING_TYPE IDENTIFIER .)


state 39

    (13) function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE . block EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    BLOCK_START     shift and go to state 44

    block                          shift and go to state 45

state 40

    (16) _3_items -> _3_items _3_item .
    BOOL_TYPE       reduce using rule 16 (_3_items -> _3_items _3_item .)
    STRING_TYPE     reduce using rule 16 (_3_items -> _3_items _3_item .)
    INT             reduce using rule 16 (_3_items -> _3_items _3_item .)
    PARENTHESIS_CLOSE reduce using rule 16 (_3_items -> _3_items _3_item .)


state 41

    (19) function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE . block EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    BLOCK_START     shift and go to state 44

    block                          shift and go to state 46

state 42

    (22) _4_items -> _4_items _4_item .
    BOOL_TYPE       reduce using rule 22 (_4_items -> _4_items _4_item .)
    STRING_TYPE     reduce using rule 22 (_4_items -> _4_items _4_item .)
    INT             reduce using rule 22 (_4_items -> _4_items _4_item .)
    PARENTHESIS_CLOSE reduce using rule 22 (_4_items -> _4_items _4_item .)


state 43

    (7) function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block . EOL
    EOL             shift and go to state 47


state 44

    (28) block -> BLOCK_START . _5_repeat BLOCK_END
    (34) block -> BLOCK_START . BLOCK_END
    (29) _5_repeat -> . _5_items
    (30) _5_repeat -> .
    (31) _5_items -> . _5_items _5_item
    (32) _5_items -> . _5_item
    (33) _5_item -> . command
    (35) command -> . RETURN or_expression EOL
    (36) command -> . block
    (37) command -> . func_call
    (38) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (39) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (40) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (43) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (46) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (48) command -> . VAR IDENTIFIER ARROW INT EOL
    (49) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (51) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (52) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (53) command -> . EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
  ! shift/reduce conflict for BLOCK_END resolved as shift
    BLOCK_END       shift and go to state 49
    RETURN          shift and go to state 53
    IDENTIFIER      shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    PRINT           shift and go to state 61
    EOL             shift and go to state 54
    BLOCK_START     shift and go to state 44

    _5_repeat                      shift and go to state 48
    _5_items                       shift and go to state 50
    _5_item                        shift and go to state 51
    command                        shift and go to state 52
    block                          shift and go to state 55
    func_call                      shift and go to state 56

state 45

    (13) function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block . EOL
    EOL             shift and go to state 62


state 46

    (19) function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block . EOL
    EOL             shift and go to state 63


state 47

    (7) function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .
    INT             reduce using rule 7 (function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .)
    STRING_TYPE     reduce using rule 7 (function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .)
    BOOL_TYPE       reduce using rule 7 (function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .)
    $end            reduce using rule 7 (function -> INT FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .)


state 48

    (28) block -> BLOCK_START _5_repeat . BLOCK_END
    BLOCK_END       shift and go to state 64


state 49

    (34) block -> BLOCK_START BLOCK_END .
    EOL             reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    RETURN          reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    IDENTIFIER      reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    VAR             reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    IF              reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    WHILE           reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    PRINT           reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    BLOCK_START     reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    BLOCK_END       reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    ELIF            reduce using rule 34 (block -> BLOCK_START BLOCK_END .)
    ELSE            reduce using rule 34 (block -> BLOCK_START BLOCK_END .)


state 50

    (29) _5_repeat -> _5_items .
    (31) _5_items -> _5_items . _5_item
    (33) _5_item -> . command
    (35) command -> . RETURN or_expression EOL
    (36) command -> . block
    (37) command -> . func_call
    (38) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (39) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (40) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (43) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (46) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (48) command -> . VAR IDENTIFIER ARROW INT EOL
    (49) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (51) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (52) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (53) command -> . EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    BLOCK_END       reduce using rule 29 (_5_repeat -> _5_items .)
    RETURN          shift and go to state 53
    IDENTIFIER      shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    PRINT           shift and go to state 61
    EOL             shift and go to state 54
    BLOCK_START     shift and go to state 44

    _5_item                        shift and go to state 65
    command                        shift and go to state 52
    block                          shift and go to state 55
    func_call                      shift and go to state 56

state 51

    (32) _5_items -> _5_item .
    RETURN          reduce using rule 32 (_5_items -> _5_item .)
    IDENTIFIER      reduce using rule 32 (_5_items -> _5_item .)
    VAR             reduce using rule 32 (_5_items -> _5_item .)
    IF              reduce using rule 32 (_5_items -> _5_item .)
    WHILE           reduce using rule 32 (_5_items -> _5_item .)
    PRINT           reduce using rule 32 (_5_items -> _5_item .)
    EOL             reduce using rule 32 (_5_items -> _5_item .)
    BLOCK_START     reduce using rule 32 (_5_items -> _5_item .)
    BLOCK_END       reduce using rule 32 (_5_items -> _5_item .)


state 52

    (33) _5_item -> command .
    RETURN          reduce using rule 33 (_5_item -> command .)
    IDENTIFIER      reduce using rule 33 (_5_item -> command .)
    VAR             reduce using rule 33 (_5_item -> command .)
    IF              reduce using rule 33 (_5_item -> command .)
    WHILE           reduce using rule 33 (_5_item -> command .)
    PRINT           reduce using rule 33 (_5_item -> command .)
    EOL             reduce using rule 33 (_5_item -> command .)
    BLOCK_START     reduce using rule 33 (_5_item -> command .)
    BLOCK_END       reduce using rule 33 (_5_item -> command .)


state 53

    (35) command -> RETURN . or_expression EOL
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 66
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 54

    (53) command -> EOL .
    RETURN          reduce using rule 53 (command -> EOL .)
    IDENTIFIER      reduce using rule 53 (command -> EOL .)
    VAR             reduce using rule 53 (command -> EOL .)
    IF              reduce using rule 53 (command -> EOL .)
    WHILE           reduce using rule 53 (command -> EOL .)
    PRINT           reduce using rule 53 (command -> EOL .)
    EOL             reduce using rule 53 (command -> EOL .)
    BLOCK_START     reduce using rule 53 (command -> EOL .)
    BLOCK_END       reduce using rule 53 (command -> EOL .)
    ELIF            reduce using rule 53 (command -> EOL .)
    ELSE            reduce using rule 53 (command -> EOL .)


state 55

    (36) command -> block .
    RETURN          reduce using rule 36 (command -> block .)
    IDENTIFIER      reduce using rule 36 (command -> block .)
    VAR             reduce using rule 36 (command -> block .)
    IF              reduce using rule 36 (command -> block .)
    WHILE           reduce using rule 36 (command -> block .)
    PRINT           reduce using rule 36 (command -> block .)
    EOL             reduce using rule 36 (command -> block .)
    BLOCK_START     reduce using rule 36 (command -> block .)
    BLOCK_END       reduce using rule 36 (command -> block .)
    ELIF            reduce using rule 36 (command -> block .)
    ELSE            reduce using rule 36 (command -> block .)


state 56

    (37) command -> func_call .
    RETURN          reduce using rule 37 (command -> func_call .)
    IDENTIFIER      reduce using rule 37 (command -> func_call .)
    VAR             reduce using rule 37 (command -> func_call .)
    IF              reduce using rule 37 (command -> func_call .)
    WHILE           reduce using rule 37 (command -> func_call .)
    PRINT           reduce using rule 37 (command -> func_call .)
    EOL             reduce using rule 37 (command -> func_call .)
    BLOCK_START     reduce using rule 37 (command -> func_call .)
    BLOCK_END       reduce using rule 37 (command -> func_call .)
    ELIF            reduce using rule 37 (command -> func_call .)
    ELSE            reduce using rule 37 (command -> func_call .)


state 57

    (38) command -> IDENTIFIER . ASSIGNMENT func_call EOL
    (39) command -> IDENTIFIER . ASSIGNMENT or_expression EOL
    (54) func_call -> IDENTIFIER . PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    ASSIGNMENT      shift and go to state 81
    PARENTHESIS_OPEN shift and go to state 82


state 58

    (40) command -> VAR . IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> VAR . IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> VAR . IDENTIFIER ARROW BOOL_TYPE EOL
    (43) command -> VAR . IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> VAR . IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> VAR . IDENTIFIER ARROW STRING_TYPE EOL
    (46) command -> VAR . IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> VAR . IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (48) command -> VAR . IDENTIFIER ARROW INT EOL
    IDENTIFIER      shift and go to state 83


state 59

    (49) command -> IF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> IF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    PARENTHESIS_OPEN shift and go to state 84


state 60

    (51) command -> WHILE . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    PARENTHESIS_OPEN shift and go to state 85


state 61

    (52) command -> PRINT . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    PARENTHESIS_OPEN shift and go to state 86


state 62

    (13) function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL .
    INT             reduce using rule 13 (function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL .)
    STRING_TYPE     reduce using rule 13 (function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL .)
    BOOL_TYPE       reduce using rule 13 (function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL .)
    $end            reduce using rule 13 (function -> STRING_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE block EOL .)


state 63

    (19) function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL .
    INT             reduce using rule 19 (function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL .)
    STRING_TYPE     reduce using rule 19 (function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL .)
    BOOL_TYPE       reduce using rule 19 (function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL .)
    $end            reduce using rule 19 (function -> BOOL_TYPE FUNCTION IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE block EOL .)


state 64

    (28) block -> BLOCK_START _5_repeat BLOCK_END .
    EOL             reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    RETURN          reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    IDENTIFIER      reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    VAR             reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    IF              reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    WHILE           reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    PRINT           reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    BLOCK_START     reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    BLOCK_END       reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    ELIF            reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)
    ELSE            reduce using rule 28 (block -> BLOCK_START _5_repeat BLOCK_END .)


state 65

    (31) _5_items -> _5_items _5_item .
    RETURN          reduce using rule 31 (_5_items -> _5_items _5_item .)
    IDENTIFIER      reduce using rule 31 (_5_items -> _5_items _5_item .)
    VAR             reduce using rule 31 (_5_items -> _5_items _5_item .)
    IF              reduce using rule 31 (_5_items -> _5_items _5_item .)
    WHILE           reduce using rule 31 (_5_items -> _5_items _5_item .)
    PRINT           reduce using rule 31 (_5_items -> _5_items _5_item .)
    EOL             reduce using rule 31 (_5_items -> _5_items _5_item .)
    BLOCK_START     reduce using rule 31 (_5_items -> _5_items _5_item .)
    BLOCK_END       reduce using rule 31 (_5_items -> _5_items _5_item .)


state 66

    (35) command -> RETURN or_expression . EOL
    EOL             shift and go to state 87


state 67

    (64) or_expression -> and_expression . OR or_expression
    (65) or_expression -> and_expression .
    OR              shift and go to state 88
    EOL             reduce using rule 65 (or_expression -> and_expression .)
    PARENTHESIS_CLOSE reduce using rule 65 (or_expression -> and_expression .)
    FALSE           reduce using rule 65 (or_expression -> and_expression .)
    TRUE            reduce using rule 65 (or_expression -> and_expression .)
    STRING          reduce using rule 65 (or_expression -> and_expression .)
    IDENTIFIER      reduce using rule 65 (or_expression -> and_expression .)
    PARENTHESIS_OPEN reduce using rule 65 (or_expression -> and_expression .)
    MINUS           reduce using rule 65 (or_expression -> and_expression .)
    PLUS            reduce using rule 65 (or_expression -> and_expression .)
    NUMBER          reduce using rule 65 (or_expression -> and_expression .)


state 68

    (66) and_expression -> equal_expression . AND and_expression
    (67) and_expression -> equal_expression .
    AND             shift and go to state 89
    OR              reduce using rule 67 (and_expression -> equal_expression .)
    EOL             reduce using rule 67 (and_expression -> equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 67 (and_expression -> equal_expression .)
    FALSE           reduce using rule 67 (and_expression -> equal_expression .)
    TRUE            reduce using rule 67 (and_expression -> equal_expression .)
    STRING          reduce using rule 67 (and_expression -> equal_expression .)
    IDENTIFIER      reduce using rule 67 (and_expression -> equal_expression .)
    PARENTHESIS_OPEN reduce using rule 67 (and_expression -> equal_expression .)
    MINUS           reduce using rule 67 (and_expression -> equal_expression .)
    PLUS            reduce using rule 67 (and_expression -> equal_expression .)
    NUMBER          reduce using rule 67 (and_expression -> equal_expression .)


state 69

    (68) equal_expression -> relative_expression . NOT_EQUAL equal_expression
    (69) equal_expression -> relative_expression . EQUAL equal_expression
    (70) equal_expression -> relative_expression .
    NOT_EQUAL       shift and go to state 90
    EQUAL           shift and go to state 91
    AND             reduce using rule 70 (equal_expression -> relative_expression .)
    OR              reduce using rule 70 (equal_expression -> relative_expression .)
    EOL             reduce using rule 70 (equal_expression -> relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 70 (equal_expression -> relative_expression .)
    FALSE           reduce using rule 70 (equal_expression -> relative_expression .)
    TRUE            reduce using rule 70 (equal_expression -> relative_expression .)
    STRING          reduce using rule 70 (equal_expression -> relative_expression .)
    IDENTIFIER      reduce using rule 70 (equal_expression -> relative_expression .)
    PARENTHESIS_OPEN reduce using rule 70 (equal_expression -> relative_expression .)
    MINUS           reduce using rule 70 (equal_expression -> relative_expression .)
    PLUS            reduce using rule 70 (equal_expression -> relative_expression .)
    NUMBER          reduce using rule 70 (equal_expression -> relative_expression .)


state 70

    (71) relative_expression -> expression . LESSER_EQUAL relative_expression
    (72) relative_expression -> expression . GREATER_EQUAL relative_expression
    (73) relative_expression -> expression . LESSER relative_expression
    (74) relative_expression -> expression . GREATER relative_expression
    (75) relative_expression -> expression .
    LESSER_EQUAL    shift and go to state 92
    GREATER_EQUAL   shift and go to state 93
    LESSER          shift and go to state 94
    GREATER         shift and go to state 95
    NOT_EQUAL       reduce using rule 75 (relative_expression -> expression .)
    EQUAL           reduce using rule 75 (relative_expression -> expression .)
    AND             reduce using rule 75 (relative_expression -> expression .)
    OR              reduce using rule 75 (relative_expression -> expression .)
    EOL             reduce using rule 75 (relative_expression -> expression .)
    PARENTHESIS_CLOSE reduce using rule 75 (relative_expression -> expression .)
    FALSE           reduce using rule 75 (relative_expression -> expression .)
    TRUE            reduce using rule 75 (relative_expression -> expression .)
    STRING          reduce using rule 75 (relative_expression -> expression .)
    IDENTIFIER      reduce using rule 75 (relative_expression -> expression .)
    PARENTHESIS_OPEN reduce using rule 75 (relative_expression -> expression .)
    MINUS           reduce using rule 75 (relative_expression -> expression .)
    PLUS            reduce using rule 75 (relative_expression -> expression .)
    NUMBER          reduce using rule 75 (relative_expression -> expression .)


state 71

    (76) expression -> term . MINUS expression
    (77) expression -> term . PLUS expression
    (78) expression -> term .
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    MINUS           shift and go to state 96
    PLUS            shift and go to state 97
    LESSER_EQUAL    reduce using rule 78 (expression -> term .)
    GREATER_EQUAL   reduce using rule 78 (expression -> term .)
    LESSER          reduce using rule 78 (expression -> term .)
    GREATER         reduce using rule 78 (expression -> term .)
    NOT_EQUAL       reduce using rule 78 (expression -> term .)
    EQUAL           reduce using rule 78 (expression -> term .)
    AND             reduce using rule 78 (expression -> term .)
    OR              reduce using rule 78 (expression -> term .)
    EOL             reduce using rule 78 (expression -> term .)
    PARENTHESIS_CLOSE reduce using rule 78 (expression -> term .)
    FALSE           reduce using rule 78 (expression -> term .)
    TRUE            reduce using rule 78 (expression -> term .)
    STRING          reduce using rule 78 (expression -> term .)
    IDENTIFIER      reduce using rule 78 (expression -> term .)
    PARENTHESIS_OPEN reduce using rule 78 (expression -> term .)
    NUMBER          reduce using rule 78 (expression -> term .)


state 72

    (93) factor -> MINUS . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    factor                         shift and go to state 98

state 73

    (94) factor -> PLUS . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    factor                         shift and go to state 99

state 74

    (79) term -> factor . DIVISION term
    (80) term -> factor . MULTIPLICATION term
    (81) term -> factor .
    DIVISION        shift and go to state 100
    MULTIPLICATION  shift and go to state 101
    MINUS           reduce using rule 81 (term -> factor .)
    PLUS            reduce using rule 81 (term -> factor .)
    LESSER_EQUAL    reduce using rule 81 (term -> factor .)
    GREATER_EQUAL   reduce using rule 81 (term -> factor .)
    LESSER          reduce using rule 81 (term -> factor .)
    GREATER         reduce using rule 81 (term -> factor .)
    NOT_EQUAL       reduce using rule 81 (term -> factor .)
    EQUAL           reduce using rule 81 (term -> factor .)
    AND             reduce using rule 81 (term -> factor .)
    OR              reduce using rule 81 (term -> factor .)
    EOL             reduce using rule 81 (term -> factor .)
    PARENTHESIS_CLOSE reduce using rule 81 (term -> factor .)
    FALSE           reduce using rule 81 (term -> factor .)
    TRUE            reduce using rule 81 (term -> factor .)
    STRING          reduce using rule 81 (term -> factor .)
    IDENTIFIER      reduce using rule 81 (term -> factor .)
    PARENTHESIS_OPEN reduce using rule 81 (term -> factor .)
    NUMBER          reduce using rule 81 (term -> factor .)


state 75

    (82) factor -> FALSE .
    DIVISION        reduce using rule 82 (factor -> FALSE .)
    MULTIPLICATION  reduce using rule 82 (factor -> FALSE .)
    MINUS           reduce using rule 82 (factor -> FALSE .)
    PLUS            reduce using rule 82 (factor -> FALSE .)
    LESSER_EQUAL    reduce using rule 82 (factor -> FALSE .)
    GREATER_EQUAL   reduce using rule 82 (factor -> FALSE .)
    LESSER          reduce using rule 82 (factor -> FALSE .)
    GREATER         reduce using rule 82 (factor -> FALSE .)
    NOT_EQUAL       reduce using rule 82 (factor -> FALSE .)
    EQUAL           reduce using rule 82 (factor -> FALSE .)
    AND             reduce using rule 82 (factor -> FALSE .)
    OR              reduce using rule 82 (factor -> FALSE .)
    EOL             reduce using rule 82 (factor -> FALSE .)
    PARENTHESIS_CLOSE reduce using rule 82 (factor -> FALSE .)
    FALSE           reduce using rule 82 (factor -> FALSE .)
    TRUE            reduce using rule 82 (factor -> FALSE .)
    STRING          reduce using rule 82 (factor -> FALSE .)
    IDENTIFIER      reduce using rule 82 (factor -> FALSE .)
    PARENTHESIS_OPEN reduce using rule 82 (factor -> FALSE .)
    NUMBER          reduce using rule 82 (factor -> FALSE .)


state 76

    (83) factor -> TRUE .
    DIVISION        reduce using rule 83 (factor -> TRUE .)
    MULTIPLICATION  reduce using rule 83 (factor -> TRUE .)
    MINUS           reduce using rule 83 (factor -> TRUE .)
    PLUS            reduce using rule 83 (factor -> TRUE .)
    LESSER_EQUAL    reduce using rule 83 (factor -> TRUE .)
    GREATER_EQUAL   reduce using rule 83 (factor -> TRUE .)
    LESSER          reduce using rule 83 (factor -> TRUE .)
    GREATER         reduce using rule 83 (factor -> TRUE .)
    NOT_EQUAL       reduce using rule 83 (factor -> TRUE .)
    EQUAL           reduce using rule 83 (factor -> TRUE .)
    AND             reduce using rule 83 (factor -> TRUE .)
    OR              reduce using rule 83 (factor -> TRUE .)
    EOL             reduce using rule 83 (factor -> TRUE .)
    PARENTHESIS_CLOSE reduce using rule 83 (factor -> TRUE .)
    FALSE           reduce using rule 83 (factor -> TRUE .)
    TRUE            reduce using rule 83 (factor -> TRUE .)
    STRING          reduce using rule 83 (factor -> TRUE .)
    IDENTIFIER      reduce using rule 83 (factor -> TRUE .)
    PARENTHESIS_OPEN reduce using rule 83 (factor -> TRUE .)
    NUMBER          reduce using rule 83 (factor -> TRUE .)


state 77

    (84) factor -> STRING .
    DIVISION        reduce using rule 84 (factor -> STRING .)
    MULTIPLICATION  reduce using rule 84 (factor -> STRING .)
    MINUS           reduce using rule 84 (factor -> STRING .)
    PLUS            reduce using rule 84 (factor -> STRING .)
    LESSER_EQUAL    reduce using rule 84 (factor -> STRING .)
    GREATER_EQUAL   reduce using rule 84 (factor -> STRING .)
    LESSER          reduce using rule 84 (factor -> STRING .)
    GREATER         reduce using rule 84 (factor -> STRING .)
    NOT_EQUAL       reduce using rule 84 (factor -> STRING .)
    EQUAL           reduce using rule 84 (factor -> STRING .)
    AND             reduce using rule 84 (factor -> STRING .)
    OR              reduce using rule 84 (factor -> STRING .)
    EOL             reduce using rule 84 (factor -> STRING .)
    PARENTHESIS_CLOSE reduce using rule 84 (factor -> STRING .)
    FALSE           reduce using rule 84 (factor -> STRING .)
    TRUE            reduce using rule 84 (factor -> STRING .)
    STRING          reduce using rule 84 (factor -> STRING .)
    IDENTIFIER      reduce using rule 84 (factor -> STRING .)
    PARENTHESIS_OPEN reduce using rule 84 (factor -> STRING .)
    NUMBER          reduce using rule 84 (factor -> STRING .)


state 78

    (85) factor -> IDENTIFIER .
    (86) factor -> IDENTIFIER . PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
  ! shift/reduce conflict for PARENTHESIS_OPEN resolved as shift
    DIVISION        reduce using rule 85 (factor -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 85 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 85 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 85 (factor -> IDENTIFIER .)
    LESSER_EQUAL    reduce using rule 85 (factor -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 85 (factor -> IDENTIFIER .)
    LESSER          reduce using rule 85 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 85 (factor -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 85 (factor -> IDENTIFIER .)
    EQUAL           reduce using rule 85 (factor -> IDENTIFIER .)
    AND             reduce using rule 85 (factor -> IDENTIFIER .)
    OR              reduce using rule 85 (factor -> IDENTIFIER .)
    EOL             reduce using rule 85 (factor -> IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 85 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 85 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 85 (factor -> IDENTIFIER .)
    STRING          reduce using rule 85 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 85 (factor -> IDENTIFIER .)
    NUMBER          reduce using rule 85 (factor -> IDENTIFIER .)
    PARENTHESIS_OPEN shift and go to state 102


state 79

    (92) factor -> PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 103
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 80

    (95) factor -> NUMBER .
    DIVISION        reduce using rule 95 (factor -> NUMBER .)
    MULTIPLICATION  reduce using rule 95 (factor -> NUMBER .)
    MINUS           reduce using rule 95 (factor -> NUMBER .)
    PLUS            reduce using rule 95 (factor -> NUMBER .)
    LESSER_EQUAL    reduce using rule 95 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 95 (factor -> NUMBER .)
    LESSER          reduce using rule 95 (factor -> NUMBER .)
    GREATER         reduce using rule 95 (factor -> NUMBER .)
    NOT_EQUAL       reduce using rule 95 (factor -> NUMBER .)
    EQUAL           reduce using rule 95 (factor -> NUMBER .)
    AND             reduce using rule 95 (factor -> NUMBER .)
    OR              reduce using rule 95 (factor -> NUMBER .)
    EOL             reduce using rule 95 (factor -> NUMBER .)
    PARENTHESIS_CLOSE reduce using rule 95 (factor -> NUMBER .)
    FALSE           reduce using rule 95 (factor -> NUMBER .)
    TRUE            reduce using rule 95 (factor -> NUMBER .)
    STRING          reduce using rule 95 (factor -> NUMBER .)
    IDENTIFIER      reduce using rule 95 (factor -> NUMBER .)
    PARENTHESIS_OPEN reduce using rule 95 (factor -> NUMBER .)
    NUMBER          reduce using rule 95 (factor -> NUMBER .)


state 81

    (38) command -> IDENTIFIER ASSIGNMENT . func_call EOL
    (39) command -> IDENTIFIER ASSIGNMENT . or_expression EOL
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    IDENTIFIER      shift and go to state 104
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    func_call                      shift and go to state 105
    or_expression                  shift and go to state 106
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 82

    (54) func_call -> IDENTIFIER PARENTHESIS_OPEN . _6_repeat PARENTHESIS_CLOSE
    (55) _6_repeat -> . _6_items
    (56) _6_repeat -> .
    (57) _6_items -> . _6_items _6_item
    (58) _6_items -> . _6_item
    (59) _6_item -> . or_expression
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 56 (_6_repeat -> .)
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    _6_repeat                      shift and go to state 107
    _6_items                       shift and go to state 108
    _6_item                        shift and go to state 109
    or_expression                  shift and go to state 110
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 83

    (40) command -> VAR IDENTIFIER . ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> VAR IDENTIFIER . ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> VAR IDENTIFIER . ARROW BOOL_TYPE EOL
    (43) command -> VAR IDENTIFIER . ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> VAR IDENTIFIER . ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> VAR IDENTIFIER . ARROW STRING_TYPE EOL
    (46) command -> VAR IDENTIFIER . ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> VAR IDENTIFIER . ARROW INT ASSIGNMENT func_call EOL
    (48) command -> VAR IDENTIFIER . ARROW INT EOL
    ARROW           shift and go to state 111


state 84

    (49) command -> IF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> IF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 112
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 85

    (51) command -> WHILE PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 113
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 86

    (52) command -> PRINT PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE EOL
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 114
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 87

    (35) command -> RETURN or_expression EOL .
    RETURN          reduce using rule 35 (command -> RETURN or_expression EOL .)
    IDENTIFIER      reduce using rule 35 (command -> RETURN or_expression EOL .)
    VAR             reduce using rule 35 (command -> RETURN or_expression EOL .)
    IF              reduce using rule 35 (command -> RETURN or_expression EOL .)
    WHILE           reduce using rule 35 (command -> RETURN or_expression EOL .)
    PRINT           reduce using rule 35 (command -> RETURN or_expression EOL .)
    EOL             reduce using rule 35 (command -> RETURN or_expression EOL .)
    BLOCK_START     reduce using rule 35 (command -> RETURN or_expression EOL .)
    BLOCK_END       reduce using rule 35 (command -> RETURN or_expression EOL .)
    ELIF            reduce using rule 35 (command -> RETURN or_expression EOL .)
    ELSE            reduce using rule 35 (command -> RETURN or_expression EOL .)


state 88

    (64) or_expression -> and_expression OR . or_expression
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    and_expression                 shift and go to state 67
    or_expression                  shift and go to state 115
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 89

    (66) and_expression -> equal_expression AND . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    equal_expression               shift and go to state 68
    and_expression                 shift and go to state 116
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 90

    (68) equal_expression -> relative_expression NOT_EQUAL . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    relative_expression            shift and go to state 69
    equal_expression               shift and go to state 117
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 91

    (69) equal_expression -> relative_expression EQUAL . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    relative_expression            shift and go to state 69
    equal_expression               shift and go to state 118
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 92

    (71) relative_expression -> expression LESSER_EQUAL . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    expression                     shift and go to state 70
    relative_expression            shift and go to state 119
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 93

    (72) relative_expression -> expression GREATER_EQUAL . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    expression                     shift and go to state 70
    relative_expression            shift and go to state 120
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 94

    (73) relative_expression -> expression LESSER . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    expression                     shift and go to state 70
    relative_expression            shift and go to state 121
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 95

    (74) relative_expression -> expression GREATER . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    expression                     shift and go to state 70
    relative_expression            shift and go to state 122
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 96

    (76) expression -> term MINUS . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    term                           shift and go to state 71
    expression                     shift and go to state 123
    factor                         shift and go to state 74

state 97

    (77) expression -> term PLUS . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    term                           shift and go to state 71
    expression                     shift and go to state 124
    factor                         shift and go to state 74

state 98

    (93) factor -> MINUS factor .
    DIVISION        reduce using rule 93 (factor -> MINUS factor .)
    MULTIPLICATION  reduce using rule 93 (factor -> MINUS factor .)
    MINUS           reduce using rule 93 (factor -> MINUS factor .)
    PLUS            reduce using rule 93 (factor -> MINUS factor .)
    LESSER_EQUAL    reduce using rule 93 (factor -> MINUS factor .)
    GREATER_EQUAL   reduce using rule 93 (factor -> MINUS factor .)
    LESSER          reduce using rule 93 (factor -> MINUS factor .)
    GREATER         reduce using rule 93 (factor -> MINUS factor .)
    NOT_EQUAL       reduce using rule 93 (factor -> MINUS factor .)
    EQUAL           reduce using rule 93 (factor -> MINUS factor .)
    AND             reduce using rule 93 (factor -> MINUS factor .)
    OR              reduce using rule 93 (factor -> MINUS factor .)
    EOL             reduce using rule 93 (factor -> MINUS factor .)
    PARENTHESIS_CLOSE reduce using rule 93 (factor -> MINUS factor .)
    FALSE           reduce using rule 93 (factor -> MINUS factor .)
    TRUE            reduce using rule 93 (factor -> MINUS factor .)
    STRING          reduce using rule 93 (factor -> MINUS factor .)
    IDENTIFIER      reduce using rule 93 (factor -> MINUS factor .)
    PARENTHESIS_OPEN reduce using rule 93 (factor -> MINUS factor .)
    NUMBER          reduce using rule 93 (factor -> MINUS factor .)


state 99

    (94) factor -> PLUS factor .
    DIVISION        reduce using rule 94 (factor -> PLUS factor .)
    MULTIPLICATION  reduce using rule 94 (factor -> PLUS factor .)
    MINUS           reduce using rule 94 (factor -> PLUS factor .)
    PLUS            reduce using rule 94 (factor -> PLUS factor .)
    LESSER_EQUAL    reduce using rule 94 (factor -> PLUS factor .)
    GREATER_EQUAL   reduce using rule 94 (factor -> PLUS factor .)
    LESSER          reduce using rule 94 (factor -> PLUS factor .)
    GREATER         reduce using rule 94 (factor -> PLUS factor .)
    NOT_EQUAL       reduce using rule 94 (factor -> PLUS factor .)
    EQUAL           reduce using rule 94 (factor -> PLUS factor .)
    AND             reduce using rule 94 (factor -> PLUS factor .)
    OR              reduce using rule 94 (factor -> PLUS factor .)
    EOL             reduce using rule 94 (factor -> PLUS factor .)
    PARENTHESIS_CLOSE reduce using rule 94 (factor -> PLUS factor .)
    FALSE           reduce using rule 94 (factor -> PLUS factor .)
    TRUE            reduce using rule 94 (factor -> PLUS factor .)
    STRING          reduce using rule 94 (factor -> PLUS factor .)
    IDENTIFIER      reduce using rule 94 (factor -> PLUS factor .)
    PARENTHESIS_OPEN reduce using rule 94 (factor -> PLUS factor .)
    NUMBER          reduce using rule 94 (factor -> PLUS factor .)


state 100

    (79) term -> factor DIVISION . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    factor                         shift and go to state 74
    term                           shift and go to state 125

state 101

    (80) term -> factor MULTIPLICATION . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    factor                         shift and go to state 74
    term                           shift and go to state 126

state 102

    (86) factor -> IDENTIFIER PARENTHESIS_OPEN . _7_repeat PARENTHESIS_CLOSE
    (87) _7_repeat -> . _7_items
    (88) _7_repeat -> .
    (89) _7_items -> . _7_items _7_item
    (90) _7_items -> . _7_item
    (91) _7_item -> . or_expression
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 88 (_7_repeat -> .)
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    _7_repeat                      shift and go to state 127
    _7_items                       shift and go to state 128
    _7_item                        shift and go to state 129
    or_expression                  shift and go to state 130
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 103

    (92) factor -> PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE
    PARENTHESIS_CLOSE shift and go to state 131


state 104

    (54) func_call -> IDENTIFIER . PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    (85) factor -> IDENTIFIER .
    (86) factor -> IDENTIFIER . PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    PARENTHESIS_OPEN shift and go to state 132
    DIVISION        reduce using rule 85 (factor -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 85 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 85 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 85 (factor -> IDENTIFIER .)
    LESSER_EQUAL    reduce using rule 85 (factor -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 85 (factor -> IDENTIFIER .)
    LESSER          reduce using rule 85 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 85 (factor -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 85 (factor -> IDENTIFIER .)
    EQUAL           reduce using rule 85 (factor -> IDENTIFIER .)
    AND             reduce using rule 85 (factor -> IDENTIFIER .)
    OR              reduce using rule 85 (factor -> IDENTIFIER .)
    EOL             reduce using rule 85 (factor -> IDENTIFIER .)


state 105

    (38) command -> IDENTIFIER ASSIGNMENT func_call . EOL
    EOL             shift and go to state 133


state 106

    (39) command -> IDENTIFIER ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 134


state 107

    (54) func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat . PARENTHESIS_CLOSE
    PARENTHESIS_CLOSE shift and go to state 135


state 108

    (55) _6_repeat -> _6_items .
    (57) _6_items -> _6_items . _6_item
    (59) _6_item -> . or_expression
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 55 (_6_repeat -> _6_items .)
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    _6_item                        shift and go to state 136
    or_expression                  shift and go to state 110
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 109

    (58) _6_items -> _6_item .
    FALSE           reduce using rule 58 (_6_items -> _6_item .)
    TRUE            reduce using rule 58 (_6_items -> _6_item .)
    STRING          reduce using rule 58 (_6_items -> _6_item .)
    IDENTIFIER      reduce using rule 58 (_6_items -> _6_item .)
    PARENTHESIS_OPEN reduce using rule 58 (_6_items -> _6_item .)
    MINUS           reduce using rule 58 (_6_items -> _6_item .)
    PLUS            reduce using rule 58 (_6_items -> _6_item .)
    NUMBER          reduce using rule 58 (_6_items -> _6_item .)
    PARENTHESIS_CLOSE reduce using rule 58 (_6_items -> _6_item .)


state 110

    (59) _6_item -> or_expression .
    FALSE           reduce using rule 59 (_6_item -> or_expression .)
    TRUE            reduce using rule 59 (_6_item -> or_expression .)
    STRING          reduce using rule 59 (_6_item -> or_expression .)
    IDENTIFIER      reduce using rule 59 (_6_item -> or_expression .)
    PARENTHESIS_OPEN reduce using rule 59 (_6_item -> or_expression .)
    MINUS           reduce using rule 59 (_6_item -> or_expression .)
    PLUS            reduce using rule 59 (_6_item -> or_expression .)
    NUMBER          reduce using rule 59 (_6_item -> or_expression .)
    PARENTHESIS_CLOSE reduce using rule 59 (_6_item -> or_expression .)


state 111

    (40) command -> VAR IDENTIFIER ARROW . BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> VAR IDENTIFIER ARROW . BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> VAR IDENTIFIER ARROW . BOOL_TYPE EOL
    (43) command -> VAR IDENTIFIER ARROW . STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> VAR IDENTIFIER ARROW . STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> VAR IDENTIFIER ARROW . STRING_TYPE EOL
    (46) command -> VAR IDENTIFIER ARROW . INT ASSIGNMENT or_expression EOL
    (47) command -> VAR IDENTIFIER ARROW . INT ASSIGNMENT func_call EOL
    (48) command -> VAR IDENTIFIER ARROW . INT EOL
    BOOL_TYPE       shift and go to state 137
    STRING_TYPE     shift and go to state 138
    INT             shift and go to state 139


state 112

    (49) command -> IF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command EOL
    (50) command -> IF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command elif_statement EOL
    PARENTHESIS_CLOSE shift and go to state 140


state 113

    (51) command -> WHILE PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command
    PARENTHESIS_CLOSE shift and go to state 141


state 114

    (52) command -> PRINT PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE EOL
    PARENTHESIS_CLOSE shift and go to state 142


state 115

    (64) or_expression -> and_expression OR or_expression .
    EOL             reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    PARENTHESIS_CLOSE reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    FALSE           reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    TRUE            reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    STRING          reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    IDENTIFIER      reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    PARENTHESIS_OPEN reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    MINUS           reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    PLUS            reduce using rule 64 (or_expression -> and_expression OR or_expression .)
    NUMBER          reduce using rule 64 (or_expression -> and_expression OR or_expression .)


state 116

    (66) and_expression -> equal_expression AND and_expression .
    OR              reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    EOL             reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    PARENTHESIS_CLOSE reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    FALSE           reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    TRUE            reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    STRING          reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    IDENTIFIER      reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    PARENTHESIS_OPEN reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    MINUS           reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    PLUS            reduce using rule 66 (and_expression -> equal_expression AND and_expression .)
    NUMBER          reduce using rule 66 (and_expression -> equal_expression AND and_expression .)


state 117

    (68) equal_expression -> relative_expression NOT_EQUAL equal_expression .
    AND             reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    OR              reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    EOL             reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    FALSE           reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    TRUE            reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    STRING          reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    IDENTIFIER      reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PARENTHESIS_OPEN reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    MINUS           reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PLUS            reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    NUMBER          reduce using rule 68 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)


state 118

    (69) equal_expression -> relative_expression EQUAL equal_expression .
    AND             reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    OR              reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    EOL             reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    FALSE           reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    TRUE            reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    STRING          reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    IDENTIFIER      reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    PARENTHESIS_OPEN reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    MINUS           reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    PLUS            reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)
    NUMBER          reduce using rule 69 (equal_expression -> relative_expression EQUAL equal_expression .)


state 119

    (71) relative_expression -> expression LESSER_EQUAL relative_expression .
    NOT_EQUAL       reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    EQUAL           reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    AND             reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    OR              reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    EOL             reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    FALSE           reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    TRUE            reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    STRING          reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    IDENTIFIER      reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PARENTHESIS_OPEN reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    MINUS           reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PLUS            reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    NUMBER          reduce using rule 71 (relative_expression -> expression LESSER_EQUAL relative_expression .)


state 120

    (72) relative_expression -> expression GREATER_EQUAL relative_expression .
    NOT_EQUAL       reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    EQUAL           reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    AND             reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    OR              reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    EOL             reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    FALSE           reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    TRUE            reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    STRING          reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    IDENTIFIER      reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PARENTHESIS_OPEN reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    MINUS           reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PLUS            reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    NUMBER          reduce using rule 72 (relative_expression -> expression GREATER_EQUAL relative_expression .)


state 121

    (73) relative_expression -> expression LESSER relative_expression .
    NOT_EQUAL       reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    EQUAL           reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    AND             reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    OR              reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    EOL             reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    FALSE           reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    TRUE            reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    STRING          reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    IDENTIFIER      reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    PARENTHESIS_OPEN reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    MINUS           reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    PLUS            reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)
    NUMBER          reduce using rule 73 (relative_expression -> expression LESSER relative_expression .)


state 122

    (74) relative_expression -> expression GREATER relative_expression .
    NOT_EQUAL       reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    EQUAL           reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    AND             reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    OR              reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    EOL             reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    FALSE           reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    TRUE            reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    STRING          reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    IDENTIFIER      reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    PARENTHESIS_OPEN reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    MINUS           reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    PLUS            reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)
    NUMBER          reduce using rule 74 (relative_expression -> expression GREATER relative_expression .)


state 123

    (76) expression -> term MINUS expression .
    LESSER_EQUAL    reduce using rule 76 (expression -> term MINUS expression .)
    GREATER_EQUAL   reduce using rule 76 (expression -> term MINUS expression .)
    LESSER          reduce using rule 76 (expression -> term MINUS expression .)
    GREATER         reduce using rule 76 (expression -> term MINUS expression .)
    NOT_EQUAL       reduce using rule 76 (expression -> term MINUS expression .)
    EQUAL           reduce using rule 76 (expression -> term MINUS expression .)
    AND             reduce using rule 76 (expression -> term MINUS expression .)
    OR              reduce using rule 76 (expression -> term MINUS expression .)
    EOL             reduce using rule 76 (expression -> term MINUS expression .)
    PARENTHESIS_CLOSE reduce using rule 76 (expression -> term MINUS expression .)
    FALSE           reduce using rule 76 (expression -> term MINUS expression .)
    TRUE            reduce using rule 76 (expression -> term MINUS expression .)
    STRING          reduce using rule 76 (expression -> term MINUS expression .)
    IDENTIFIER      reduce using rule 76 (expression -> term MINUS expression .)
    PARENTHESIS_OPEN reduce using rule 76 (expression -> term MINUS expression .)
    MINUS           reduce using rule 76 (expression -> term MINUS expression .)
    PLUS            reduce using rule 76 (expression -> term MINUS expression .)
    NUMBER          reduce using rule 76 (expression -> term MINUS expression .)


state 124

    (77) expression -> term PLUS expression .
    LESSER_EQUAL    reduce using rule 77 (expression -> term PLUS expression .)
    GREATER_EQUAL   reduce using rule 77 (expression -> term PLUS expression .)
    LESSER          reduce using rule 77 (expression -> term PLUS expression .)
    GREATER         reduce using rule 77 (expression -> term PLUS expression .)
    NOT_EQUAL       reduce using rule 77 (expression -> term PLUS expression .)
    EQUAL           reduce using rule 77 (expression -> term PLUS expression .)
    AND             reduce using rule 77 (expression -> term PLUS expression .)
    OR              reduce using rule 77 (expression -> term PLUS expression .)
    EOL             reduce using rule 77 (expression -> term PLUS expression .)
    PARENTHESIS_CLOSE reduce using rule 77 (expression -> term PLUS expression .)
    FALSE           reduce using rule 77 (expression -> term PLUS expression .)
    TRUE            reduce using rule 77 (expression -> term PLUS expression .)
    STRING          reduce using rule 77 (expression -> term PLUS expression .)
    IDENTIFIER      reduce using rule 77 (expression -> term PLUS expression .)
    PARENTHESIS_OPEN reduce using rule 77 (expression -> term PLUS expression .)
    MINUS           reduce using rule 77 (expression -> term PLUS expression .)
    PLUS            reduce using rule 77 (expression -> term PLUS expression .)
    NUMBER          reduce using rule 77 (expression -> term PLUS expression .)


state 125

    (79) term -> factor DIVISION term .
    MINUS           reduce using rule 79 (term -> factor DIVISION term .)
    PLUS            reduce using rule 79 (term -> factor DIVISION term .)
    LESSER_EQUAL    reduce using rule 79 (term -> factor DIVISION term .)
    GREATER_EQUAL   reduce using rule 79 (term -> factor DIVISION term .)
    LESSER          reduce using rule 79 (term -> factor DIVISION term .)
    GREATER         reduce using rule 79 (term -> factor DIVISION term .)
    NOT_EQUAL       reduce using rule 79 (term -> factor DIVISION term .)
    EQUAL           reduce using rule 79 (term -> factor DIVISION term .)
    AND             reduce using rule 79 (term -> factor DIVISION term .)
    OR              reduce using rule 79 (term -> factor DIVISION term .)
    EOL             reduce using rule 79 (term -> factor DIVISION term .)
    PARENTHESIS_CLOSE reduce using rule 79 (term -> factor DIVISION term .)
    FALSE           reduce using rule 79 (term -> factor DIVISION term .)
    TRUE            reduce using rule 79 (term -> factor DIVISION term .)
    STRING          reduce using rule 79 (term -> factor DIVISION term .)
    IDENTIFIER      reduce using rule 79 (term -> factor DIVISION term .)
    PARENTHESIS_OPEN reduce using rule 79 (term -> factor DIVISION term .)
    NUMBER          reduce using rule 79 (term -> factor DIVISION term .)


state 126

    (80) term -> factor MULTIPLICATION term .
    MINUS           reduce using rule 80 (term -> factor MULTIPLICATION term .)
    PLUS            reduce using rule 80 (term -> factor MULTIPLICATION term .)
    LESSER_EQUAL    reduce using rule 80 (term -> factor MULTIPLICATION term .)
    GREATER_EQUAL   reduce using rule 80 (term -> factor MULTIPLICATION term .)
    LESSER          reduce using rule 80 (term -> factor MULTIPLICATION term .)
    GREATER         reduce using rule 80 (term -> factor MULTIPLICATION term .)
    NOT_EQUAL       reduce using rule 80 (term -> factor MULTIPLICATION term .)
    EQUAL           reduce using rule 80 (term -> factor MULTIPLICATION term .)
    AND             reduce using rule 80 (term -> factor MULTIPLICATION term .)
    OR              reduce using rule 80 (term -> factor MULTIPLICATION term .)
    EOL             reduce using rule 80 (term -> factor MULTIPLICATION term .)
    PARENTHESIS_CLOSE reduce using rule 80 (term -> factor MULTIPLICATION term .)
    FALSE           reduce using rule 80 (term -> factor MULTIPLICATION term .)
    TRUE            reduce using rule 80 (term -> factor MULTIPLICATION term .)
    STRING          reduce using rule 80 (term -> factor MULTIPLICATION term .)
    IDENTIFIER      reduce using rule 80 (term -> factor MULTIPLICATION term .)
    PARENTHESIS_OPEN reduce using rule 80 (term -> factor MULTIPLICATION term .)
    NUMBER          reduce using rule 80 (term -> factor MULTIPLICATION term .)


state 127

    (86) factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat . PARENTHESIS_CLOSE
    PARENTHESIS_CLOSE shift and go to state 143


state 128

    (87) _7_repeat -> _7_items .
    (89) _7_items -> _7_items . _7_item
    (91) _7_item -> . or_expression
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 87 (_7_repeat -> _7_items .)
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    _7_item                        shift and go to state 144
    or_expression                  shift and go to state 130
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 129

    (90) _7_items -> _7_item .
    FALSE           reduce using rule 90 (_7_items -> _7_item .)
    TRUE            reduce using rule 90 (_7_items -> _7_item .)
    STRING          reduce using rule 90 (_7_items -> _7_item .)
    IDENTIFIER      reduce using rule 90 (_7_items -> _7_item .)
    PARENTHESIS_OPEN reduce using rule 90 (_7_items -> _7_item .)
    MINUS           reduce using rule 90 (_7_items -> _7_item .)
    PLUS            reduce using rule 90 (_7_items -> _7_item .)
    NUMBER          reduce using rule 90 (_7_items -> _7_item .)
    PARENTHESIS_CLOSE reduce using rule 90 (_7_items -> _7_item .)


state 130

    (91) _7_item -> or_expression .
    FALSE           reduce using rule 91 (_7_item -> or_expression .)
    TRUE            reduce using rule 91 (_7_item -> or_expression .)
    STRING          reduce using rule 91 (_7_item -> or_expression .)
    IDENTIFIER      reduce using rule 91 (_7_item -> or_expression .)
    PARENTHESIS_OPEN reduce using rule 91 (_7_item -> or_expression .)
    MINUS           reduce using rule 91 (_7_item -> or_expression .)
    PLUS            reduce using rule 91 (_7_item -> or_expression .)
    NUMBER          reduce using rule 91 (_7_item -> or_expression .)
    PARENTHESIS_CLOSE reduce using rule 91 (_7_item -> or_expression .)


state 131

    (92) factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .
    DIVISION        reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    MULTIPLICATION  reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    MINUS           reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PLUS            reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    LESSER_EQUAL    reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    GREATER_EQUAL   reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    LESSER          reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    GREATER         reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    NOT_EQUAL       reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    EQUAL           reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    AND             reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    OR              reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    EOL             reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PARENTHESIS_CLOSE reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    FALSE           reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    TRUE            reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    STRING          reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    IDENTIFIER      reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PARENTHESIS_OPEN reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    NUMBER          reduce using rule 92 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)


state 132

    (54) func_call -> IDENTIFIER PARENTHESIS_OPEN . _6_repeat PARENTHESIS_CLOSE
    (86) factor -> IDENTIFIER PARENTHESIS_OPEN . _7_repeat PARENTHESIS_CLOSE
    (55) _6_repeat -> . _6_items
    (56) _6_repeat -> .
    (87) _7_repeat -> . _7_items
    (88) _7_repeat -> .
    (57) _6_items -> . _6_items _6_item
    (58) _6_items -> . _6_item
    (89) _7_items -> . _7_items _7_item
    (90) _7_items -> . _7_item
    (59) _6_item -> . or_expression
    (91) _7_item -> . or_expression
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
  ! reduce/reduce conflict for PARENTHESIS_CLOSE resolved using rule 56 (_6_repeat -> .)
    PARENTHESIS_CLOSE reduce using rule 56 (_6_repeat -> .)
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    _6_repeat                      shift and go to state 107
    _7_repeat                      shift and go to state 127
    _6_items                       shift and go to state 108
    _7_items                       shift and go to state 128
    _6_item                        shift and go to state 109
    _7_item                        shift and go to state 129
    or_expression                  shift and go to state 145
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 133

    (38) command -> IDENTIFIER ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    IF              reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 38 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)


state 134

    (39) command -> IDENTIFIER ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 39 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)


state 135

    (54) func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .
    RETURN          reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    IDENTIFIER      reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    VAR             reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    IF              reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    WHILE           reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    PRINT           reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    EOL             reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    BLOCK_START     reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    BLOCK_END       reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    ELIF            reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)
    ELSE            reduce using rule 54 (func_call -> IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE .)


state 136

    (57) _6_items -> _6_items _6_item .
    FALSE           reduce using rule 57 (_6_items -> _6_items _6_item .)
    TRUE            reduce using rule 57 (_6_items -> _6_items _6_item .)
    STRING          reduce using rule 57 (_6_items -> _6_items _6_item .)
    IDENTIFIER      reduce using rule 57 (_6_items -> _6_items _6_item .)
    PARENTHESIS_OPEN reduce using rule 57 (_6_items -> _6_items _6_item .)
    MINUS           reduce using rule 57 (_6_items -> _6_items _6_item .)
    PLUS            reduce using rule 57 (_6_items -> _6_items _6_item .)
    NUMBER          reduce using rule 57 (_6_items -> _6_items _6_item .)
    PARENTHESIS_CLOSE reduce using rule 57 (_6_items -> _6_items _6_item .)


state 137

    (40) command -> VAR IDENTIFIER ARROW BOOL_TYPE . ASSIGNMENT or_expression EOL
    (41) command -> VAR IDENTIFIER ARROW BOOL_TYPE . ASSIGNMENT func_call EOL
    (42) command -> VAR IDENTIFIER ARROW BOOL_TYPE . EOL
    ASSIGNMENT      shift and go to state 146
    EOL             shift and go to state 147


state 138

    (43) command -> VAR IDENTIFIER ARROW STRING_TYPE . ASSIGNMENT or_expression EOL
    (44) command -> VAR IDENTIFIER ARROW STRING_TYPE . ASSIGNMENT func_call EOL
    (45) command -> VAR IDENTIFIER ARROW STRING_TYPE . EOL
    ASSIGNMENT      shift and go to state 148
    EOL             shift and go to state 149


state 139

    (46) command -> VAR IDENTIFIER ARROW INT . ASSIGNMENT or_expression EOL
    (47) command -> VAR IDENTIFIER ARROW INT . ASSIGNMENT func_call EOL
    (48) command -> VAR IDENTIFIER ARROW INT . EOL
    ASSIGNMENT      shift and go to state 150
    EOL             shift and go to state 151


state 140

    (49) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command EOL
    (50) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command elif_statement EOL
    (35) command -> . RETURN or_expression EOL
    (36) command -> . block
    (37) command -> . func_call
    (38) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (39) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (40) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (43) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (46) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (48) command -> . VAR IDENTIFIER ARROW INT EOL
    (49) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (51) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (52) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (53) command -> . EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 53
    IDENTIFIER      shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    PRINT           shift and go to state 61
    EOL             shift and go to state 54
    BLOCK_START     shift and go to state 44

    command                        shift and go to state 152
    block                          shift and go to state 55
    func_call                      shift and go to state 56

state 141

    (51) command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command
    (35) command -> . RETURN or_expression EOL
    (36) command -> . block
    (37) command -> . func_call
    (38) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (39) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (40) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (43) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (46) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (48) command -> . VAR IDENTIFIER ARROW INT EOL
    (49) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (51) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (52) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (53) command -> . EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 53
    IDENTIFIER      shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    PRINT           shift and go to state 61
    EOL             shift and go to state 54
    BLOCK_START     shift and go to state 44

    command                        shift and go to state 153
    block                          shift and go to state 55
    func_call                      shift and go to state 56

state 142

    (52) command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . EOL
    EOL             shift and go to state 154


state 143

    (86) factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .
    DIVISION        reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    MULTIPLICATION  reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    MINUS           reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    PLUS            reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    LESSER_EQUAL    reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    GREATER_EQUAL   reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    LESSER          reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    GREATER         reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    NOT_EQUAL       reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    EQUAL           reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    AND             reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    OR              reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    EOL             reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    PARENTHESIS_CLOSE reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    FALSE           reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    TRUE            reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    STRING          reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    IDENTIFIER      reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    PARENTHESIS_OPEN reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)
    NUMBER          reduce using rule 86 (factor -> IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE .)


state 144

    (89) _7_items -> _7_items _7_item .
    FALSE           reduce using rule 89 (_7_items -> _7_items _7_item .)
    TRUE            reduce using rule 89 (_7_items -> _7_items _7_item .)
    STRING          reduce using rule 89 (_7_items -> _7_items _7_item .)
    IDENTIFIER      reduce using rule 89 (_7_items -> _7_items _7_item .)
    PARENTHESIS_OPEN reduce using rule 89 (_7_items -> _7_items _7_item .)
    MINUS           reduce using rule 89 (_7_items -> _7_items _7_item .)
    PLUS            reduce using rule 89 (_7_items -> _7_items _7_item .)
    NUMBER          reduce using rule 89 (_7_items -> _7_items _7_item .)
    PARENTHESIS_CLOSE reduce using rule 89 (_7_items -> _7_items _7_item .)


state 145

    (59) _6_item -> or_expression .
    (91) _7_item -> or_expression .
  ! reduce/reduce conflict for FALSE resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for STRING resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for PARENTHESIS_OPEN resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 59 (_6_item -> or_expression .)
  ! reduce/reduce conflict for PARENTHESIS_CLOSE resolved using rule 59 (_6_item -> or_expression .)
    FALSE           reduce using rule 59 (_6_item -> or_expression .)
    TRUE            reduce using rule 59 (_6_item -> or_expression .)
    STRING          reduce using rule 59 (_6_item -> or_expression .)
    IDENTIFIER      reduce using rule 59 (_6_item -> or_expression .)
    PARENTHESIS_OPEN reduce using rule 59 (_6_item -> or_expression .)
    MINUS           reduce using rule 59 (_6_item -> or_expression .)
    PLUS            reduce using rule 59 (_6_item -> or_expression .)
    NUMBER          reduce using rule 59 (_6_item -> or_expression .)
    PARENTHESIS_CLOSE reduce using rule 59 (_6_item -> or_expression .)


state 146

    (40) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT . or_expression EOL
    (41) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT . func_call EOL
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    IDENTIFIER      shift and go to state 104
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 155
    func_call                      shift and go to state 156
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 147

    (42) command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .
    RETURN          reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    IDENTIFIER      reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    VAR             reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    IF              reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    WHILE           reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    PRINT           reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    EOL             reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    BLOCK_START     reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    BLOCK_END       reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    ELIF            reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    ELSE            reduce using rule 42 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)


state 148

    (43) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT . or_expression EOL
    (44) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT . func_call EOL
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    IDENTIFIER      shift and go to state 104
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 157
    func_call                      shift and go to state 158
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 149

    (45) command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .
    RETURN          reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    IDENTIFIER      reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    VAR             reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    IF              reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    WHILE           reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    PRINT           reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    EOL             reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    BLOCK_START     reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    BLOCK_END       reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    ELIF            reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    ELSE            reduce using rule 45 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)


state 150

    (46) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT . or_expression EOL
    (47) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT . func_call EOL
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    IDENTIFIER      shift and go to state 104
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 159
    func_call                      shift and go to state 160
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 151

    (48) command -> VAR IDENTIFIER ARROW INT EOL .
    RETURN          reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    IDENTIFIER      reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    VAR             reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    IF              reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    WHILE           reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    PRINT           reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    EOL             reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    BLOCK_START     reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    BLOCK_END       reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    ELIF            reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)
    ELSE            reduce using rule 48 (command -> VAR IDENTIFIER ARROW INT EOL .)


state 152

    (49) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . EOL
    (50) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . elif_statement EOL
    (60) elif_statement -> . else_statement
    (61) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (62) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    (63) else_statement -> . ELSE command
    EOL             shift and go to state 161
    ELIF            shift and go to state 164
    ELSE            shift and go to state 165

    elif_statement                 shift and go to state 162
    else_statement                 shift and go to state 163

state 153

    (51) command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .
    RETURN          reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    IDENTIFIER      reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    VAR             reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    IF              reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    WHILE           reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    PRINT           reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    EOL             reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    BLOCK_START     reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    BLOCK_END       reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELIF            reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELSE            reduce using rule 51 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)


state 154

    (52) command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .
    RETURN          reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    IDENTIFIER      reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    VAR             reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    IF              reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    WHILE           reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    PRINT           reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    EOL             reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    BLOCK_START     reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    BLOCK_END       reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    ELIF            reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    ELSE            reduce using rule 52 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)


state 155

    (40) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 166


state 156

    (41) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call . EOL
    EOL             shift and go to state 167


state 157

    (43) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 168


state 158

    (44) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call . EOL
    EOL             shift and go to state 169


state 159

    (46) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 170


state 160

    (47) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call . EOL
    EOL             shift and go to state 171


state 161

    (49) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .
    RETURN          reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    IDENTIFIER      reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    VAR             reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    IF              reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    WHILE           reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    PRINT           reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    EOL             reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    BLOCK_START     reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    BLOCK_END       reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    ELIF            reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    ELSE            reduce using rule 49 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)


state 162

    (50) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement . EOL
    EOL             shift and go to state 172


state 163

    (60) elif_statement -> else_statement .
    EOL             reduce using rule 60 (elif_statement -> else_statement .)


state 164

    (61) elif_statement -> ELIF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (62) elif_statement -> ELIF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    PARENTHESIS_OPEN shift and go to state 173


state 165

    (63) else_statement -> ELSE . command
    (35) command -> . RETURN or_expression EOL
    (36) command -> . block
    (37) command -> . func_call
    (38) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (39) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (40) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (43) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (46) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (48) command -> . VAR IDENTIFIER ARROW INT EOL
    (49) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (51) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (52) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (53) command -> . EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 53
    IDENTIFIER      shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    PRINT           shift and go to state 61
    EOL             shift and go to state 54
    BLOCK_START     shift and go to state 44

    command                        shift and go to state 174
    block                          shift and go to state 55
    func_call                      shift and go to state 56

state 166

    (40) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 40 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)


state 167

    (41) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    IF              reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 41 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)


state 168

    (43) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 43 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)


state 169

    (44) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    IF              reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 44 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)


state 170

    (46) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 46 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)


state 171

    (47) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    IF              reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 47 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)


state 172

    (50) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .
    RETURN          reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    IDENTIFIER      reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    VAR             reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    IF              reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    WHILE           reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    PRINT           reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    EOL             reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    BLOCK_START     reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    BLOCK_END       reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    ELIF            reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    ELSE            reduce using rule 50 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)


state 173

    (61) elif_statement -> ELIF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command
    (62) elif_statement -> ELIF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command elif_statement
    (64) or_expression -> . and_expression OR or_expression
    (65) or_expression -> . and_expression
    (66) and_expression -> . equal_expression AND and_expression
    (67) and_expression -> . equal_expression
    (68) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (69) equal_expression -> . relative_expression EQUAL equal_expression
    (70) equal_expression -> . relative_expression
    (71) relative_expression -> . expression LESSER_EQUAL relative_expression
    (72) relative_expression -> . expression GREATER_EQUAL relative_expression
    (73) relative_expression -> . expression LESSER relative_expression
    (74) relative_expression -> . expression GREATER relative_expression
    (75) relative_expression -> . expression
    (76) expression -> . term MINUS expression
    (77) expression -> . term PLUS expression
    (78) expression -> . term
    (79) term -> . factor DIVISION term
    (80) term -> . factor MULTIPLICATION term
    (81) term -> . factor
    (82) factor -> . FALSE
    (83) factor -> . TRUE
    (84) factor -> . STRING
    (85) factor -> . IDENTIFIER
    (86) factor -> . IDENTIFIER PARENTHESIS_OPEN _7_repeat PARENTHESIS_CLOSE
    (92) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (93) factor -> . MINUS factor
    (94) factor -> . PLUS factor
    (95) factor -> . NUMBER
    FALSE           shift and go to state 75
    TRUE            shift and go to state 76
    STRING          shift and go to state 77
    IDENTIFIER      shift and go to state 78
    PARENTHESIS_OPEN shift and go to state 79
    MINUS           shift and go to state 72
    PLUS            shift and go to state 73
    NUMBER          shift and go to state 80

    or_expression                  shift and go to state 175
    and_expression                 shift and go to state 67
    equal_expression               shift and go to state 68
    relative_expression            shift and go to state 69
    expression                     shift and go to state 70
    term                           shift and go to state 71
    factor                         shift and go to state 74

state 174

    (63) else_statement -> ELSE command .
    EOL             reduce using rule 63 (else_statement -> ELSE command .)


state 175

    (61) elif_statement -> ELIF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command
    (62) elif_statement -> ELIF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command elif_statement
    PARENTHESIS_CLOSE shift and go to state 176


state 176

    (61) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command
    (62) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command elif_statement
    (35) command -> . RETURN or_expression EOL
    (36) command -> . block
    (37) command -> . func_call
    (38) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (39) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (40) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (41) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (42) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (43) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (44) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (45) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (46) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (47) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (48) command -> . VAR IDENTIFIER ARROW INT EOL
    (49) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (50) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (51) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (52) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (53) command -> . EOL
    (28) block -> . BLOCK_START _5_repeat BLOCK_END
    (34) block -> . BLOCK_START BLOCK_END
    (54) func_call -> . IDENTIFIER PARENTHESIS_OPEN _6_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 53
    IDENTIFIER      shift and go to state 57
    VAR             shift and go to state 58
    IF              shift and go to state 59
    WHILE           shift and go to state 60
    PRINT           shift and go to state 61
    EOL             shift and go to state 54
    BLOCK_START     shift and go to state 44

    command                        shift and go to state 177
    block                          shift and go to state 55
    func_call                      shift and go to state 56

state 177

    (61) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .
    (62) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . elif_statement
    (60) elif_statement -> . else_statement
    (61) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (62) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    (63) else_statement -> . ELSE command
    EOL             reduce using rule 61 (elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELIF            shift and go to state 164
    ELSE            shift and go to state 165

    elif_statement                 shift and go to state 178
    else_statement                 shift and go to state 163

state 178

    (62) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement .
    EOL             reduce using rule 62 (elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement .)


Conflicts:

shift/reduce conflict for BLOCK_END in state 44 resolved as shift
shift/reduce conflict for MINUS in state 71 resolved as shift
shift/reduce conflict for PLUS in state 71 resolved as shift
shift/reduce conflict for PARENTHESIS_OPEN in state 78 resolved as shift
reduce/reduce conflict in state 132 resolved using rule _6_repeat -> <empty>
rejected rule (_7_repeat -> <empty>) in state 132
reduce/reduce conflict in state 145 resolved using rule _6_item -> or_expression
rejected rule (_7_item -> or_expression) in state 145