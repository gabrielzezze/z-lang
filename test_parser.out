Grammar:

Rule 0     S' -> function
Rule 1     function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE block EOL
Rule 2     _1_repeat -> _1_items
Rule 3     _1_repeat -> <empty>
Rule 4     _1_items -> _1_items _1_item
Rule 5     _1_items -> _1_item
Rule 6     _1_item -> argument
Rule 7     argument -> BOOL_TYPE IDENTIFIER
Rule 8     argument -> STRING_TYPE IDENTIFIER
Rule 9     argument -> INT IDENTIFIER
Rule 10    block -> BLOCK_START _2_repeat BLOCK_END
Rule 11    _2_repeat -> _2_items
Rule 12    _2_repeat -> <empty>
Rule 13    _2_items -> _2_items _2_item
Rule 14    _2_items -> _2_item
Rule 15    _2_item -> command
Rule 16    block -> BLOCK_START BLOCK_END
Rule 17    command -> RETURN or_expression EOL
Rule 18    command -> block
Rule 19    command -> func_call
Rule 20    command -> IDENTIFIER ASSIGNMENT func_call EOL
Rule 21    command -> IDENTIFIER ASSIGNMENT or_expression EOL
Rule 22    command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
Rule 23    command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
Rule 24    command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL
Rule 25    command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
Rule 26    command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
Rule 27    command -> VAR IDENTIFIER ARROW STRING_TYPE EOL
Rule 28    command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
Rule 29    command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
Rule 30    command -> VAR IDENTIFIER ARROW INT EOL
Rule 31    command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
Rule 32    command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
Rule 33    command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
Rule 34    command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
Rule 35    command -> EOL
Rule 36    func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
Rule 37    _3_repeat -> _3_items
Rule 38    _3_repeat -> <empty>
Rule 39    _3_items -> _3_items _3_item
Rule 40    _3_items -> _3_item
Rule 41    _3_item -> or_expression
Rule 42    elif_statement -> else_statement
Rule 43    elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
Rule 44    elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
Rule 45    else_statement -> ELSE command
Rule 46    or_expression -> and_expression OR or_expression
Rule 47    or_expression -> and_expression
Rule 48    and_expression -> equal_expression AND and_expression
Rule 49    and_expression -> equal_expression
Rule 50    equal_expression -> relative_expression NOT_EQUAL equal_expression
Rule 51    equal_expression -> relative_expression EQUAL equal_expression
Rule 52    equal_expression -> relative_expression
Rule 53    relative_expression -> expression LESSER_EQUAL relative_expression
Rule 54    relative_expression -> expression GREATER_EQUAL relative_expression
Rule 55    relative_expression -> expression LESSER relative_expression
Rule 56    relative_expression -> expression GREATER relative_expression
Rule 57    relative_expression -> expression
Rule 58    expression -> term MINUS expression  [precedence=left, level=1]
Rule 59    expression -> term PLUS expression  [precedence=left, level=1]
Rule 60    expression -> term
Rule 61    term -> factor DIVISION term  [precedence=left, level=2]
Rule 62    term -> factor MULTIPLICATION term  [precedence=left, level=2]
Rule 63    term -> factor
Rule 64    factor -> FALSE
Rule 65    factor -> TRUE
Rule 66    factor -> STRING
Rule 67    factor -> IDENTIFIER
Rule 68    factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
Rule 69    factor -> MINUS factor  [precedence=right, level=3]
Rule 70    factor -> PLUS factor  [precedence=right, level=3]
Rule 71    factor -> NUMBER

Terminals, with rules where they appear:

AND                  : 48
ARROW                : 22 23 24 25 26 27 28 29 30
ASSIGNMENT           : 20 21 22 23 25 26 28 29
BLOCK_END            : 10 16
BLOCK_START          : 10 16
BOOL_TYPE            : 7 22 23 24
DIVISION             : 61
ELIF                 : 43 44
ELSE                 : 45
EOL                  : 1 17 20 21 22 23 24 25 26 27 28 29 30 31 32 34 35 36
EQUAL                : 51
FALSE                : 64
FUNCTION             : 1
GREATER              : 56
GREATER_EQUAL        : 54
IDENTIFIER           : 1 7 8 9 20 21 22 23 24 25 26 27 28 29 30 36 67
IF                   : 31 32
INT                  : 9 28 29 30
LESSER               : 55
LESSER_EQUAL         : 53
MINUS                : 58 69
MULTIPLICATION       : 62
NOT_EQUAL            : 50
NUMBER               : 71
OR                   : 46
PARENTHESIS_CLOSE    : 1 31 32 33 34 36 43 44 68
PARENTHESIS_OPEN     : 1 31 32 33 34 36 43 44 68
PLUS                 : 59 70
PRINT                : 34
RETURN               : 17
STRING               : 66
STRING_TYPE          : 8 25 26 27
TRUE                 : 65
VAR                  : 22 23 24 25 26 27 28 29 30
WHILE                : 33
error                : 

Nonterminals, with rules where they appear:

_1_item              : 4 5
_1_items             : 2 4
_1_repeat            : 1
_2_item              : 13 14
_2_items             : 11 13
_2_repeat            : 10
_3_item              : 39 40
_3_items             : 37 39
_3_repeat            : 36
and_expression       : 46 47 48
argument             : 6
block                : 1 18
command              : 15 31 32 33 43 44 45
elif_statement       : 32 44
else_statement       : 42
equal_expression     : 48 49 50 51
expression           : 53 54 55 56 57 58 59
factor               : 61 62 63 69 70
func_call            : 19 20 22 25 28
function             : 0
or_expression        : 17 21 23 26 29 31 32 33 34 41 43 44 46 68
relative_expression  : 50 51 52 53 54 55 56
term                 : 58 59 60 61 62


state 0

    (0) S' -> . function
    (1) function -> . FUNCTION IDENTIFIER PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE block EOL
    FUNCTION        shift and go to state 2

    function                       shift and go to state 1

state 1

    (0) S' -> function .


state 2

    (1) function -> FUNCTION . IDENTIFIER PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE block EOL
    IDENTIFIER      shift and go to state 3


state 3

    (1) function -> FUNCTION IDENTIFIER . PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE block EOL
    PARENTHESIS_OPEN shift and go to state 4


state 4

    (1) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN . _1_repeat PARENTHESIS_CLOSE block EOL
    (2) _1_repeat -> . _1_items
    (3) _1_repeat -> .
    (4) _1_items -> . _1_items _1_item
    (5) _1_items -> . _1_item
    (6) _1_item -> . argument
    (7) argument -> . BOOL_TYPE IDENTIFIER
    (8) argument -> . STRING_TYPE IDENTIFIER
    (9) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 3 (_1_repeat -> .)
    BOOL_TYPE       shift and go to state 9
    STRING_TYPE     shift and go to state 10
    INT             shift and go to state 11

    _1_repeat                      shift and go to state 5
    _1_items                       shift and go to state 6
    _1_item                        shift and go to state 7
    argument                       shift and go to state 8

state 5

    (1) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _1_repeat . PARENTHESIS_CLOSE block EOL
    PARENTHESIS_CLOSE shift and go to state 12


state 6

    (2) _1_repeat -> _1_items .
    (4) _1_items -> _1_items . _1_item
    (6) _1_item -> . argument
    (7) argument -> . BOOL_TYPE IDENTIFIER
    (8) argument -> . STRING_TYPE IDENTIFIER
    (9) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 2 (_1_repeat -> _1_items .)
    BOOL_TYPE       shift and go to state 9
    STRING_TYPE     shift and go to state 10
    INT             shift and go to state 11

    _1_item                        shift and go to state 13
    argument                       shift and go to state 8

state 7

    (5) _1_items -> _1_item .
    BOOL_TYPE       reduce using rule 5 (_1_items -> _1_item .)
    STRING_TYPE     reduce using rule 5 (_1_items -> _1_item .)
    INT             reduce using rule 5 (_1_items -> _1_item .)
    PARENTHESIS_CLOSE reduce using rule 5 (_1_items -> _1_item .)


state 8

    (6) _1_item -> argument .
    BOOL_TYPE       reduce using rule 6 (_1_item -> argument .)
    STRING_TYPE     reduce using rule 6 (_1_item -> argument .)
    INT             reduce using rule 6 (_1_item -> argument .)
    PARENTHESIS_CLOSE reduce using rule 6 (_1_item -> argument .)


state 9

    (7) argument -> BOOL_TYPE . IDENTIFIER
    IDENTIFIER      shift and go to state 14


state 10

    (8) argument -> STRING_TYPE . IDENTIFIER
    IDENTIFIER      shift and go to state 15


state 11

    (9) argument -> INT . IDENTIFIER
    IDENTIFIER      shift and go to state 16


state 12

    (1) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE . block EOL
    (10) block -> . BLOCK_START _2_repeat BLOCK_END
    (16) block -> . BLOCK_START BLOCK_END
    BLOCK_START     shift and go to state 18

    block                          shift and go to state 17

state 13

    (4) _1_items -> _1_items _1_item .
    BOOL_TYPE       reduce using rule 4 (_1_items -> _1_items _1_item .)
    STRING_TYPE     reduce using rule 4 (_1_items -> _1_items _1_item .)
    INT             reduce using rule 4 (_1_items -> _1_items _1_item .)
    PARENTHESIS_CLOSE reduce using rule 4 (_1_items -> _1_items _1_item .)


state 14

    (7) argument -> BOOL_TYPE IDENTIFIER .
    BOOL_TYPE       reduce using rule 7 (argument -> BOOL_TYPE IDENTIFIER .)
    STRING_TYPE     reduce using rule 7 (argument -> BOOL_TYPE IDENTIFIER .)
    INT             reduce using rule 7 (argument -> BOOL_TYPE IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 7 (argument -> BOOL_TYPE IDENTIFIER .)


state 15

    (8) argument -> STRING_TYPE IDENTIFIER .
    BOOL_TYPE       reduce using rule 8 (argument -> STRING_TYPE IDENTIFIER .)
    STRING_TYPE     reduce using rule 8 (argument -> STRING_TYPE IDENTIFIER .)
    INT             reduce using rule 8 (argument -> STRING_TYPE IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 8 (argument -> STRING_TYPE IDENTIFIER .)


state 16

    (9) argument -> INT IDENTIFIER .
    BOOL_TYPE       reduce using rule 9 (argument -> INT IDENTIFIER .)
    STRING_TYPE     reduce using rule 9 (argument -> INT IDENTIFIER .)
    INT             reduce using rule 9 (argument -> INT IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 9 (argument -> INT IDENTIFIER .)


state 17

    (1) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE block . EOL
    EOL             shift and go to state 19


state 18

    (10) block -> BLOCK_START . _2_repeat BLOCK_END
    (16) block -> BLOCK_START . BLOCK_END
    (11) _2_repeat -> . _2_items
    (12) _2_repeat -> .
    (13) _2_items -> . _2_items _2_item
    (14) _2_items -> . _2_item
    (15) _2_item -> . command
    (17) command -> . RETURN or_expression EOL
    (18) command -> . block
    (19) command -> . func_call
    (20) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (21) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (22) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (25) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (28) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (29) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> . VAR IDENTIFIER ARROW INT EOL
    (31) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (33) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (34) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (35) command -> . EOL
    (10) block -> . BLOCK_START _2_repeat BLOCK_END
    (16) block -> . BLOCK_START BLOCK_END
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
  ! shift/reduce conflict for BLOCK_END resolved as shift
    BLOCK_END       shift and go to state 21
    RETURN          shift and go to state 25
    IDENTIFIER      shift and go to state 29
    VAR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    PRINT           shift and go to state 33
    EOL             shift and go to state 26
    BLOCK_START     shift and go to state 18

    _2_repeat                      shift and go to state 20
    _2_items                       shift and go to state 22
    _2_item                        shift and go to state 23
    command                        shift and go to state 24
    block                          shift and go to state 27
    func_call                      shift and go to state 28

state 19

    (1) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE block EOL .
    $end            reduce using rule 1 (function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _1_repeat PARENTHESIS_CLOSE block EOL .)


state 20

    (10) block -> BLOCK_START _2_repeat . BLOCK_END
    BLOCK_END       shift and go to state 34


state 21

    (16) block -> BLOCK_START BLOCK_END .
    EOL             reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    RETURN          reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    IDENTIFIER      reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    VAR             reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    IF              reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    WHILE           reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    PRINT           reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    BLOCK_START     reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    BLOCK_END       reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    ELIF            reduce using rule 16 (block -> BLOCK_START BLOCK_END .)
    ELSE            reduce using rule 16 (block -> BLOCK_START BLOCK_END .)


state 22

    (11) _2_repeat -> _2_items .
    (13) _2_items -> _2_items . _2_item
    (15) _2_item -> . command
    (17) command -> . RETURN or_expression EOL
    (18) command -> . block
    (19) command -> . func_call
    (20) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (21) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (22) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (25) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (28) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (29) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> . VAR IDENTIFIER ARROW INT EOL
    (31) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (33) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (34) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (35) command -> . EOL
    (10) block -> . BLOCK_START _2_repeat BLOCK_END
    (16) block -> . BLOCK_START BLOCK_END
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    BLOCK_END       reduce using rule 11 (_2_repeat -> _2_items .)
    RETURN          shift and go to state 25
    IDENTIFIER      shift and go to state 29
    VAR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    PRINT           shift and go to state 33
    EOL             shift and go to state 26
    BLOCK_START     shift and go to state 18

    _2_item                        shift and go to state 35
    command                        shift and go to state 24
    block                          shift and go to state 27
    func_call                      shift and go to state 28

state 23

    (14) _2_items -> _2_item .
    RETURN          reduce using rule 14 (_2_items -> _2_item .)
    IDENTIFIER      reduce using rule 14 (_2_items -> _2_item .)
    VAR             reduce using rule 14 (_2_items -> _2_item .)
    IF              reduce using rule 14 (_2_items -> _2_item .)
    WHILE           reduce using rule 14 (_2_items -> _2_item .)
    PRINT           reduce using rule 14 (_2_items -> _2_item .)
    EOL             reduce using rule 14 (_2_items -> _2_item .)
    BLOCK_START     reduce using rule 14 (_2_items -> _2_item .)
    BLOCK_END       reduce using rule 14 (_2_items -> _2_item .)


state 24

    (15) _2_item -> command .
    RETURN          reduce using rule 15 (_2_item -> command .)
    IDENTIFIER      reduce using rule 15 (_2_item -> command .)
    VAR             reduce using rule 15 (_2_item -> command .)
    IF              reduce using rule 15 (_2_item -> command .)
    WHILE           reduce using rule 15 (_2_item -> command .)
    PRINT           reduce using rule 15 (_2_item -> command .)
    EOL             reduce using rule 15 (_2_item -> command .)
    BLOCK_START     reduce using rule 15 (_2_item -> command .)
    BLOCK_END       reduce using rule 15 (_2_item -> command .)


state 25

    (17) command -> RETURN . or_expression EOL
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    or_expression                  shift and go to state 36
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 26

    (35) command -> EOL .
    RETURN          reduce using rule 35 (command -> EOL .)
    IDENTIFIER      reduce using rule 35 (command -> EOL .)
    VAR             reduce using rule 35 (command -> EOL .)
    IF              reduce using rule 35 (command -> EOL .)
    WHILE           reduce using rule 35 (command -> EOL .)
    PRINT           reduce using rule 35 (command -> EOL .)
    EOL             reduce using rule 35 (command -> EOL .)
    BLOCK_START     reduce using rule 35 (command -> EOL .)
    BLOCK_END       reduce using rule 35 (command -> EOL .)
    ELIF            reduce using rule 35 (command -> EOL .)
    ELSE            reduce using rule 35 (command -> EOL .)


state 27

    (18) command -> block .
    RETURN          reduce using rule 18 (command -> block .)
    IDENTIFIER      reduce using rule 18 (command -> block .)
    VAR             reduce using rule 18 (command -> block .)
    IF              reduce using rule 18 (command -> block .)
    WHILE           reduce using rule 18 (command -> block .)
    PRINT           reduce using rule 18 (command -> block .)
    EOL             reduce using rule 18 (command -> block .)
    BLOCK_START     reduce using rule 18 (command -> block .)
    BLOCK_END       reduce using rule 18 (command -> block .)
    ELIF            reduce using rule 18 (command -> block .)
    ELSE            reduce using rule 18 (command -> block .)


state 28

    (19) command -> func_call .
    RETURN          reduce using rule 19 (command -> func_call .)
    IDENTIFIER      reduce using rule 19 (command -> func_call .)
    VAR             reduce using rule 19 (command -> func_call .)
    IF              reduce using rule 19 (command -> func_call .)
    WHILE           reduce using rule 19 (command -> func_call .)
    PRINT           reduce using rule 19 (command -> func_call .)
    EOL             reduce using rule 19 (command -> func_call .)
    BLOCK_START     reduce using rule 19 (command -> func_call .)
    BLOCK_END       reduce using rule 19 (command -> func_call .)
    ELIF            reduce using rule 19 (command -> func_call .)
    ELSE            reduce using rule 19 (command -> func_call .)


state 29

    (20) command -> IDENTIFIER . ASSIGNMENT func_call EOL
    (21) command -> IDENTIFIER . ASSIGNMENT or_expression EOL
    (36) func_call -> IDENTIFIER . PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    ASSIGNMENT      shift and go to state 51
    PARENTHESIS_OPEN shift and go to state 52


state 30

    (22) command -> VAR . IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> VAR . IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> VAR . IDENTIFIER ARROW BOOL_TYPE EOL
    (25) command -> VAR . IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> VAR . IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> VAR . IDENTIFIER ARROW STRING_TYPE EOL
    (28) command -> VAR . IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (29) command -> VAR . IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> VAR . IDENTIFIER ARROW INT EOL
    IDENTIFIER      shift and go to state 53


state 31

    (31) command -> IF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> IF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    PARENTHESIS_OPEN shift and go to state 54


state 32

    (33) command -> WHILE . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    PARENTHESIS_OPEN shift and go to state 55


state 33

    (34) command -> PRINT . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    PARENTHESIS_OPEN shift and go to state 56


state 34

    (10) block -> BLOCK_START _2_repeat BLOCK_END .
    EOL             reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    RETURN          reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    IDENTIFIER      reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    VAR             reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    IF              reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    WHILE           reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    PRINT           reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    BLOCK_START     reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    BLOCK_END       reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    ELIF            reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)
    ELSE            reduce using rule 10 (block -> BLOCK_START _2_repeat BLOCK_END .)


state 35

    (13) _2_items -> _2_items _2_item .
    RETURN          reduce using rule 13 (_2_items -> _2_items _2_item .)
    IDENTIFIER      reduce using rule 13 (_2_items -> _2_items _2_item .)
    VAR             reduce using rule 13 (_2_items -> _2_items _2_item .)
    IF              reduce using rule 13 (_2_items -> _2_items _2_item .)
    WHILE           reduce using rule 13 (_2_items -> _2_items _2_item .)
    PRINT           reduce using rule 13 (_2_items -> _2_items _2_item .)
    EOL             reduce using rule 13 (_2_items -> _2_items _2_item .)
    BLOCK_START     reduce using rule 13 (_2_items -> _2_items _2_item .)
    BLOCK_END       reduce using rule 13 (_2_items -> _2_items _2_item .)


state 36

    (17) command -> RETURN or_expression . EOL
    EOL             shift and go to state 57


state 37

    (46) or_expression -> and_expression . OR or_expression
    (47) or_expression -> and_expression .
    OR              shift and go to state 58
    EOL             reduce using rule 47 (or_expression -> and_expression .)
    PARENTHESIS_CLOSE reduce using rule 47 (or_expression -> and_expression .)
    FALSE           reduce using rule 47 (or_expression -> and_expression .)
    TRUE            reduce using rule 47 (or_expression -> and_expression .)
    STRING          reduce using rule 47 (or_expression -> and_expression .)
    IDENTIFIER      reduce using rule 47 (or_expression -> and_expression .)
    PARENTHESIS_OPEN reduce using rule 47 (or_expression -> and_expression .)
    MINUS           reduce using rule 47 (or_expression -> and_expression .)
    PLUS            reduce using rule 47 (or_expression -> and_expression .)
    NUMBER          reduce using rule 47 (or_expression -> and_expression .)


state 38

    (48) and_expression -> equal_expression . AND and_expression
    (49) and_expression -> equal_expression .
    AND             shift and go to state 59
    OR              reduce using rule 49 (and_expression -> equal_expression .)
    EOL             reduce using rule 49 (and_expression -> equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 49 (and_expression -> equal_expression .)
    FALSE           reduce using rule 49 (and_expression -> equal_expression .)
    TRUE            reduce using rule 49 (and_expression -> equal_expression .)
    STRING          reduce using rule 49 (and_expression -> equal_expression .)
    IDENTIFIER      reduce using rule 49 (and_expression -> equal_expression .)
    PARENTHESIS_OPEN reduce using rule 49 (and_expression -> equal_expression .)
    MINUS           reduce using rule 49 (and_expression -> equal_expression .)
    PLUS            reduce using rule 49 (and_expression -> equal_expression .)
    NUMBER          reduce using rule 49 (and_expression -> equal_expression .)


state 39

    (50) equal_expression -> relative_expression . NOT_EQUAL equal_expression
    (51) equal_expression -> relative_expression . EQUAL equal_expression
    (52) equal_expression -> relative_expression .
    NOT_EQUAL       shift and go to state 60
    EQUAL           shift and go to state 61
    AND             reduce using rule 52 (equal_expression -> relative_expression .)
    OR              reduce using rule 52 (equal_expression -> relative_expression .)
    EOL             reduce using rule 52 (equal_expression -> relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 52 (equal_expression -> relative_expression .)
    FALSE           reduce using rule 52 (equal_expression -> relative_expression .)
    TRUE            reduce using rule 52 (equal_expression -> relative_expression .)
    STRING          reduce using rule 52 (equal_expression -> relative_expression .)
    IDENTIFIER      reduce using rule 52 (equal_expression -> relative_expression .)
    PARENTHESIS_OPEN reduce using rule 52 (equal_expression -> relative_expression .)
    MINUS           reduce using rule 52 (equal_expression -> relative_expression .)
    PLUS            reduce using rule 52 (equal_expression -> relative_expression .)
    NUMBER          reduce using rule 52 (equal_expression -> relative_expression .)


state 40

    (53) relative_expression -> expression . LESSER_EQUAL relative_expression
    (54) relative_expression -> expression . GREATER_EQUAL relative_expression
    (55) relative_expression -> expression . LESSER relative_expression
    (56) relative_expression -> expression . GREATER relative_expression
    (57) relative_expression -> expression .
    LESSER_EQUAL    shift and go to state 62
    GREATER_EQUAL   shift and go to state 63
    LESSER          shift and go to state 64
    GREATER         shift and go to state 65
    NOT_EQUAL       reduce using rule 57 (relative_expression -> expression .)
    EQUAL           reduce using rule 57 (relative_expression -> expression .)
    AND             reduce using rule 57 (relative_expression -> expression .)
    OR              reduce using rule 57 (relative_expression -> expression .)
    EOL             reduce using rule 57 (relative_expression -> expression .)
    PARENTHESIS_CLOSE reduce using rule 57 (relative_expression -> expression .)
    FALSE           reduce using rule 57 (relative_expression -> expression .)
    TRUE            reduce using rule 57 (relative_expression -> expression .)
    STRING          reduce using rule 57 (relative_expression -> expression .)
    IDENTIFIER      reduce using rule 57 (relative_expression -> expression .)
    PARENTHESIS_OPEN reduce using rule 57 (relative_expression -> expression .)
    MINUS           reduce using rule 57 (relative_expression -> expression .)
    PLUS            reduce using rule 57 (relative_expression -> expression .)
    NUMBER          reduce using rule 57 (relative_expression -> expression .)


state 41

    (58) expression -> term . MINUS expression
    (59) expression -> term . PLUS expression
    (60) expression -> term .
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    MINUS           shift and go to state 66
    PLUS            shift and go to state 67
    LESSER_EQUAL    reduce using rule 60 (expression -> term .)
    GREATER_EQUAL   reduce using rule 60 (expression -> term .)
    LESSER          reduce using rule 60 (expression -> term .)
    GREATER         reduce using rule 60 (expression -> term .)
    NOT_EQUAL       reduce using rule 60 (expression -> term .)
    EQUAL           reduce using rule 60 (expression -> term .)
    AND             reduce using rule 60 (expression -> term .)
    OR              reduce using rule 60 (expression -> term .)
    EOL             reduce using rule 60 (expression -> term .)
    PARENTHESIS_CLOSE reduce using rule 60 (expression -> term .)
    FALSE           reduce using rule 60 (expression -> term .)
    TRUE            reduce using rule 60 (expression -> term .)
    STRING          reduce using rule 60 (expression -> term .)
    IDENTIFIER      reduce using rule 60 (expression -> term .)
    PARENTHESIS_OPEN reduce using rule 60 (expression -> term .)
    NUMBER          reduce using rule 60 (expression -> term .)


state 42

    (69) factor -> MINUS . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    factor                         shift and go to state 68

state 43

    (70) factor -> PLUS . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    factor                         shift and go to state 69

state 44

    (61) term -> factor . DIVISION term
    (62) term -> factor . MULTIPLICATION term
    (63) term -> factor .
    DIVISION        shift and go to state 70
    MULTIPLICATION  shift and go to state 71
    MINUS           reduce using rule 63 (term -> factor .)
    PLUS            reduce using rule 63 (term -> factor .)
    LESSER_EQUAL    reduce using rule 63 (term -> factor .)
    GREATER_EQUAL   reduce using rule 63 (term -> factor .)
    LESSER          reduce using rule 63 (term -> factor .)
    GREATER         reduce using rule 63 (term -> factor .)
    NOT_EQUAL       reduce using rule 63 (term -> factor .)
    EQUAL           reduce using rule 63 (term -> factor .)
    AND             reduce using rule 63 (term -> factor .)
    OR              reduce using rule 63 (term -> factor .)
    EOL             reduce using rule 63 (term -> factor .)
    PARENTHESIS_CLOSE reduce using rule 63 (term -> factor .)
    FALSE           reduce using rule 63 (term -> factor .)
    TRUE            reduce using rule 63 (term -> factor .)
    STRING          reduce using rule 63 (term -> factor .)
    IDENTIFIER      reduce using rule 63 (term -> factor .)
    PARENTHESIS_OPEN reduce using rule 63 (term -> factor .)
    NUMBER          reduce using rule 63 (term -> factor .)


state 45

    (64) factor -> FALSE .
    DIVISION        reduce using rule 64 (factor -> FALSE .)
    MULTIPLICATION  reduce using rule 64 (factor -> FALSE .)
    MINUS           reduce using rule 64 (factor -> FALSE .)
    PLUS            reduce using rule 64 (factor -> FALSE .)
    LESSER_EQUAL    reduce using rule 64 (factor -> FALSE .)
    GREATER_EQUAL   reduce using rule 64 (factor -> FALSE .)
    LESSER          reduce using rule 64 (factor -> FALSE .)
    GREATER         reduce using rule 64 (factor -> FALSE .)
    NOT_EQUAL       reduce using rule 64 (factor -> FALSE .)
    EQUAL           reduce using rule 64 (factor -> FALSE .)
    AND             reduce using rule 64 (factor -> FALSE .)
    OR              reduce using rule 64 (factor -> FALSE .)
    EOL             reduce using rule 64 (factor -> FALSE .)
    PARENTHESIS_CLOSE reduce using rule 64 (factor -> FALSE .)
    FALSE           reduce using rule 64 (factor -> FALSE .)
    TRUE            reduce using rule 64 (factor -> FALSE .)
    STRING          reduce using rule 64 (factor -> FALSE .)
    IDENTIFIER      reduce using rule 64 (factor -> FALSE .)
    PARENTHESIS_OPEN reduce using rule 64 (factor -> FALSE .)
    NUMBER          reduce using rule 64 (factor -> FALSE .)


state 46

    (65) factor -> TRUE .
    DIVISION        reduce using rule 65 (factor -> TRUE .)
    MULTIPLICATION  reduce using rule 65 (factor -> TRUE .)
    MINUS           reduce using rule 65 (factor -> TRUE .)
    PLUS            reduce using rule 65 (factor -> TRUE .)
    LESSER_EQUAL    reduce using rule 65 (factor -> TRUE .)
    GREATER_EQUAL   reduce using rule 65 (factor -> TRUE .)
    LESSER          reduce using rule 65 (factor -> TRUE .)
    GREATER         reduce using rule 65 (factor -> TRUE .)
    NOT_EQUAL       reduce using rule 65 (factor -> TRUE .)
    EQUAL           reduce using rule 65 (factor -> TRUE .)
    AND             reduce using rule 65 (factor -> TRUE .)
    OR              reduce using rule 65 (factor -> TRUE .)
    EOL             reduce using rule 65 (factor -> TRUE .)
    PARENTHESIS_CLOSE reduce using rule 65 (factor -> TRUE .)
    FALSE           reduce using rule 65 (factor -> TRUE .)
    TRUE            reduce using rule 65 (factor -> TRUE .)
    STRING          reduce using rule 65 (factor -> TRUE .)
    IDENTIFIER      reduce using rule 65 (factor -> TRUE .)
    PARENTHESIS_OPEN reduce using rule 65 (factor -> TRUE .)
    NUMBER          reduce using rule 65 (factor -> TRUE .)


state 47

    (66) factor -> STRING .
    DIVISION        reduce using rule 66 (factor -> STRING .)
    MULTIPLICATION  reduce using rule 66 (factor -> STRING .)
    MINUS           reduce using rule 66 (factor -> STRING .)
    PLUS            reduce using rule 66 (factor -> STRING .)
    LESSER_EQUAL    reduce using rule 66 (factor -> STRING .)
    GREATER_EQUAL   reduce using rule 66 (factor -> STRING .)
    LESSER          reduce using rule 66 (factor -> STRING .)
    GREATER         reduce using rule 66 (factor -> STRING .)
    NOT_EQUAL       reduce using rule 66 (factor -> STRING .)
    EQUAL           reduce using rule 66 (factor -> STRING .)
    AND             reduce using rule 66 (factor -> STRING .)
    OR              reduce using rule 66 (factor -> STRING .)
    EOL             reduce using rule 66 (factor -> STRING .)
    PARENTHESIS_CLOSE reduce using rule 66 (factor -> STRING .)
    FALSE           reduce using rule 66 (factor -> STRING .)
    TRUE            reduce using rule 66 (factor -> STRING .)
    STRING          reduce using rule 66 (factor -> STRING .)
    IDENTIFIER      reduce using rule 66 (factor -> STRING .)
    PARENTHESIS_OPEN reduce using rule 66 (factor -> STRING .)
    NUMBER          reduce using rule 66 (factor -> STRING .)


state 48

    (67) factor -> IDENTIFIER .
    DIVISION        reduce using rule 67 (factor -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 67 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 67 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 67 (factor -> IDENTIFIER .)
    LESSER_EQUAL    reduce using rule 67 (factor -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 67 (factor -> IDENTIFIER .)
    LESSER          reduce using rule 67 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 67 (factor -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 67 (factor -> IDENTIFIER .)
    EQUAL           reduce using rule 67 (factor -> IDENTIFIER .)
    AND             reduce using rule 67 (factor -> IDENTIFIER .)
    OR              reduce using rule 67 (factor -> IDENTIFIER .)
    EOL             reduce using rule 67 (factor -> IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 67 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 67 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 67 (factor -> IDENTIFIER .)
    STRING          reduce using rule 67 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 67 (factor -> IDENTIFIER .)
    PARENTHESIS_OPEN reduce using rule 67 (factor -> IDENTIFIER .)
    NUMBER          reduce using rule 67 (factor -> IDENTIFIER .)


state 49

    (68) factor -> PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    or_expression                  shift and go to state 72
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 50

    (71) factor -> NUMBER .
    DIVISION        reduce using rule 71 (factor -> NUMBER .)
    MULTIPLICATION  reduce using rule 71 (factor -> NUMBER .)
    MINUS           reduce using rule 71 (factor -> NUMBER .)
    PLUS            reduce using rule 71 (factor -> NUMBER .)
    LESSER_EQUAL    reduce using rule 71 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 71 (factor -> NUMBER .)
    LESSER          reduce using rule 71 (factor -> NUMBER .)
    GREATER         reduce using rule 71 (factor -> NUMBER .)
    NOT_EQUAL       reduce using rule 71 (factor -> NUMBER .)
    EQUAL           reduce using rule 71 (factor -> NUMBER .)
    AND             reduce using rule 71 (factor -> NUMBER .)
    OR              reduce using rule 71 (factor -> NUMBER .)
    EOL             reduce using rule 71 (factor -> NUMBER .)
    PARENTHESIS_CLOSE reduce using rule 71 (factor -> NUMBER .)
    FALSE           reduce using rule 71 (factor -> NUMBER .)
    TRUE            reduce using rule 71 (factor -> NUMBER .)
    STRING          reduce using rule 71 (factor -> NUMBER .)
    IDENTIFIER      reduce using rule 71 (factor -> NUMBER .)
    PARENTHESIS_OPEN reduce using rule 71 (factor -> NUMBER .)
    NUMBER          reduce using rule 71 (factor -> NUMBER .)


state 51

    (20) command -> IDENTIFIER ASSIGNMENT . func_call EOL
    (21) command -> IDENTIFIER ASSIGNMENT . or_expression EOL
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    IDENTIFIER      shift and go to state 73
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    func_call                      shift and go to state 74
    or_expression                  shift and go to state 75
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 52

    (36) func_call -> IDENTIFIER PARENTHESIS_OPEN . _3_repeat PARENTHESIS_CLOSE EOL
    (37) _3_repeat -> . _3_items
    (38) _3_repeat -> .
    (39) _3_items -> . _3_items _3_item
    (40) _3_items -> . _3_item
    (41) _3_item -> . or_expression
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 38 (_3_repeat -> .)
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    _3_repeat                      shift and go to state 76
    _3_items                       shift and go to state 77
    _3_item                        shift and go to state 78
    or_expression                  shift and go to state 79
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 53

    (22) command -> VAR IDENTIFIER . ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> VAR IDENTIFIER . ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> VAR IDENTIFIER . ARROW BOOL_TYPE EOL
    (25) command -> VAR IDENTIFIER . ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> VAR IDENTIFIER . ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> VAR IDENTIFIER . ARROW STRING_TYPE EOL
    (28) command -> VAR IDENTIFIER . ARROW INT ASSIGNMENT func_call EOL
    (29) command -> VAR IDENTIFIER . ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> VAR IDENTIFIER . ARROW INT EOL
    ARROW           shift and go to state 80


state 54

    (31) command -> IF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> IF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    or_expression                  shift and go to state 81
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 55

    (33) command -> WHILE PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    or_expression                  shift and go to state 82
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 56

    (34) command -> PRINT PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE EOL
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    or_expression                  shift and go to state 83
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 57

    (17) command -> RETURN or_expression EOL .
    RETURN          reduce using rule 17 (command -> RETURN or_expression EOL .)
    IDENTIFIER      reduce using rule 17 (command -> RETURN or_expression EOL .)
    VAR             reduce using rule 17 (command -> RETURN or_expression EOL .)
    IF              reduce using rule 17 (command -> RETURN or_expression EOL .)
    WHILE           reduce using rule 17 (command -> RETURN or_expression EOL .)
    PRINT           reduce using rule 17 (command -> RETURN or_expression EOL .)
    EOL             reduce using rule 17 (command -> RETURN or_expression EOL .)
    BLOCK_START     reduce using rule 17 (command -> RETURN or_expression EOL .)
    BLOCK_END       reduce using rule 17 (command -> RETURN or_expression EOL .)
    ELIF            reduce using rule 17 (command -> RETURN or_expression EOL .)
    ELSE            reduce using rule 17 (command -> RETURN or_expression EOL .)


state 58

    (46) or_expression -> and_expression OR . or_expression
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    and_expression                 shift and go to state 37
    or_expression                  shift and go to state 84
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 59

    (48) and_expression -> equal_expression AND . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    equal_expression               shift and go to state 38
    and_expression                 shift and go to state 85
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 60

    (50) equal_expression -> relative_expression NOT_EQUAL . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    relative_expression            shift and go to state 39
    equal_expression               shift and go to state 86
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 61

    (51) equal_expression -> relative_expression EQUAL . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    relative_expression            shift and go to state 39
    equal_expression               shift and go to state 87
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 62

    (53) relative_expression -> expression LESSER_EQUAL . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    expression                     shift and go to state 40
    relative_expression            shift and go to state 88
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 63

    (54) relative_expression -> expression GREATER_EQUAL . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    expression                     shift and go to state 40
    relative_expression            shift and go to state 89
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 64

    (55) relative_expression -> expression LESSER . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    expression                     shift and go to state 40
    relative_expression            shift and go to state 90
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 65

    (56) relative_expression -> expression GREATER . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    expression                     shift and go to state 40
    relative_expression            shift and go to state 91
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 66

    (58) expression -> term MINUS . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    term                           shift and go to state 41
    expression                     shift and go to state 92
    factor                         shift and go to state 44

state 67

    (59) expression -> term PLUS . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    term                           shift and go to state 41
    expression                     shift and go to state 93
    factor                         shift and go to state 44

state 68

    (69) factor -> MINUS factor .
    DIVISION        reduce using rule 69 (factor -> MINUS factor .)
    MULTIPLICATION  reduce using rule 69 (factor -> MINUS factor .)
    MINUS           reduce using rule 69 (factor -> MINUS factor .)
    PLUS            reduce using rule 69 (factor -> MINUS factor .)
    LESSER_EQUAL    reduce using rule 69 (factor -> MINUS factor .)
    GREATER_EQUAL   reduce using rule 69 (factor -> MINUS factor .)
    LESSER          reduce using rule 69 (factor -> MINUS factor .)
    GREATER         reduce using rule 69 (factor -> MINUS factor .)
    NOT_EQUAL       reduce using rule 69 (factor -> MINUS factor .)
    EQUAL           reduce using rule 69 (factor -> MINUS factor .)
    AND             reduce using rule 69 (factor -> MINUS factor .)
    OR              reduce using rule 69 (factor -> MINUS factor .)
    EOL             reduce using rule 69 (factor -> MINUS factor .)
    PARENTHESIS_CLOSE reduce using rule 69 (factor -> MINUS factor .)
    FALSE           reduce using rule 69 (factor -> MINUS factor .)
    TRUE            reduce using rule 69 (factor -> MINUS factor .)
    STRING          reduce using rule 69 (factor -> MINUS factor .)
    IDENTIFIER      reduce using rule 69 (factor -> MINUS factor .)
    PARENTHESIS_OPEN reduce using rule 69 (factor -> MINUS factor .)
    NUMBER          reduce using rule 69 (factor -> MINUS factor .)


state 69

    (70) factor -> PLUS factor .
    DIVISION        reduce using rule 70 (factor -> PLUS factor .)
    MULTIPLICATION  reduce using rule 70 (factor -> PLUS factor .)
    MINUS           reduce using rule 70 (factor -> PLUS factor .)
    PLUS            reduce using rule 70 (factor -> PLUS factor .)
    LESSER_EQUAL    reduce using rule 70 (factor -> PLUS factor .)
    GREATER_EQUAL   reduce using rule 70 (factor -> PLUS factor .)
    LESSER          reduce using rule 70 (factor -> PLUS factor .)
    GREATER         reduce using rule 70 (factor -> PLUS factor .)
    NOT_EQUAL       reduce using rule 70 (factor -> PLUS factor .)
    EQUAL           reduce using rule 70 (factor -> PLUS factor .)
    AND             reduce using rule 70 (factor -> PLUS factor .)
    OR              reduce using rule 70 (factor -> PLUS factor .)
    EOL             reduce using rule 70 (factor -> PLUS factor .)
    PARENTHESIS_CLOSE reduce using rule 70 (factor -> PLUS factor .)
    FALSE           reduce using rule 70 (factor -> PLUS factor .)
    TRUE            reduce using rule 70 (factor -> PLUS factor .)
    STRING          reduce using rule 70 (factor -> PLUS factor .)
    IDENTIFIER      reduce using rule 70 (factor -> PLUS factor .)
    PARENTHESIS_OPEN reduce using rule 70 (factor -> PLUS factor .)
    NUMBER          reduce using rule 70 (factor -> PLUS factor .)


state 70

    (61) term -> factor DIVISION . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    factor                         shift and go to state 44
    term                           shift and go to state 94

state 71

    (62) term -> factor MULTIPLICATION . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    factor                         shift and go to state 44
    term                           shift and go to state 95

state 72

    (68) factor -> PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE
    PARENTHESIS_CLOSE shift and go to state 96


state 73

    (36) func_call -> IDENTIFIER . PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    (67) factor -> IDENTIFIER .
    PARENTHESIS_OPEN shift and go to state 52
    DIVISION        reduce using rule 67 (factor -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 67 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 67 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 67 (factor -> IDENTIFIER .)
    LESSER_EQUAL    reduce using rule 67 (factor -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 67 (factor -> IDENTIFIER .)
    LESSER          reduce using rule 67 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 67 (factor -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 67 (factor -> IDENTIFIER .)
    EQUAL           reduce using rule 67 (factor -> IDENTIFIER .)
    AND             reduce using rule 67 (factor -> IDENTIFIER .)
    OR              reduce using rule 67 (factor -> IDENTIFIER .)
    EOL             reduce using rule 67 (factor -> IDENTIFIER .)


state 74

    (20) command -> IDENTIFIER ASSIGNMENT func_call . EOL
    EOL             shift and go to state 97


state 75

    (21) command -> IDENTIFIER ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 98


state 76

    (36) func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat . PARENTHESIS_CLOSE EOL
    PARENTHESIS_CLOSE shift and go to state 99


state 77

    (37) _3_repeat -> _3_items .
    (39) _3_items -> _3_items . _3_item
    (41) _3_item -> . or_expression
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 37 (_3_repeat -> _3_items .)
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    _3_item                        shift and go to state 100
    or_expression                  shift and go to state 79
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 78

    (40) _3_items -> _3_item .
    FALSE           reduce using rule 40 (_3_items -> _3_item .)
    TRUE            reduce using rule 40 (_3_items -> _3_item .)
    STRING          reduce using rule 40 (_3_items -> _3_item .)
    IDENTIFIER      reduce using rule 40 (_3_items -> _3_item .)
    PARENTHESIS_OPEN reduce using rule 40 (_3_items -> _3_item .)
    MINUS           reduce using rule 40 (_3_items -> _3_item .)
    PLUS            reduce using rule 40 (_3_items -> _3_item .)
    NUMBER          reduce using rule 40 (_3_items -> _3_item .)
    PARENTHESIS_CLOSE reduce using rule 40 (_3_items -> _3_item .)


state 79

    (41) _3_item -> or_expression .
    FALSE           reduce using rule 41 (_3_item -> or_expression .)
    TRUE            reduce using rule 41 (_3_item -> or_expression .)
    STRING          reduce using rule 41 (_3_item -> or_expression .)
    IDENTIFIER      reduce using rule 41 (_3_item -> or_expression .)
    PARENTHESIS_OPEN reduce using rule 41 (_3_item -> or_expression .)
    MINUS           reduce using rule 41 (_3_item -> or_expression .)
    PLUS            reduce using rule 41 (_3_item -> or_expression .)
    NUMBER          reduce using rule 41 (_3_item -> or_expression .)
    PARENTHESIS_CLOSE reduce using rule 41 (_3_item -> or_expression .)


state 80

    (22) command -> VAR IDENTIFIER ARROW . BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> VAR IDENTIFIER ARROW . BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> VAR IDENTIFIER ARROW . BOOL_TYPE EOL
    (25) command -> VAR IDENTIFIER ARROW . STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> VAR IDENTIFIER ARROW . STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> VAR IDENTIFIER ARROW . STRING_TYPE EOL
    (28) command -> VAR IDENTIFIER ARROW . INT ASSIGNMENT func_call EOL
    (29) command -> VAR IDENTIFIER ARROW . INT ASSIGNMENT or_expression EOL
    (30) command -> VAR IDENTIFIER ARROW . INT EOL
    BOOL_TYPE       shift and go to state 101
    STRING_TYPE     shift and go to state 102
    INT             shift and go to state 103


state 81

    (31) command -> IF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command EOL
    (32) command -> IF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command elif_statement EOL
    PARENTHESIS_CLOSE shift and go to state 104


state 82

    (33) command -> WHILE PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command
    PARENTHESIS_CLOSE shift and go to state 105


state 83

    (34) command -> PRINT PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE EOL
    PARENTHESIS_CLOSE shift and go to state 106


state 84

    (46) or_expression -> and_expression OR or_expression .
    EOL             reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    PARENTHESIS_CLOSE reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    FALSE           reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    TRUE            reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    STRING          reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    IDENTIFIER      reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    PARENTHESIS_OPEN reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    MINUS           reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    PLUS            reduce using rule 46 (or_expression -> and_expression OR or_expression .)
    NUMBER          reduce using rule 46 (or_expression -> and_expression OR or_expression .)


state 85

    (48) and_expression -> equal_expression AND and_expression .
    OR              reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    EOL             reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    PARENTHESIS_CLOSE reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    FALSE           reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    TRUE            reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    STRING          reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    IDENTIFIER      reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    PARENTHESIS_OPEN reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    MINUS           reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    PLUS            reduce using rule 48 (and_expression -> equal_expression AND and_expression .)
    NUMBER          reduce using rule 48 (and_expression -> equal_expression AND and_expression .)


state 86

    (50) equal_expression -> relative_expression NOT_EQUAL equal_expression .
    AND             reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    OR              reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    EOL             reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    FALSE           reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    TRUE            reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    STRING          reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    IDENTIFIER      reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PARENTHESIS_OPEN reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    MINUS           reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PLUS            reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    NUMBER          reduce using rule 50 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)


state 87

    (51) equal_expression -> relative_expression EQUAL equal_expression .
    AND             reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    OR              reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    EOL             reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    FALSE           reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    TRUE            reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    STRING          reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    IDENTIFIER      reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    PARENTHESIS_OPEN reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    MINUS           reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    PLUS            reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)
    NUMBER          reduce using rule 51 (equal_expression -> relative_expression EQUAL equal_expression .)


state 88

    (53) relative_expression -> expression LESSER_EQUAL relative_expression .
    NOT_EQUAL       reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    EQUAL           reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    AND             reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    OR              reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    EOL             reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    FALSE           reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    TRUE            reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    STRING          reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    IDENTIFIER      reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PARENTHESIS_OPEN reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    MINUS           reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PLUS            reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    NUMBER          reduce using rule 53 (relative_expression -> expression LESSER_EQUAL relative_expression .)


state 89

    (54) relative_expression -> expression GREATER_EQUAL relative_expression .
    NOT_EQUAL       reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    EQUAL           reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    AND             reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    OR              reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    EOL             reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    FALSE           reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    TRUE            reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    STRING          reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    IDENTIFIER      reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PARENTHESIS_OPEN reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    MINUS           reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PLUS            reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    NUMBER          reduce using rule 54 (relative_expression -> expression GREATER_EQUAL relative_expression .)


state 90

    (55) relative_expression -> expression LESSER relative_expression .
    NOT_EQUAL       reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    EQUAL           reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    AND             reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    OR              reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    EOL             reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    FALSE           reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    TRUE            reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    STRING          reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    IDENTIFIER      reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    PARENTHESIS_OPEN reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    MINUS           reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    PLUS            reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)
    NUMBER          reduce using rule 55 (relative_expression -> expression LESSER relative_expression .)


state 91

    (56) relative_expression -> expression GREATER relative_expression .
    NOT_EQUAL       reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    EQUAL           reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    AND             reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    OR              reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    EOL             reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    FALSE           reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    TRUE            reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    STRING          reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    IDENTIFIER      reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    PARENTHESIS_OPEN reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    MINUS           reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    PLUS            reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)
    NUMBER          reduce using rule 56 (relative_expression -> expression GREATER relative_expression .)


state 92

    (58) expression -> term MINUS expression .
    LESSER_EQUAL    reduce using rule 58 (expression -> term MINUS expression .)
    GREATER_EQUAL   reduce using rule 58 (expression -> term MINUS expression .)
    LESSER          reduce using rule 58 (expression -> term MINUS expression .)
    GREATER         reduce using rule 58 (expression -> term MINUS expression .)
    NOT_EQUAL       reduce using rule 58 (expression -> term MINUS expression .)
    EQUAL           reduce using rule 58 (expression -> term MINUS expression .)
    AND             reduce using rule 58 (expression -> term MINUS expression .)
    OR              reduce using rule 58 (expression -> term MINUS expression .)
    EOL             reduce using rule 58 (expression -> term MINUS expression .)
    PARENTHESIS_CLOSE reduce using rule 58 (expression -> term MINUS expression .)
    FALSE           reduce using rule 58 (expression -> term MINUS expression .)
    TRUE            reduce using rule 58 (expression -> term MINUS expression .)
    STRING          reduce using rule 58 (expression -> term MINUS expression .)
    IDENTIFIER      reduce using rule 58 (expression -> term MINUS expression .)
    PARENTHESIS_OPEN reduce using rule 58 (expression -> term MINUS expression .)
    MINUS           reduce using rule 58 (expression -> term MINUS expression .)
    PLUS            reduce using rule 58 (expression -> term MINUS expression .)
    NUMBER          reduce using rule 58 (expression -> term MINUS expression .)


state 93

    (59) expression -> term PLUS expression .
    LESSER_EQUAL    reduce using rule 59 (expression -> term PLUS expression .)
    GREATER_EQUAL   reduce using rule 59 (expression -> term PLUS expression .)
    LESSER          reduce using rule 59 (expression -> term PLUS expression .)
    GREATER         reduce using rule 59 (expression -> term PLUS expression .)
    NOT_EQUAL       reduce using rule 59 (expression -> term PLUS expression .)
    EQUAL           reduce using rule 59 (expression -> term PLUS expression .)
    AND             reduce using rule 59 (expression -> term PLUS expression .)
    OR              reduce using rule 59 (expression -> term PLUS expression .)
    EOL             reduce using rule 59 (expression -> term PLUS expression .)
    PARENTHESIS_CLOSE reduce using rule 59 (expression -> term PLUS expression .)
    FALSE           reduce using rule 59 (expression -> term PLUS expression .)
    TRUE            reduce using rule 59 (expression -> term PLUS expression .)
    STRING          reduce using rule 59 (expression -> term PLUS expression .)
    IDENTIFIER      reduce using rule 59 (expression -> term PLUS expression .)
    PARENTHESIS_OPEN reduce using rule 59 (expression -> term PLUS expression .)
    MINUS           reduce using rule 59 (expression -> term PLUS expression .)
    PLUS            reduce using rule 59 (expression -> term PLUS expression .)
    NUMBER          reduce using rule 59 (expression -> term PLUS expression .)


state 94

    (61) term -> factor DIVISION term .
    MINUS           reduce using rule 61 (term -> factor DIVISION term .)
    PLUS            reduce using rule 61 (term -> factor DIVISION term .)
    LESSER_EQUAL    reduce using rule 61 (term -> factor DIVISION term .)
    GREATER_EQUAL   reduce using rule 61 (term -> factor DIVISION term .)
    LESSER          reduce using rule 61 (term -> factor DIVISION term .)
    GREATER         reduce using rule 61 (term -> factor DIVISION term .)
    NOT_EQUAL       reduce using rule 61 (term -> factor DIVISION term .)
    EQUAL           reduce using rule 61 (term -> factor DIVISION term .)
    AND             reduce using rule 61 (term -> factor DIVISION term .)
    OR              reduce using rule 61 (term -> factor DIVISION term .)
    EOL             reduce using rule 61 (term -> factor DIVISION term .)
    PARENTHESIS_CLOSE reduce using rule 61 (term -> factor DIVISION term .)
    FALSE           reduce using rule 61 (term -> factor DIVISION term .)
    TRUE            reduce using rule 61 (term -> factor DIVISION term .)
    STRING          reduce using rule 61 (term -> factor DIVISION term .)
    IDENTIFIER      reduce using rule 61 (term -> factor DIVISION term .)
    PARENTHESIS_OPEN reduce using rule 61 (term -> factor DIVISION term .)
    NUMBER          reduce using rule 61 (term -> factor DIVISION term .)


state 95

    (62) term -> factor MULTIPLICATION term .
    MINUS           reduce using rule 62 (term -> factor MULTIPLICATION term .)
    PLUS            reduce using rule 62 (term -> factor MULTIPLICATION term .)
    LESSER_EQUAL    reduce using rule 62 (term -> factor MULTIPLICATION term .)
    GREATER_EQUAL   reduce using rule 62 (term -> factor MULTIPLICATION term .)
    LESSER          reduce using rule 62 (term -> factor MULTIPLICATION term .)
    GREATER         reduce using rule 62 (term -> factor MULTIPLICATION term .)
    NOT_EQUAL       reduce using rule 62 (term -> factor MULTIPLICATION term .)
    EQUAL           reduce using rule 62 (term -> factor MULTIPLICATION term .)
    AND             reduce using rule 62 (term -> factor MULTIPLICATION term .)
    OR              reduce using rule 62 (term -> factor MULTIPLICATION term .)
    EOL             reduce using rule 62 (term -> factor MULTIPLICATION term .)
    PARENTHESIS_CLOSE reduce using rule 62 (term -> factor MULTIPLICATION term .)
    FALSE           reduce using rule 62 (term -> factor MULTIPLICATION term .)
    TRUE            reduce using rule 62 (term -> factor MULTIPLICATION term .)
    STRING          reduce using rule 62 (term -> factor MULTIPLICATION term .)
    IDENTIFIER      reduce using rule 62 (term -> factor MULTIPLICATION term .)
    PARENTHESIS_OPEN reduce using rule 62 (term -> factor MULTIPLICATION term .)
    NUMBER          reduce using rule 62 (term -> factor MULTIPLICATION term .)


state 96

    (68) factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .
    DIVISION        reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    MULTIPLICATION  reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    MINUS           reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PLUS            reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    LESSER_EQUAL    reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    GREATER_EQUAL   reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    LESSER          reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    GREATER         reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    NOT_EQUAL       reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    EQUAL           reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    AND             reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    OR              reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    EOL             reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PARENTHESIS_CLOSE reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    FALSE           reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    TRUE            reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    STRING          reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    IDENTIFIER      reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PARENTHESIS_OPEN reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    NUMBER          reduce using rule 68 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)


state 97

    (20) command -> IDENTIFIER ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    IF              reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 20 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)


state 98

    (21) command -> IDENTIFIER ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 21 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)


state 99

    (36) func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE . EOL
    EOL             shift and go to state 107


state 100

    (39) _3_items -> _3_items _3_item .
    FALSE           reduce using rule 39 (_3_items -> _3_items _3_item .)
    TRUE            reduce using rule 39 (_3_items -> _3_items _3_item .)
    STRING          reduce using rule 39 (_3_items -> _3_items _3_item .)
    IDENTIFIER      reduce using rule 39 (_3_items -> _3_items _3_item .)
    PARENTHESIS_OPEN reduce using rule 39 (_3_items -> _3_items _3_item .)
    MINUS           reduce using rule 39 (_3_items -> _3_items _3_item .)
    PLUS            reduce using rule 39 (_3_items -> _3_items _3_item .)
    NUMBER          reduce using rule 39 (_3_items -> _3_items _3_item .)
    PARENTHESIS_CLOSE reduce using rule 39 (_3_items -> _3_items _3_item .)


state 101

    (22) command -> VAR IDENTIFIER ARROW BOOL_TYPE . ASSIGNMENT func_call EOL
    (23) command -> VAR IDENTIFIER ARROW BOOL_TYPE . ASSIGNMENT or_expression EOL
    (24) command -> VAR IDENTIFIER ARROW BOOL_TYPE . EOL
    ASSIGNMENT      shift and go to state 108
    EOL             shift and go to state 109


state 102

    (25) command -> VAR IDENTIFIER ARROW STRING_TYPE . ASSIGNMENT func_call EOL
    (26) command -> VAR IDENTIFIER ARROW STRING_TYPE . ASSIGNMENT or_expression EOL
    (27) command -> VAR IDENTIFIER ARROW STRING_TYPE . EOL
    ASSIGNMENT      shift and go to state 110
    EOL             shift and go to state 111


state 103

    (28) command -> VAR IDENTIFIER ARROW INT . ASSIGNMENT func_call EOL
    (29) command -> VAR IDENTIFIER ARROW INT . ASSIGNMENT or_expression EOL
    (30) command -> VAR IDENTIFIER ARROW INT . EOL
    ASSIGNMENT      shift and go to state 112
    EOL             shift and go to state 113


state 104

    (31) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command EOL
    (32) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command elif_statement EOL
    (17) command -> . RETURN or_expression EOL
    (18) command -> . block
    (19) command -> . func_call
    (20) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (21) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (22) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (25) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (28) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (29) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> . VAR IDENTIFIER ARROW INT EOL
    (31) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (33) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (34) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (35) command -> . EOL
    (10) block -> . BLOCK_START _2_repeat BLOCK_END
    (16) block -> . BLOCK_START BLOCK_END
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    RETURN          shift and go to state 25
    IDENTIFIER      shift and go to state 29
    VAR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    PRINT           shift and go to state 33
    EOL             shift and go to state 26
    BLOCK_START     shift and go to state 18

    command                        shift and go to state 114
    block                          shift and go to state 27
    func_call                      shift and go to state 28

state 105

    (33) command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command
    (17) command -> . RETURN or_expression EOL
    (18) command -> . block
    (19) command -> . func_call
    (20) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (21) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (22) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (25) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (28) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (29) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> . VAR IDENTIFIER ARROW INT EOL
    (31) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (33) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (34) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (35) command -> . EOL
    (10) block -> . BLOCK_START _2_repeat BLOCK_END
    (16) block -> . BLOCK_START BLOCK_END
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    RETURN          shift and go to state 25
    IDENTIFIER      shift and go to state 29
    VAR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    PRINT           shift and go to state 33
    EOL             shift and go to state 26
    BLOCK_START     shift and go to state 18

    command                        shift and go to state 115
    block                          shift and go to state 27
    func_call                      shift and go to state 28

state 106

    (34) command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . EOL
    EOL             shift and go to state 116


state 107

    (36) func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .
    RETURN          reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    IDENTIFIER      reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    VAR             reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    IF              reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    WHILE           reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    PRINT           reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    EOL             reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    BLOCK_START     reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    BLOCK_END       reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    ELIF            reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)
    ELSE            reduce using rule 36 (func_call -> IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL .)


state 108

    (22) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT . func_call EOL
    (23) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT . or_expression EOL
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    IDENTIFIER      shift and go to state 73
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    func_call                      shift and go to state 117
    or_expression                  shift and go to state 118
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 109

    (24) command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .
    RETURN          reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    IDENTIFIER      reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    VAR             reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    IF              reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    WHILE           reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    PRINT           reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    EOL             reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    BLOCK_START     reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    BLOCK_END       reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    ELIF            reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    ELSE            reduce using rule 24 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)


state 110

    (25) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT . func_call EOL
    (26) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT . or_expression EOL
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    IDENTIFIER      shift and go to state 73
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    func_call                      shift and go to state 119
    or_expression                  shift and go to state 120
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 111

    (27) command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .
    RETURN          reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    IDENTIFIER      reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    VAR             reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    IF              reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    WHILE           reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    PRINT           reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    EOL             reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    BLOCK_START     reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    BLOCK_END       reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    ELIF            reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    ELSE            reduce using rule 27 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)


state 112

    (28) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT . func_call EOL
    (29) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT . or_expression EOL
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    IDENTIFIER      shift and go to state 73
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    func_call                      shift and go to state 121
    or_expression                  shift and go to state 122
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 113

    (30) command -> VAR IDENTIFIER ARROW INT EOL .
    RETURN          reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    IDENTIFIER      reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    VAR             reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    IF              reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    WHILE           reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    PRINT           reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    EOL             reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    BLOCK_START     reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    BLOCK_END       reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    ELIF            reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)
    ELSE            reduce using rule 30 (command -> VAR IDENTIFIER ARROW INT EOL .)


state 114

    (31) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . EOL
    (32) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . elif_statement EOL
    (42) elif_statement -> . else_statement
    (43) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (44) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    (45) else_statement -> . ELSE command
    EOL             shift and go to state 123
    ELIF            shift and go to state 126
    ELSE            shift and go to state 127

    elif_statement                 shift and go to state 124
    else_statement                 shift and go to state 125

state 115

    (33) command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .
    RETURN          reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    IDENTIFIER      reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    VAR             reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    IF              reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    WHILE           reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    PRINT           reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    EOL             reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    BLOCK_START     reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    BLOCK_END       reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELIF            reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELSE            reduce using rule 33 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)


state 116

    (34) command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .
    RETURN          reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    IDENTIFIER      reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    VAR             reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    IF              reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    WHILE           reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    PRINT           reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    EOL             reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    BLOCK_START     reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    BLOCK_END       reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    ELIF            reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    ELSE            reduce using rule 34 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)


state 117

    (22) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call . EOL
    EOL             shift and go to state 128


state 118

    (23) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 129


state 119

    (25) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call . EOL
    EOL             shift and go to state 130


state 120

    (26) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 131


state 121

    (28) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call . EOL
    EOL             shift and go to state 132


state 122

    (29) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 133


state 123

    (31) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .
    RETURN          reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    IDENTIFIER      reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    VAR             reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    IF              reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    WHILE           reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    PRINT           reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    EOL             reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    BLOCK_START     reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    BLOCK_END       reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    ELIF            reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    ELSE            reduce using rule 31 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)


state 124

    (32) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement . EOL
    EOL             shift and go to state 134


state 125

    (42) elif_statement -> else_statement .
    EOL             reduce using rule 42 (elif_statement -> else_statement .)


state 126

    (43) elif_statement -> ELIF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (44) elif_statement -> ELIF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    PARENTHESIS_OPEN shift and go to state 135


state 127

    (45) else_statement -> ELSE . command
    (17) command -> . RETURN or_expression EOL
    (18) command -> . block
    (19) command -> . func_call
    (20) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (21) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (22) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (25) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (28) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (29) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> . VAR IDENTIFIER ARROW INT EOL
    (31) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (33) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (34) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (35) command -> . EOL
    (10) block -> . BLOCK_START _2_repeat BLOCK_END
    (16) block -> . BLOCK_START BLOCK_END
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    RETURN          shift and go to state 25
    IDENTIFIER      shift and go to state 29
    VAR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    PRINT           shift and go to state 33
    EOL             shift and go to state 26
    BLOCK_START     shift and go to state 18

    command                        shift and go to state 136
    block                          shift and go to state 27
    func_call                      shift and go to state 28

state 128

    (22) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    IF              reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 22 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)


state 129

    (23) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 23 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)


state 130

    (25) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    IF              reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 25 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)


state 131

    (26) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 26 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)


state 132

    (28) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    IF              reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 28 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)


state 133

    (29) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 29 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)


state 134

    (32) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .
    RETURN          reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    IDENTIFIER      reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    VAR             reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    IF              reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    WHILE           reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    PRINT           reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    EOL             reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    BLOCK_START     reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    BLOCK_END       reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    ELIF            reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    ELSE            reduce using rule 32 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)


state 135

    (43) elif_statement -> ELIF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command
    (44) elif_statement -> ELIF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command elif_statement
    (46) or_expression -> . and_expression OR or_expression
    (47) or_expression -> . and_expression
    (48) and_expression -> . equal_expression AND and_expression
    (49) and_expression -> . equal_expression
    (50) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (51) equal_expression -> . relative_expression EQUAL equal_expression
    (52) equal_expression -> . relative_expression
    (53) relative_expression -> . expression LESSER_EQUAL relative_expression
    (54) relative_expression -> . expression GREATER_EQUAL relative_expression
    (55) relative_expression -> . expression LESSER relative_expression
    (56) relative_expression -> . expression GREATER relative_expression
    (57) relative_expression -> . expression
    (58) expression -> . term MINUS expression
    (59) expression -> . term PLUS expression
    (60) expression -> . term
    (61) term -> . factor DIVISION term
    (62) term -> . factor MULTIPLICATION term
    (63) term -> . factor
    (64) factor -> . FALSE
    (65) factor -> . TRUE
    (66) factor -> . STRING
    (67) factor -> . IDENTIFIER
    (68) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (69) factor -> . MINUS factor
    (70) factor -> . PLUS factor
    (71) factor -> . NUMBER
    FALSE           shift and go to state 45
    TRUE            shift and go to state 46
    STRING          shift and go to state 47
    IDENTIFIER      shift and go to state 48
    PARENTHESIS_OPEN shift and go to state 49
    MINUS           shift and go to state 42
    PLUS            shift and go to state 43
    NUMBER          shift and go to state 50

    or_expression                  shift and go to state 137
    and_expression                 shift and go to state 37
    equal_expression               shift and go to state 38
    relative_expression            shift and go to state 39
    expression                     shift and go to state 40
    term                           shift and go to state 41
    factor                         shift and go to state 44

state 136

    (45) else_statement -> ELSE command .
    EOL             reduce using rule 45 (else_statement -> ELSE command .)


state 137

    (43) elif_statement -> ELIF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command
    (44) elif_statement -> ELIF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command elif_statement
    PARENTHESIS_CLOSE shift and go to state 138


state 138

    (43) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command
    (44) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command elif_statement
    (17) command -> . RETURN or_expression EOL
    (18) command -> . block
    (19) command -> . func_call
    (20) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (21) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (22) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (23) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (24) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (25) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (26) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (27) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (28) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (29) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (30) command -> . VAR IDENTIFIER ARROW INT EOL
    (31) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (32) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (33) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (34) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (35) command -> . EOL
    (10) block -> . BLOCK_START _2_repeat BLOCK_END
    (16) block -> . BLOCK_START BLOCK_END
    (36) func_call -> . IDENTIFIER PARENTHESIS_OPEN _3_repeat PARENTHESIS_CLOSE EOL
    RETURN          shift and go to state 25
    IDENTIFIER      shift and go to state 29
    VAR             shift and go to state 30
    IF              shift and go to state 31
    WHILE           shift and go to state 32
    PRINT           shift and go to state 33
    EOL             shift and go to state 26
    BLOCK_START     shift and go to state 18

    command                        shift and go to state 139
    block                          shift and go to state 27
    func_call                      shift and go to state 28

state 139

    (43) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .
    (44) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . elif_statement
    (42) elif_statement -> . else_statement
    (43) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (44) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    (45) else_statement -> . ELSE command
    EOL             reduce using rule 43 (elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELIF            shift and go to state 126
    ELSE            shift and go to state 127

    elif_statement                 shift and go to state 140
    else_statement                 shift and go to state 125

state 140

    (44) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement .
    EOL             reduce using rule 44 (elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement .)


Conflicts:

shift/reduce conflict for BLOCK_END in state 18 resolved as shift
shift/reduce conflict for MINUS in state 41 resolved as shift
shift/reduce conflict for PLUS in state 41 resolved as shift