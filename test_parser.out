Grammar:

Rule 0     S' -> func_def
Rule 1     func_def -> _1_repeat
Rule 2     _1_repeat -> _1_items
Rule 3     _1_repeat -> <empty>
Rule 4     _1_items -> _1_items _1_item
Rule 5     _1_items -> _1_item
Rule 6     _1_item -> function
Rule 7     function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
Rule 8     _2_repeat -> _2_items
Rule 9     _2_repeat -> <empty>
Rule 10    _2_items -> _2_items _2_item
Rule 11    _2_items -> _2_item
Rule 12    _2_item -> argument
Rule 13    argument -> BOOL_TYPE IDENTIFIER
Rule 14    argument -> STRING_TYPE IDENTIFIER
Rule 15    argument -> INT IDENTIFIER
Rule 16    block -> BLOCK_START _3_repeat BLOCK_END
Rule 17    _3_repeat -> _3_items
Rule 18    _3_repeat -> <empty>
Rule 19    _3_items -> _3_items _3_item
Rule 20    _3_items -> _3_item
Rule 21    _3_item -> command
Rule 22    block -> BLOCK_START BLOCK_END
Rule 23    command -> RETURN or_expression EOL
Rule 24    command -> block
Rule 25    command -> func_call
Rule 26    command -> IDENTIFIER ASSIGNMENT func_call EOL
Rule 27    command -> IDENTIFIER ASSIGNMENT or_expression EOL
Rule 28    command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
Rule 29    command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
Rule 30    command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL
Rule 31    command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
Rule 32    command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
Rule 33    command -> VAR IDENTIFIER ARROW STRING_TYPE EOL
Rule 34    command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
Rule 35    command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
Rule 36    command -> VAR IDENTIFIER ARROW INT EOL
Rule 37    command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
Rule 38    command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
Rule 39    command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
Rule 40    command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
Rule 41    command -> EOL
Rule 42    func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
Rule 43    _4_repeat -> _4_items
Rule 44    _4_repeat -> <empty>
Rule 45    _4_items -> _4_items _4_item
Rule 46    _4_items -> _4_item
Rule 47    _4_item -> or_expression
Rule 48    elif_statement -> else_statement
Rule 49    elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
Rule 50    elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
Rule 51    else_statement -> ELSE command
Rule 52    or_expression -> and_expression OR or_expression
Rule 53    or_expression -> and_expression
Rule 54    and_expression -> equal_expression AND and_expression
Rule 55    and_expression -> equal_expression
Rule 56    equal_expression -> relative_expression NOT_EQUAL equal_expression
Rule 57    equal_expression -> relative_expression EQUAL equal_expression
Rule 58    equal_expression -> relative_expression
Rule 59    relative_expression -> expression LESSER_EQUAL relative_expression
Rule 60    relative_expression -> expression GREATER_EQUAL relative_expression
Rule 61    relative_expression -> expression LESSER relative_expression
Rule 62    relative_expression -> expression GREATER relative_expression
Rule 63    relative_expression -> expression
Rule 64    expression -> term MINUS expression  [precedence=left, level=1]
Rule 65    expression -> term PLUS expression  [precedence=left, level=1]
Rule 66    expression -> term
Rule 67    term -> factor DIVISION term  [precedence=left, level=2]
Rule 68    term -> factor MULTIPLICATION term  [precedence=left, level=2]
Rule 69    term -> factor
Rule 70    factor -> FALSE
Rule 71    factor -> TRUE
Rule 72    factor -> STRING
Rule 73    factor -> IDENTIFIER
Rule 74    factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
Rule 75    _5_repeat -> _5_items
Rule 76    _5_repeat -> <empty>
Rule 77    _5_items -> _5_items _5_item
Rule 78    _5_items -> _5_item
Rule 79    _5_item -> or_expression
Rule 80    factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
Rule 81    factor -> MINUS factor  [precedence=right, level=3]
Rule 82    factor -> PLUS factor  [precedence=right, level=3]
Rule 83    factor -> NUMBER

Terminals, with rules where they appear:

AND                  : 54
ARROW                : 28 29 30 31 32 33 34 35 36
ASSIGNMENT           : 26 27 28 29 31 32 34 35
BLOCK_END            : 16 22
BLOCK_START          : 16 22
BOOL_TYPE            : 13 28 29 30
DIVISION             : 67
ELIF                 : 49 50
ELSE                 : 51
EOL                  : 7 23 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41
EQUAL                : 57
FALSE                : 70
FUNCTION             : 7
GREATER              : 62
GREATER_EQUAL        : 60
IDENTIFIER           : 7 13 14 15 26 27 28 29 30 31 32 33 34 35 36 42 73 74
IF                   : 37 38
INT                  : 15 34 35 36
LESSER               : 61
LESSER_EQUAL         : 59
MINUS                : 64 81
MULTIPLICATION       : 68
NOT_EQUAL            : 56
NUMBER               : 83
OR                   : 52
PARENTHESIS_CLOSE    : 7 37 38 39 40 42 49 50 74 80
PARENTHESIS_OPEN     : 7 37 38 39 40 42 49 50 74 80
PLUS                 : 65 82
PRINT                : 40
RETURN               : 23
STRING               : 72
STRING_TYPE          : 14 31 32 33
TRUE                 : 71
VAR                  : 28 29 30 31 32 33 34 35 36
WHILE                : 39
error                : 

Nonterminals, with rules where they appear:

_1_item              : 4 5
_1_items             : 2 4
_1_repeat            : 1
_2_item              : 10 11
_2_items             : 8 10
_2_repeat            : 7
_3_item              : 19 20
_3_items             : 17 19
_3_repeat            : 16
_4_item              : 45 46
_4_items             : 43 45
_4_repeat            : 42
_5_item              : 77 78
_5_items             : 75 77
_5_repeat            : 74
and_expression       : 52 53 54
argument             : 12
block                : 7 24
command              : 21 37 38 39 49 50 51
elif_statement       : 38 50
else_statement       : 48
equal_expression     : 54 55 56 57
expression           : 59 60 61 62 63 64 65
factor               : 67 68 69 81 82
func_call            : 25 26 29 32 35
func_def             : 0
function             : 6
or_expression        : 23 27 28 31 34 37 38 39 40 47 49 50 52 79 80
relative_expression  : 56 57 58 59 60 61 62
term                 : 64 65 66 67 68


state 0

    (0) S' -> . func_def
    (1) func_def -> . _1_repeat
    (2) _1_repeat -> . _1_items
    (3) _1_repeat -> .
    (4) _1_items -> . _1_items _1_item
    (5) _1_items -> . _1_item
    (6) _1_item -> . function
    (7) function -> . FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    $end            reduce using rule 3 (_1_repeat -> .)
    FUNCTION        shift and go to state 6

    func_def                       shift and go to state 1
    _1_repeat                      shift and go to state 2
    _1_items                       shift and go to state 3
    _1_item                        shift and go to state 4
    function                       shift and go to state 5

state 1

    (0) S' -> func_def .


state 2

    (1) func_def -> _1_repeat .
    $end            reduce using rule 1 (func_def -> _1_repeat .)


state 3

    (2) _1_repeat -> _1_items .
    (4) _1_items -> _1_items . _1_item
    (6) _1_item -> . function
    (7) function -> . FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    $end            reduce using rule 2 (_1_repeat -> _1_items .)
    FUNCTION        shift and go to state 6

    _1_item                        shift and go to state 7
    function                       shift and go to state 5

state 4

    (5) _1_items -> _1_item .
    FUNCTION        reduce using rule 5 (_1_items -> _1_item .)
    $end            reduce using rule 5 (_1_items -> _1_item .)


state 5

    (6) _1_item -> function .
    FUNCTION        reduce using rule 6 (_1_item -> function .)
    $end            reduce using rule 6 (_1_item -> function .)


state 6

    (7) function -> FUNCTION . IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    IDENTIFIER      shift and go to state 8


state 7

    (4) _1_items -> _1_items _1_item .
    FUNCTION        reduce using rule 4 (_1_items -> _1_items _1_item .)
    $end            reduce using rule 4 (_1_items -> _1_items _1_item .)


state 8

    (7) function -> FUNCTION IDENTIFIER . PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL
    PARENTHESIS_OPEN shift and go to state 9


state 9

    (7) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN . _2_repeat PARENTHESIS_CLOSE block EOL
    (8) _2_repeat -> . _2_items
    (9) _2_repeat -> .
    (10) _2_items -> . _2_items _2_item
    (11) _2_items -> . _2_item
    (12) _2_item -> . argument
    (13) argument -> . BOOL_TYPE IDENTIFIER
    (14) argument -> . STRING_TYPE IDENTIFIER
    (15) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 9 (_2_repeat -> .)
    BOOL_TYPE       shift and go to state 14
    STRING_TYPE     shift and go to state 15
    INT             shift and go to state 16

    _2_repeat                      shift and go to state 10
    _2_items                       shift and go to state 11
    _2_item                        shift and go to state 12
    argument                       shift and go to state 13

state 10

    (7) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat . PARENTHESIS_CLOSE block EOL
    PARENTHESIS_CLOSE shift and go to state 17


state 11

    (8) _2_repeat -> _2_items .
    (10) _2_items -> _2_items . _2_item
    (12) _2_item -> . argument
    (13) argument -> . BOOL_TYPE IDENTIFIER
    (14) argument -> . STRING_TYPE IDENTIFIER
    (15) argument -> . INT IDENTIFIER
    PARENTHESIS_CLOSE reduce using rule 8 (_2_repeat -> _2_items .)
    BOOL_TYPE       shift and go to state 14
    STRING_TYPE     shift and go to state 15
    INT             shift and go to state 16

    _2_item                        shift and go to state 18
    argument                       shift and go to state 13

state 12

    (11) _2_items -> _2_item .
    BOOL_TYPE       reduce using rule 11 (_2_items -> _2_item .)
    STRING_TYPE     reduce using rule 11 (_2_items -> _2_item .)
    INT             reduce using rule 11 (_2_items -> _2_item .)
    PARENTHESIS_CLOSE reduce using rule 11 (_2_items -> _2_item .)


state 13

    (12) _2_item -> argument .
    BOOL_TYPE       reduce using rule 12 (_2_item -> argument .)
    STRING_TYPE     reduce using rule 12 (_2_item -> argument .)
    INT             reduce using rule 12 (_2_item -> argument .)
    PARENTHESIS_CLOSE reduce using rule 12 (_2_item -> argument .)


state 14

    (13) argument -> BOOL_TYPE . IDENTIFIER
    IDENTIFIER      shift and go to state 19


state 15

    (14) argument -> STRING_TYPE . IDENTIFIER
    IDENTIFIER      shift and go to state 20


state 16

    (15) argument -> INT . IDENTIFIER
    IDENTIFIER      shift and go to state 21


state 17

    (7) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE . block EOL
    (16) block -> . BLOCK_START _3_repeat BLOCK_END
    (22) block -> . BLOCK_START BLOCK_END
    BLOCK_START     shift and go to state 23

    block                          shift and go to state 22

state 18

    (10) _2_items -> _2_items _2_item .
    BOOL_TYPE       reduce using rule 10 (_2_items -> _2_items _2_item .)
    STRING_TYPE     reduce using rule 10 (_2_items -> _2_items _2_item .)
    INT             reduce using rule 10 (_2_items -> _2_items _2_item .)
    PARENTHESIS_CLOSE reduce using rule 10 (_2_items -> _2_items _2_item .)


state 19

    (13) argument -> BOOL_TYPE IDENTIFIER .
    BOOL_TYPE       reduce using rule 13 (argument -> BOOL_TYPE IDENTIFIER .)
    STRING_TYPE     reduce using rule 13 (argument -> BOOL_TYPE IDENTIFIER .)
    INT             reduce using rule 13 (argument -> BOOL_TYPE IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 13 (argument -> BOOL_TYPE IDENTIFIER .)


state 20

    (14) argument -> STRING_TYPE IDENTIFIER .
    BOOL_TYPE       reduce using rule 14 (argument -> STRING_TYPE IDENTIFIER .)
    STRING_TYPE     reduce using rule 14 (argument -> STRING_TYPE IDENTIFIER .)
    INT             reduce using rule 14 (argument -> STRING_TYPE IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 14 (argument -> STRING_TYPE IDENTIFIER .)


state 21

    (15) argument -> INT IDENTIFIER .
    BOOL_TYPE       reduce using rule 15 (argument -> INT IDENTIFIER .)
    STRING_TYPE     reduce using rule 15 (argument -> INT IDENTIFIER .)
    INT             reduce using rule 15 (argument -> INT IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 15 (argument -> INT IDENTIFIER .)


state 22

    (7) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block . EOL
    EOL             shift and go to state 24


state 23

    (16) block -> BLOCK_START . _3_repeat BLOCK_END
    (22) block -> BLOCK_START . BLOCK_END
    (17) _3_repeat -> . _3_items
    (18) _3_repeat -> .
    (19) _3_items -> . _3_items _3_item
    (20) _3_items -> . _3_item
    (21) _3_item -> . command
    (23) command -> . RETURN or_expression EOL
    (24) command -> . block
    (25) command -> . func_call
    (26) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (27) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (28) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (31) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (34) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (36) command -> . VAR IDENTIFIER ARROW INT EOL
    (37) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (39) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (40) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (41) command -> . EOL
    (16) block -> . BLOCK_START _3_repeat BLOCK_END
    (22) block -> . BLOCK_START BLOCK_END
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
  ! shift/reduce conflict for BLOCK_END resolved as shift
    BLOCK_END       shift and go to state 26
    RETURN          shift and go to state 30
    IDENTIFIER      shift and go to state 34
    VAR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    PRINT           shift and go to state 38
    EOL             shift and go to state 31
    BLOCK_START     shift and go to state 23

    _3_repeat                      shift and go to state 25
    _3_items                       shift and go to state 27
    _3_item                        shift and go to state 28
    command                        shift and go to state 29
    block                          shift and go to state 32
    func_call                      shift and go to state 33

state 24

    (7) function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .
    FUNCTION        reduce using rule 7 (function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .)
    $end            reduce using rule 7 (function -> FUNCTION IDENTIFIER PARENTHESIS_OPEN _2_repeat PARENTHESIS_CLOSE block EOL .)


state 25

    (16) block -> BLOCK_START _3_repeat . BLOCK_END
    BLOCK_END       shift and go to state 39


state 26

    (22) block -> BLOCK_START BLOCK_END .
    EOL             reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    RETURN          reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    IDENTIFIER      reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    VAR             reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    IF              reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    WHILE           reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    PRINT           reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    BLOCK_START     reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    BLOCK_END       reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    ELIF            reduce using rule 22 (block -> BLOCK_START BLOCK_END .)
    ELSE            reduce using rule 22 (block -> BLOCK_START BLOCK_END .)


state 27

    (17) _3_repeat -> _3_items .
    (19) _3_items -> _3_items . _3_item
    (21) _3_item -> . command
    (23) command -> . RETURN or_expression EOL
    (24) command -> . block
    (25) command -> . func_call
    (26) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (27) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (28) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (31) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (34) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (36) command -> . VAR IDENTIFIER ARROW INT EOL
    (37) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (39) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (40) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (41) command -> . EOL
    (16) block -> . BLOCK_START _3_repeat BLOCK_END
    (22) block -> . BLOCK_START BLOCK_END
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    BLOCK_END       reduce using rule 17 (_3_repeat -> _3_items .)
    RETURN          shift and go to state 30
    IDENTIFIER      shift and go to state 34
    VAR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    PRINT           shift and go to state 38
    EOL             shift and go to state 31
    BLOCK_START     shift and go to state 23

    _3_item                        shift and go to state 40
    command                        shift and go to state 29
    block                          shift and go to state 32
    func_call                      shift and go to state 33

state 28

    (20) _3_items -> _3_item .
    RETURN          reduce using rule 20 (_3_items -> _3_item .)
    IDENTIFIER      reduce using rule 20 (_3_items -> _3_item .)
    VAR             reduce using rule 20 (_3_items -> _3_item .)
    IF              reduce using rule 20 (_3_items -> _3_item .)
    WHILE           reduce using rule 20 (_3_items -> _3_item .)
    PRINT           reduce using rule 20 (_3_items -> _3_item .)
    EOL             reduce using rule 20 (_3_items -> _3_item .)
    BLOCK_START     reduce using rule 20 (_3_items -> _3_item .)
    BLOCK_END       reduce using rule 20 (_3_items -> _3_item .)


state 29

    (21) _3_item -> command .
    RETURN          reduce using rule 21 (_3_item -> command .)
    IDENTIFIER      reduce using rule 21 (_3_item -> command .)
    VAR             reduce using rule 21 (_3_item -> command .)
    IF              reduce using rule 21 (_3_item -> command .)
    WHILE           reduce using rule 21 (_3_item -> command .)
    PRINT           reduce using rule 21 (_3_item -> command .)
    EOL             reduce using rule 21 (_3_item -> command .)
    BLOCK_START     reduce using rule 21 (_3_item -> command .)
    BLOCK_END       reduce using rule 21 (_3_item -> command .)


state 30

    (23) command -> RETURN . or_expression EOL
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 41
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 31

    (41) command -> EOL .
    RETURN          reduce using rule 41 (command -> EOL .)
    IDENTIFIER      reduce using rule 41 (command -> EOL .)
    VAR             reduce using rule 41 (command -> EOL .)
    IF              reduce using rule 41 (command -> EOL .)
    WHILE           reduce using rule 41 (command -> EOL .)
    PRINT           reduce using rule 41 (command -> EOL .)
    EOL             reduce using rule 41 (command -> EOL .)
    BLOCK_START     reduce using rule 41 (command -> EOL .)
    BLOCK_END       reduce using rule 41 (command -> EOL .)
    ELIF            reduce using rule 41 (command -> EOL .)
    ELSE            reduce using rule 41 (command -> EOL .)


state 32

    (24) command -> block .
    RETURN          reduce using rule 24 (command -> block .)
    IDENTIFIER      reduce using rule 24 (command -> block .)
    VAR             reduce using rule 24 (command -> block .)
    IF              reduce using rule 24 (command -> block .)
    WHILE           reduce using rule 24 (command -> block .)
    PRINT           reduce using rule 24 (command -> block .)
    EOL             reduce using rule 24 (command -> block .)
    BLOCK_START     reduce using rule 24 (command -> block .)
    BLOCK_END       reduce using rule 24 (command -> block .)
    ELIF            reduce using rule 24 (command -> block .)
    ELSE            reduce using rule 24 (command -> block .)


state 33

    (25) command -> func_call .
    RETURN          reduce using rule 25 (command -> func_call .)
    IDENTIFIER      reduce using rule 25 (command -> func_call .)
    VAR             reduce using rule 25 (command -> func_call .)
    IF              reduce using rule 25 (command -> func_call .)
    WHILE           reduce using rule 25 (command -> func_call .)
    PRINT           reduce using rule 25 (command -> func_call .)
    EOL             reduce using rule 25 (command -> func_call .)
    BLOCK_START     reduce using rule 25 (command -> func_call .)
    BLOCK_END       reduce using rule 25 (command -> func_call .)
    ELIF            reduce using rule 25 (command -> func_call .)
    ELSE            reduce using rule 25 (command -> func_call .)


state 34

    (26) command -> IDENTIFIER . ASSIGNMENT func_call EOL
    (27) command -> IDENTIFIER . ASSIGNMENT or_expression EOL
    (42) func_call -> IDENTIFIER . PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    ASSIGNMENT      shift and go to state 56
    PARENTHESIS_OPEN shift and go to state 57


state 35

    (28) command -> VAR . IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> VAR . IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> VAR . IDENTIFIER ARROW BOOL_TYPE EOL
    (31) command -> VAR . IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> VAR . IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> VAR . IDENTIFIER ARROW STRING_TYPE EOL
    (34) command -> VAR . IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> VAR . IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (36) command -> VAR . IDENTIFIER ARROW INT EOL
    IDENTIFIER      shift and go to state 58


state 36

    (37) command -> IF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> IF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    PARENTHESIS_OPEN shift and go to state 59


state 37

    (39) command -> WHILE . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    PARENTHESIS_OPEN shift and go to state 60


state 38

    (40) command -> PRINT . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    PARENTHESIS_OPEN shift and go to state 61


state 39

    (16) block -> BLOCK_START _3_repeat BLOCK_END .
    EOL             reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    RETURN          reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    IDENTIFIER      reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    VAR             reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    IF              reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    WHILE           reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    PRINT           reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    BLOCK_START     reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    BLOCK_END       reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    ELIF            reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)
    ELSE            reduce using rule 16 (block -> BLOCK_START _3_repeat BLOCK_END .)


state 40

    (19) _3_items -> _3_items _3_item .
    RETURN          reduce using rule 19 (_3_items -> _3_items _3_item .)
    IDENTIFIER      reduce using rule 19 (_3_items -> _3_items _3_item .)
    VAR             reduce using rule 19 (_3_items -> _3_items _3_item .)
    IF              reduce using rule 19 (_3_items -> _3_items _3_item .)
    WHILE           reduce using rule 19 (_3_items -> _3_items _3_item .)
    PRINT           reduce using rule 19 (_3_items -> _3_items _3_item .)
    EOL             reduce using rule 19 (_3_items -> _3_items _3_item .)
    BLOCK_START     reduce using rule 19 (_3_items -> _3_items _3_item .)
    BLOCK_END       reduce using rule 19 (_3_items -> _3_items _3_item .)


state 41

    (23) command -> RETURN or_expression . EOL
    EOL             shift and go to state 62


state 42

    (52) or_expression -> and_expression . OR or_expression
    (53) or_expression -> and_expression .
    OR              shift and go to state 63
    EOL             reduce using rule 53 (or_expression -> and_expression .)
    PARENTHESIS_CLOSE reduce using rule 53 (or_expression -> and_expression .)
    FALSE           reduce using rule 53 (or_expression -> and_expression .)
    TRUE            reduce using rule 53 (or_expression -> and_expression .)
    STRING          reduce using rule 53 (or_expression -> and_expression .)
    IDENTIFIER      reduce using rule 53 (or_expression -> and_expression .)
    PARENTHESIS_OPEN reduce using rule 53 (or_expression -> and_expression .)
    MINUS           reduce using rule 53 (or_expression -> and_expression .)
    PLUS            reduce using rule 53 (or_expression -> and_expression .)
    NUMBER          reduce using rule 53 (or_expression -> and_expression .)


state 43

    (54) and_expression -> equal_expression . AND and_expression
    (55) and_expression -> equal_expression .
    AND             shift and go to state 64
    OR              reduce using rule 55 (and_expression -> equal_expression .)
    EOL             reduce using rule 55 (and_expression -> equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 55 (and_expression -> equal_expression .)
    FALSE           reduce using rule 55 (and_expression -> equal_expression .)
    TRUE            reduce using rule 55 (and_expression -> equal_expression .)
    STRING          reduce using rule 55 (and_expression -> equal_expression .)
    IDENTIFIER      reduce using rule 55 (and_expression -> equal_expression .)
    PARENTHESIS_OPEN reduce using rule 55 (and_expression -> equal_expression .)
    MINUS           reduce using rule 55 (and_expression -> equal_expression .)
    PLUS            reduce using rule 55 (and_expression -> equal_expression .)
    NUMBER          reduce using rule 55 (and_expression -> equal_expression .)


state 44

    (56) equal_expression -> relative_expression . NOT_EQUAL equal_expression
    (57) equal_expression -> relative_expression . EQUAL equal_expression
    (58) equal_expression -> relative_expression .
    NOT_EQUAL       shift and go to state 65
    EQUAL           shift and go to state 66
    AND             reduce using rule 58 (equal_expression -> relative_expression .)
    OR              reduce using rule 58 (equal_expression -> relative_expression .)
    EOL             reduce using rule 58 (equal_expression -> relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 58 (equal_expression -> relative_expression .)
    FALSE           reduce using rule 58 (equal_expression -> relative_expression .)
    TRUE            reduce using rule 58 (equal_expression -> relative_expression .)
    STRING          reduce using rule 58 (equal_expression -> relative_expression .)
    IDENTIFIER      reduce using rule 58 (equal_expression -> relative_expression .)
    PARENTHESIS_OPEN reduce using rule 58 (equal_expression -> relative_expression .)
    MINUS           reduce using rule 58 (equal_expression -> relative_expression .)
    PLUS            reduce using rule 58 (equal_expression -> relative_expression .)
    NUMBER          reduce using rule 58 (equal_expression -> relative_expression .)


state 45

    (59) relative_expression -> expression . LESSER_EQUAL relative_expression
    (60) relative_expression -> expression . GREATER_EQUAL relative_expression
    (61) relative_expression -> expression . LESSER relative_expression
    (62) relative_expression -> expression . GREATER relative_expression
    (63) relative_expression -> expression .
    LESSER_EQUAL    shift and go to state 67
    GREATER_EQUAL   shift and go to state 68
    LESSER          shift and go to state 69
    GREATER         shift and go to state 70
    NOT_EQUAL       reduce using rule 63 (relative_expression -> expression .)
    EQUAL           reduce using rule 63 (relative_expression -> expression .)
    AND             reduce using rule 63 (relative_expression -> expression .)
    OR              reduce using rule 63 (relative_expression -> expression .)
    EOL             reduce using rule 63 (relative_expression -> expression .)
    PARENTHESIS_CLOSE reduce using rule 63 (relative_expression -> expression .)
    FALSE           reduce using rule 63 (relative_expression -> expression .)
    TRUE            reduce using rule 63 (relative_expression -> expression .)
    STRING          reduce using rule 63 (relative_expression -> expression .)
    IDENTIFIER      reduce using rule 63 (relative_expression -> expression .)
    PARENTHESIS_OPEN reduce using rule 63 (relative_expression -> expression .)
    MINUS           reduce using rule 63 (relative_expression -> expression .)
    PLUS            reduce using rule 63 (relative_expression -> expression .)
    NUMBER          reduce using rule 63 (relative_expression -> expression .)


state 46

    (64) expression -> term . MINUS expression
    (65) expression -> term . PLUS expression
    (66) expression -> term .
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    MINUS           shift and go to state 71
    PLUS            shift and go to state 72
    LESSER_EQUAL    reduce using rule 66 (expression -> term .)
    GREATER_EQUAL   reduce using rule 66 (expression -> term .)
    LESSER          reduce using rule 66 (expression -> term .)
    GREATER         reduce using rule 66 (expression -> term .)
    NOT_EQUAL       reduce using rule 66 (expression -> term .)
    EQUAL           reduce using rule 66 (expression -> term .)
    AND             reduce using rule 66 (expression -> term .)
    OR              reduce using rule 66 (expression -> term .)
    EOL             reduce using rule 66 (expression -> term .)
    PARENTHESIS_CLOSE reduce using rule 66 (expression -> term .)
    FALSE           reduce using rule 66 (expression -> term .)
    TRUE            reduce using rule 66 (expression -> term .)
    STRING          reduce using rule 66 (expression -> term .)
    IDENTIFIER      reduce using rule 66 (expression -> term .)
    PARENTHESIS_OPEN reduce using rule 66 (expression -> term .)
    NUMBER          reduce using rule 66 (expression -> term .)


state 47

    (81) factor -> MINUS . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    factor                         shift and go to state 73

state 48

    (82) factor -> PLUS . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    factor                         shift and go to state 74

state 49

    (67) term -> factor . DIVISION term
    (68) term -> factor . MULTIPLICATION term
    (69) term -> factor .
    DIVISION        shift and go to state 75
    MULTIPLICATION  shift and go to state 76
    MINUS           reduce using rule 69 (term -> factor .)
    PLUS            reduce using rule 69 (term -> factor .)
    LESSER_EQUAL    reduce using rule 69 (term -> factor .)
    GREATER_EQUAL   reduce using rule 69 (term -> factor .)
    LESSER          reduce using rule 69 (term -> factor .)
    GREATER         reduce using rule 69 (term -> factor .)
    NOT_EQUAL       reduce using rule 69 (term -> factor .)
    EQUAL           reduce using rule 69 (term -> factor .)
    AND             reduce using rule 69 (term -> factor .)
    OR              reduce using rule 69 (term -> factor .)
    EOL             reduce using rule 69 (term -> factor .)
    PARENTHESIS_CLOSE reduce using rule 69 (term -> factor .)
    FALSE           reduce using rule 69 (term -> factor .)
    TRUE            reduce using rule 69 (term -> factor .)
    STRING          reduce using rule 69 (term -> factor .)
    IDENTIFIER      reduce using rule 69 (term -> factor .)
    PARENTHESIS_OPEN reduce using rule 69 (term -> factor .)
    NUMBER          reduce using rule 69 (term -> factor .)


state 50

    (70) factor -> FALSE .
    DIVISION        reduce using rule 70 (factor -> FALSE .)
    MULTIPLICATION  reduce using rule 70 (factor -> FALSE .)
    MINUS           reduce using rule 70 (factor -> FALSE .)
    PLUS            reduce using rule 70 (factor -> FALSE .)
    LESSER_EQUAL    reduce using rule 70 (factor -> FALSE .)
    GREATER_EQUAL   reduce using rule 70 (factor -> FALSE .)
    LESSER          reduce using rule 70 (factor -> FALSE .)
    GREATER         reduce using rule 70 (factor -> FALSE .)
    NOT_EQUAL       reduce using rule 70 (factor -> FALSE .)
    EQUAL           reduce using rule 70 (factor -> FALSE .)
    AND             reduce using rule 70 (factor -> FALSE .)
    OR              reduce using rule 70 (factor -> FALSE .)
    EOL             reduce using rule 70 (factor -> FALSE .)
    PARENTHESIS_CLOSE reduce using rule 70 (factor -> FALSE .)
    FALSE           reduce using rule 70 (factor -> FALSE .)
    TRUE            reduce using rule 70 (factor -> FALSE .)
    STRING          reduce using rule 70 (factor -> FALSE .)
    IDENTIFIER      reduce using rule 70 (factor -> FALSE .)
    PARENTHESIS_OPEN reduce using rule 70 (factor -> FALSE .)
    NUMBER          reduce using rule 70 (factor -> FALSE .)


state 51

    (71) factor -> TRUE .
    DIVISION        reduce using rule 71 (factor -> TRUE .)
    MULTIPLICATION  reduce using rule 71 (factor -> TRUE .)
    MINUS           reduce using rule 71 (factor -> TRUE .)
    PLUS            reduce using rule 71 (factor -> TRUE .)
    LESSER_EQUAL    reduce using rule 71 (factor -> TRUE .)
    GREATER_EQUAL   reduce using rule 71 (factor -> TRUE .)
    LESSER          reduce using rule 71 (factor -> TRUE .)
    GREATER         reduce using rule 71 (factor -> TRUE .)
    NOT_EQUAL       reduce using rule 71 (factor -> TRUE .)
    EQUAL           reduce using rule 71 (factor -> TRUE .)
    AND             reduce using rule 71 (factor -> TRUE .)
    OR              reduce using rule 71 (factor -> TRUE .)
    EOL             reduce using rule 71 (factor -> TRUE .)
    PARENTHESIS_CLOSE reduce using rule 71 (factor -> TRUE .)
    FALSE           reduce using rule 71 (factor -> TRUE .)
    TRUE            reduce using rule 71 (factor -> TRUE .)
    STRING          reduce using rule 71 (factor -> TRUE .)
    IDENTIFIER      reduce using rule 71 (factor -> TRUE .)
    PARENTHESIS_OPEN reduce using rule 71 (factor -> TRUE .)
    NUMBER          reduce using rule 71 (factor -> TRUE .)


state 52

    (72) factor -> STRING .
    DIVISION        reduce using rule 72 (factor -> STRING .)
    MULTIPLICATION  reduce using rule 72 (factor -> STRING .)
    MINUS           reduce using rule 72 (factor -> STRING .)
    PLUS            reduce using rule 72 (factor -> STRING .)
    LESSER_EQUAL    reduce using rule 72 (factor -> STRING .)
    GREATER_EQUAL   reduce using rule 72 (factor -> STRING .)
    LESSER          reduce using rule 72 (factor -> STRING .)
    GREATER         reduce using rule 72 (factor -> STRING .)
    NOT_EQUAL       reduce using rule 72 (factor -> STRING .)
    EQUAL           reduce using rule 72 (factor -> STRING .)
    AND             reduce using rule 72 (factor -> STRING .)
    OR              reduce using rule 72 (factor -> STRING .)
    EOL             reduce using rule 72 (factor -> STRING .)
    PARENTHESIS_CLOSE reduce using rule 72 (factor -> STRING .)
    FALSE           reduce using rule 72 (factor -> STRING .)
    TRUE            reduce using rule 72 (factor -> STRING .)
    STRING          reduce using rule 72 (factor -> STRING .)
    IDENTIFIER      reduce using rule 72 (factor -> STRING .)
    PARENTHESIS_OPEN reduce using rule 72 (factor -> STRING .)
    NUMBER          reduce using rule 72 (factor -> STRING .)


state 53

    (73) factor -> IDENTIFIER .
    (74) factor -> IDENTIFIER . PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
  ! shift/reduce conflict for PARENTHESIS_OPEN resolved as shift
    DIVISION        reduce using rule 73 (factor -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 73 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 73 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 73 (factor -> IDENTIFIER .)
    LESSER_EQUAL    reduce using rule 73 (factor -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 73 (factor -> IDENTIFIER .)
    LESSER          reduce using rule 73 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 73 (factor -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 73 (factor -> IDENTIFIER .)
    EQUAL           reduce using rule 73 (factor -> IDENTIFIER .)
    AND             reduce using rule 73 (factor -> IDENTIFIER .)
    OR              reduce using rule 73 (factor -> IDENTIFIER .)
    EOL             reduce using rule 73 (factor -> IDENTIFIER .)
    PARENTHESIS_CLOSE reduce using rule 73 (factor -> IDENTIFIER .)
    FALSE           reduce using rule 73 (factor -> IDENTIFIER .)
    TRUE            reduce using rule 73 (factor -> IDENTIFIER .)
    STRING          reduce using rule 73 (factor -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 73 (factor -> IDENTIFIER .)
    NUMBER          reduce using rule 73 (factor -> IDENTIFIER .)
    PARENTHESIS_OPEN shift and go to state 77


state 54

    (80) factor -> PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 78
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 55

    (83) factor -> NUMBER .
    DIVISION        reduce using rule 83 (factor -> NUMBER .)
    MULTIPLICATION  reduce using rule 83 (factor -> NUMBER .)
    MINUS           reduce using rule 83 (factor -> NUMBER .)
    PLUS            reduce using rule 83 (factor -> NUMBER .)
    LESSER_EQUAL    reduce using rule 83 (factor -> NUMBER .)
    GREATER_EQUAL   reduce using rule 83 (factor -> NUMBER .)
    LESSER          reduce using rule 83 (factor -> NUMBER .)
    GREATER         reduce using rule 83 (factor -> NUMBER .)
    NOT_EQUAL       reduce using rule 83 (factor -> NUMBER .)
    EQUAL           reduce using rule 83 (factor -> NUMBER .)
    AND             reduce using rule 83 (factor -> NUMBER .)
    OR              reduce using rule 83 (factor -> NUMBER .)
    EOL             reduce using rule 83 (factor -> NUMBER .)
    PARENTHESIS_CLOSE reduce using rule 83 (factor -> NUMBER .)
    FALSE           reduce using rule 83 (factor -> NUMBER .)
    TRUE            reduce using rule 83 (factor -> NUMBER .)
    STRING          reduce using rule 83 (factor -> NUMBER .)
    IDENTIFIER      reduce using rule 83 (factor -> NUMBER .)
    PARENTHESIS_OPEN reduce using rule 83 (factor -> NUMBER .)
    NUMBER          reduce using rule 83 (factor -> NUMBER .)


state 56

    (26) command -> IDENTIFIER ASSIGNMENT . func_call EOL
    (27) command -> IDENTIFIER ASSIGNMENT . or_expression EOL
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    IDENTIFIER      shift and go to state 79
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    func_call                      shift and go to state 80
    or_expression                  shift and go to state 81
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 57

    (42) func_call -> IDENTIFIER PARENTHESIS_OPEN . _4_repeat PARENTHESIS_CLOSE
    (43) _4_repeat -> . _4_items
    (44) _4_repeat -> .
    (45) _4_items -> . _4_items _4_item
    (46) _4_items -> . _4_item
    (47) _4_item -> . or_expression
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 44 (_4_repeat -> .)
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    _4_repeat                      shift and go to state 82
    _4_items                       shift and go to state 83
    _4_item                        shift and go to state 84
    or_expression                  shift and go to state 85
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 58

    (28) command -> VAR IDENTIFIER . ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> VAR IDENTIFIER . ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> VAR IDENTIFIER . ARROW BOOL_TYPE EOL
    (31) command -> VAR IDENTIFIER . ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> VAR IDENTIFIER . ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> VAR IDENTIFIER . ARROW STRING_TYPE EOL
    (34) command -> VAR IDENTIFIER . ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> VAR IDENTIFIER . ARROW INT ASSIGNMENT func_call EOL
    (36) command -> VAR IDENTIFIER . ARROW INT EOL
    ARROW           shift and go to state 86


state 59

    (37) command -> IF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> IF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 87
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 60

    (39) command -> WHILE PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 88
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 61

    (40) command -> PRINT PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE EOL
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 89
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 62

    (23) command -> RETURN or_expression EOL .
    RETURN          reduce using rule 23 (command -> RETURN or_expression EOL .)
    IDENTIFIER      reduce using rule 23 (command -> RETURN or_expression EOL .)
    VAR             reduce using rule 23 (command -> RETURN or_expression EOL .)
    IF              reduce using rule 23 (command -> RETURN or_expression EOL .)
    WHILE           reduce using rule 23 (command -> RETURN or_expression EOL .)
    PRINT           reduce using rule 23 (command -> RETURN or_expression EOL .)
    EOL             reduce using rule 23 (command -> RETURN or_expression EOL .)
    BLOCK_START     reduce using rule 23 (command -> RETURN or_expression EOL .)
    BLOCK_END       reduce using rule 23 (command -> RETURN or_expression EOL .)
    ELIF            reduce using rule 23 (command -> RETURN or_expression EOL .)
    ELSE            reduce using rule 23 (command -> RETURN or_expression EOL .)


state 63

    (52) or_expression -> and_expression OR . or_expression
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    and_expression                 shift and go to state 42
    or_expression                  shift and go to state 90
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 64

    (54) and_expression -> equal_expression AND . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    equal_expression               shift and go to state 43
    and_expression                 shift and go to state 91
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 65

    (56) equal_expression -> relative_expression NOT_EQUAL . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    relative_expression            shift and go to state 44
    equal_expression               shift and go to state 92
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 66

    (57) equal_expression -> relative_expression EQUAL . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    relative_expression            shift and go to state 44
    equal_expression               shift and go to state 93
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 67

    (59) relative_expression -> expression LESSER_EQUAL . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    expression                     shift and go to state 45
    relative_expression            shift and go to state 94
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 68

    (60) relative_expression -> expression GREATER_EQUAL . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    expression                     shift and go to state 45
    relative_expression            shift and go to state 95
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 69

    (61) relative_expression -> expression LESSER . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    expression                     shift and go to state 45
    relative_expression            shift and go to state 96
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 70

    (62) relative_expression -> expression GREATER . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    expression                     shift and go to state 45
    relative_expression            shift and go to state 97
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 71

    (64) expression -> term MINUS . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    term                           shift and go to state 46
    expression                     shift and go to state 98
    factor                         shift and go to state 49

state 72

    (65) expression -> term PLUS . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    term                           shift and go to state 46
    expression                     shift and go to state 99
    factor                         shift and go to state 49

state 73

    (81) factor -> MINUS factor .
    DIVISION        reduce using rule 81 (factor -> MINUS factor .)
    MULTIPLICATION  reduce using rule 81 (factor -> MINUS factor .)
    MINUS           reduce using rule 81 (factor -> MINUS factor .)
    PLUS            reduce using rule 81 (factor -> MINUS factor .)
    LESSER_EQUAL    reduce using rule 81 (factor -> MINUS factor .)
    GREATER_EQUAL   reduce using rule 81 (factor -> MINUS factor .)
    LESSER          reduce using rule 81 (factor -> MINUS factor .)
    GREATER         reduce using rule 81 (factor -> MINUS factor .)
    NOT_EQUAL       reduce using rule 81 (factor -> MINUS factor .)
    EQUAL           reduce using rule 81 (factor -> MINUS factor .)
    AND             reduce using rule 81 (factor -> MINUS factor .)
    OR              reduce using rule 81 (factor -> MINUS factor .)
    EOL             reduce using rule 81 (factor -> MINUS factor .)
    PARENTHESIS_CLOSE reduce using rule 81 (factor -> MINUS factor .)
    FALSE           reduce using rule 81 (factor -> MINUS factor .)
    TRUE            reduce using rule 81 (factor -> MINUS factor .)
    STRING          reduce using rule 81 (factor -> MINUS factor .)
    IDENTIFIER      reduce using rule 81 (factor -> MINUS factor .)
    PARENTHESIS_OPEN reduce using rule 81 (factor -> MINUS factor .)
    NUMBER          reduce using rule 81 (factor -> MINUS factor .)


state 74

    (82) factor -> PLUS factor .
    DIVISION        reduce using rule 82 (factor -> PLUS factor .)
    MULTIPLICATION  reduce using rule 82 (factor -> PLUS factor .)
    MINUS           reduce using rule 82 (factor -> PLUS factor .)
    PLUS            reduce using rule 82 (factor -> PLUS factor .)
    LESSER_EQUAL    reduce using rule 82 (factor -> PLUS factor .)
    GREATER_EQUAL   reduce using rule 82 (factor -> PLUS factor .)
    LESSER          reduce using rule 82 (factor -> PLUS factor .)
    GREATER         reduce using rule 82 (factor -> PLUS factor .)
    NOT_EQUAL       reduce using rule 82 (factor -> PLUS factor .)
    EQUAL           reduce using rule 82 (factor -> PLUS factor .)
    AND             reduce using rule 82 (factor -> PLUS factor .)
    OR              reduce using rule 82 (factor -> PLUS factor .)
    EOL             reduce using rule 82 (factor -> PLUS factor .)
    PARENTHESIS_CLOSE reduce using rule 82 (factor -> PLUS factor .)
    FALSE           reduce using rule 82 (factor -> PLUS factor .)
    TRUE            reduce using rule 82 (factor -> PLUS factor .)
    STRING          reduce using rule 82 (factor -> PLUS factor .)
    IDENTIFIER      reduce using rule 82 (factor -> PLUS factor .)
    PARENTHESIS_OPEN reduce using rule 82 (factor -> PLUS factor .)
    NUMBER          reduce using rule 82 (factor -> PLUS factor .)


state 75

    (67) term -> factor DIVISION . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    factor                         shift and go to state 49
    term                           shift and go to state 100

state 76

    (68) term -> factor MULTIPLICATION . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    factor                         shift and go to state 49
    term                           shift and go to state 101

state 77

    (74) factor -> IDENTIFIER PARENTHESIS_OPEN . _5_repeat PARENTHESIS_CLOSE
    (75) _5_repeat -> . _5_items
    (76) _5_repeat -> .
    (77) _5_items -> . _5_items _5_item
    (78) _5_items -> . _5_item
    (79) _5_item -> . or_expression
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 76 (_5_repeat -> .)
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    _5_repeat                      shift and go to state 102
    _5_items                       shift and go to state 103
    _5_item                        shift and go to state 104
    or_expression                  shift and go to state 105
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 78

    (80) factor -> PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE
    PARENTHESIS_CLOSE shift and go to state 106


state 79

    (42) func_call -> IDENTIFIER . PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    (73) factor -> IDENTIFIER .
    (74) factor -> IDENTIFIER . PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    PARENTHESIS_OPEN shift and go to state 107
    DIVISION        reduce using rule 73 (factor -> IDENTIFIER .)
    MULTIPLICATION  reduce using rule 73 (factor -> IDENTIFIER .)
    MINUS           reduce using rule 73 (factor -> IDENTIFIER .)
    PLUS            reduce using rule 73 (factor -> IDENTIFIER .)
    LESSER_EQUAL    reduce using rule 73 (factor -> IDENTIFIER .)
    GREATER_EQUAL   reduce using rule 73 (factor -> IDENTIFIER .)
    LESSER          reduce using rule 73 (factor -> IDENTIFIER .)
    GREATER         reduce using rule 73 (factor -> IDENTIFIER .)
    NOT_EQUAL       reduce using rule 73 (factor -> IDENTIFIER .)
    EQUAL           reduce using rule 73 (factor -> IDENTIFIER .)
    AND             reduce using rule 73 (factor -> IDENTIFIER .)
    OR              reduce using rule 73 (factor -> IDENTIFIER .)
    EOL             reduce using rule 73 (factor -> IDENTIFIER .)


state 80

    (26) command -> IDENTIFIER ASSIGNMENT func_call . EOL
    EOL             shift and go to state 108


state 81

    (27) command -> IDENTIFIER ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 109


state 82

    (42) func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat . PARENTHESIS_CLOSE
    PARENTHESIS_CLOSE shift and go to state 110


state 83

    (43) _4_repeat -> _4_items .
    (45) _4_items -> _4_items . _4_item
    (47) _4_item -> . or_expression
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 43 (_4_repeat -> _4_items .)
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    _4_item                        shift and go to state 111
    or_expression                  shift and go to state 85
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 84

    (46) _4_items -> _4_item .
    FALSE           reduce using rule 46 (_4_items -> _4_item .)
    TRUE            reduce using rule 46 (_4_items -> _4_item .)
    STRING          reduce using rule 46 (_4_items -> _4_item .)
    IDENTIFIER      reduce using rule 46 (_4_items -> _4_item .)
    PARENTHESIS_OPEN reduce using rule 46 (_4_items -> _4_item .)
    MINUS           reduce using rule 46 (_4_items -> _4_item .)
    PLUS            reduce using rule 46 (_4_items -> _4_item .)
    NUMBER          reduce using rule 46 (_4_items -> _4_item .)
    PARENTHESIS_CLOSE reduce using rule 46 (_4_items -> _4_item .)


state 85

    (47) _4_item -> or_expression .
    FALSE           reduce using rule 47 (_4_item -> or_expression .)
    TRUE            reduce using rule 47 (_4_item -> or_expression .)
    STRING          reduce using rule 47 (_4_item -> or_expression .)
    IDENTIFIER      reduce using rule 47 (_4_item -> or_expression .)
    PARENTHESIS_OPEN reduce using rule 47 (_4_item -> or_expression .)
    MINUS           reduce using rule 47 (_4_item -> or_expression .)
    PLUS            reduce using rule 47 (_4_item -> or_expression .)
    NUMBER          reduce using rule 47 (_4_item -> or_expression .)
    PARENTHESIS_CLOSE reduce using rule 47 (_4_item -> or_expression .)


state 86

    (28) command -> VAR IDENTIFIER ARROW . BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> VAR IDENTIFIER ARROW . BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> VAR IDENTIFIER ARROW . BOOL_TYPE EOL
    (31) command -> VAR IDENTIFIER ARROW . STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> VAR IDENTIFIER ARROW . STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> VAR IDENTIFIER ARROW . STRING_TYPE EOL
    (34) command -> VAR IDENTIFIER ARROW . INT ASSIGNMENT or_expression EOL
    (35) command -> VAR IDENTIFIER ARROW . INT ASSIGNMENT func_call EOL
    (36) command -> VAR IDENTIFIER ARROW . INT EOL
    BOOL_TYPE       shift and go to state 112
    STRING_TYPE     shift and go to state 113
    INT             shift and go to state 114


state 87

    (37) command -> IF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command EOL
    (38) command -> IF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command elif_statement EOL
    PARENTHESIS_CLOSE shift and go to state 115


state 88

    (39) command -> WHILE PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command
    PARENTHESIS_CLOSE shift and go to state 116


state 89

    (40) command -> PRINT PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE EOL
    PARENTHESIS_CLOSE shift and go to state 117


state 90

    (52) or_expression -> and_expression OR or_expression .
    EOL             reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    PARENTHESIS_CLOSE reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    FALSE           reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    TRUE            reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    STRING          reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    IDENTIFIER      reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    PARENTHESIS_OPEN reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    MINUS           reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    PLUS            reduce using rule 52 (or_expression -> and_expression OR or_expression .)
    NUMBER          reduce using rule 52 (or_expression -> and_expression OR or_expression .)


state 91

    (54) and_expression -> equal_expression AND and_expression .
    OR              reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    EOL             reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    PARENTHESIS_CLOSE reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    FALSE           reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    TRUE            reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    STRING          reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    IDENTIFIER      reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    PARENTHESIS_OPEN reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    MINUS           reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    PLUS            reduce using rule 54 (and_expression -> equal_expression AND and_expression .)
    NUMBER          reduce using rule 54 (and_expression -> equal_expression AND and_expression .)


state 92

    (56) equal_expression -> relative_expression NOT_EQUAL equal_expression .
    AND             reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    OR              reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    EOL             reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    FALSE           reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    TRUE            reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    STRING          reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    IDENTIFIER      reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PARENTHESIS_OPEN reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    MINUS           reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    PLUS            reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)
    NUMBER          reduce using rule 56 (equal_expression -> relative_expression NOT_EQUAL equal_expression .)


state 93

    (57) equal_expression -> relative_expression EQUAL equal_expression .
    AND             reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    OR              reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    EOL             reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    PARENTHESIS_CLOSE reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    FALSE           reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    TRUE            reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    STRING          reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    IDENTIFIER      reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    PARENTHESIS_OPEN reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    MINUS           reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    PLUS            reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)
    NUMBER          reduce using rule 57 (equal_expression -> relative_expression EQUAL equal_expression .)


state 94

    (59) relative_expression -> expression LESSER_EQUAL relative_expression .
    NOT_EQUAL       reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    EQUAL           reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    AND             reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    OR              reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    EOL             reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    FALSE           reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    TRUE            reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    STRING          reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    IDENTIFIER      reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PARENTHESIS_OPEN reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    MINUS           reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    PLUS            reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)
    NUMBER          reduce using rule 59 (relative_expression -> expression LESSER_EQUAL relative_expression .)


state 95

    (60) relative_expression -> expression GREATER_EQUAL relative_expression .
    NOT_EQUAL       reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    EQUAL           reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    AND             reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    OR              reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    EOL             reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    FALSE           reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    TRUE            reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    STRING          reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    IDENTIFIER      reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PARENTHESIS_OPEN reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    MINUS           reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    PLUS            reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)
    NUMBER          reduce using rule 60 (relative_expression -> expression GREATER_EQUAL relative_expression .)


state 96

    (61) relative_expression -> expression LESSER relative_expression .
    NOT_EQUAL       reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    EQUAL           reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    AND             reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    OR              reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    EOL             reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    FALSE           reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    TRUE            reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    STRING          reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    IDENTIFIER      reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    PARENTHESIS_OPEN reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    MINUS           reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    PLUS            reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)
    NUMBER          reduce using rule 61 (relative_expression -> expression LESSER relative_expression .)


state 97

    (62) relative_expression -> expression GREATER relative_expression .
    NOT_EQUAL       reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    EQUAL           reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    AND             reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    OR              reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    EOL             reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    PARENTHESIS_CLOSE reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    FALSE           reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    TRUE            reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    STRING          reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    IDENTIFIER      reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    PARENTHESIS_OPEN reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    MINUS           reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    PLUS            reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)
    NUMBER          reduce using rule 62 (relative_expression -> expression GREATER relative_expression .)


state 98

    (64) expression -> term MINUS expression .
    LESSER_EQUAL    reduce using rule 64 (expression -> term MINUS expression .)
    GREATER_EQUAL   reduce using rule 64 (expression -> term MINUS expression .)
    LESSER          reduce using rule 64 (expression -> term MINUS expression .)
    GREATER         reduce using rule 64 (expression -> term MINUS expression .)
    NOT_EQUAL       reduce using rule 64 (expression -> term MINUS expression .)
    EQUAL           reduce using rule 64 (expression -> term MINUS expression .)
    AND             reduce using rule 64 (expression -> term MINUS expression .)
    OR              reduce using rule 64 (expression -> term MINUS expression .)
    EOL             reduce using rule 64 (expression -> term MINUS expression .)
    PARENTHESIS_CLOSE reduce using rule 64 (expression -> term MINUS expression .)
    FALSE           reduce using rule 64 (expression -> term MINUS expression .)
    TRUE            reduce using rule 64 (expression -> term MINUS expression .)
    STRING          reduce using rule 64 (expression -> term MINUS expression .)
    IDENTIFIER      reduce using rule 64 (expression -> term MINUS expression .)
    PARENTHESIS_OPEN reduce using rule 64 (expression -> term MINUS expression .)
    MINUS           reduce using rule 64 (expression -> term MINUS expression .)
    PLUS            reduce using rule 64 (expression -> term MINUS expression .)
    NUMBER          reduce using rule 64 (expression -> term MINUS expression .)


state 99

    (65) expression -> term PLUS expression .
    LESSER_EQUAL    reduce using rule 65 (expression -> term PLUS expression .)
    GREATER_EQUAL   reduce using rule 65 (expression -> term PLUS expression .)
    LESSER          reduce using rule 65 (expression -> term PLUS expression .)
    GREATER         reduce using rule 65 (expression -> term PLUS expression .)
    NOT_EQUAL       reduce using rule 65 (expression -> term PLUS expression .)
    EQUAL           reduce using rule 65 (expression -> term PLUS expression .)
    AND             reduce using rule 65 (expression -> term PLUS expression .)
    OR              reduce using rule 65 (expression -> term PLUS expression .)
    EOL             reduce using rule 65 (expression -> term PLUS expression .)
    PARENTHESIS_CLOSE reduce using rule 65 (expression -> term PLUS expression .)
    FALSE           reduce using rule 65 (expression -> term PLUS expression .)
    TRUE            reduce using rule 65 (expression -> term PLUS expression .)
    STRING          reduce using rule 65 (expression -> term PLUS expression .)
    IDENTIFIER      reduce using rule 65 (expression -> term PLUS expression .)
    PARENTHESIS_OPEN reduce using rule 65 (expression -> term PLUS expression .)
    MINUS           reduce using rule 65 (expression -> term PLUS expression .)
    PLUS            reduce using rule 65 (expression -> term PLUS expression .)
    NUMBER          reduce using rule 65 (expression -> term PLUS expression .)


state 100

    (67) term -> factor DIVISION term .
    MINUS           reduce using rule 67 (term -> factor DIVISION term .)
    PLUS            reduce using rule 67 (term -> factor DIVISION term .)
    LESSER_EQUAL    reduce using rule 67 (term -> factor DIVISION term .)
    GREATER_EQUAL   reduce using rule 67 (term -> factor DIVISION term .)
    LESSER          reduce using rule 67 (term -> factor DIVISION term .)
    GREATER         reduce using rule 67 (term -> factor DIVISION term .)
    NOT_EQUAL       reduce using rule 67 (term -> factor DIVISION term .)
    EQUAL           reduce using rule 67 (term -> factor DIVISION term .)
    AND             reduce using rule 67 (term -> factor DIVISION term .)
    OR              reduce using rule 67 (term -> factor DIVISION term .)
    EOL             reduce using rule 67 (term -> factor DIVISION term .)
    PARENTHESIS_CLOSE reduce using rule 67 (term -> factor DIVISION term .)
    FALSE           reduce using rule 67 (term -> factor DIVISION term .)
    TRUE            reduce using rule 67 (term -> factor DIVISION term .)
    STRING          reduce using rule 67 (term -> factor DIVISION term .)
    IDENTIFIER      reduce using rule 67 (term -> factor DIVISION term .)
    PARENTHESIS_OPEN reduce using rule 67 (term -> factor DIVISION term .)
    NUMBER          reduce using rule 67 (term -> factor DIVISION term .)


state 101

    (68) term -> factor MULTIPLICATION term .
    MINUS           reduce using rule 68 (term -> factor MULTIPLICATION term .)
    PLUS            reduce using rule 68 (term -> factor MULTIPLICATION term .)
    LESSER_EQUAL    reduce using rule 68 (term -> factor MULTIPLICATION term .)
    GREATER_EQUAL   reduce using rule 68 (term -> factor MULTIPLICATION term .)
    LESSER          reduce using rule 68 (term -> factor MULTIPLICATION term .)
    GREATER         reduce using rule 68 (term -> factor MULTIPLICATION term .)
    NOT_EQUAL       reduce using rule 68 (term -> factor MULTIPLICATION term .)
    EQUAL           reduce using rule 68 (term -> factor MULTIPLICATION term .)
    AND             reduce using rule 68 (term -> factor MULTIPLICATION term .)
    OR              reduce using rule 68 (term -> factor MULTIPLICATION term .)
    EOL             reduce using rule 68 (term -> factor MULTIPLICATION term .)
    PARENTHESIS_CLOSE reduce using rule 68 (term -> factor MULTIPLICATION term .)
    FALSE           reduce using rule 68 (term -> factor MULTIPLICATION term .)
    TRUE            reduce using rule 68 (term -> factor MULTIPLICATION term .)
    STRING          reduce using rule 68 (term -> factor MULTIPLICATION term .)
    IDENTIFIER      reduce using rule 68 (term -> factor MULTIPLICATION term .)
    PARENTHESIS_OPEN reduce using rule 68 (term -> factor MULTIPLICATION term .)
    NUMBER          reduce using rule 68 (term -> factor MULTIPLICATION term .)


state 102

    (74) factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat . PARENTHESIS_CLOSE
    PARENTHESIS_CLOSE shift and go to state 118


state 103

    (75) _5_repeat -> _5_items .
    (77) _5_items -> _5_items . _5_item
    (79) _5_item -> . or_expression
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    PARENTHESIS_CLOSE reduce using rule 75 (_5_repeat -> _5_items .)
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    _5_item                        shift and go to state 119
    or_expression                  shift and go to state 105
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 104

    (78) _5_items -> _5_item .
    FALSE           reduce using rule 78 (_5_items -> _5_item .)
    TRUE            reduce using rule 78 (_5_items -> _5_item .)
    STRING          reduce using rule 78 (_5_items -> _5_item .)
    IDENTIFIER      reduce using rule 78 (_5_items -> _5_item .)
    PARENTHESIS_OPEN reduce using rule 78 (_5_items -> _5_item .)
    MINUS           reduce using rule 78 (_5_items -> _5_item .)
    PLUS            reduce using rule 78 (_5_items -> _5_item .)
    NUMBER          reduce using rule 78 (_5_items -> _5_item .)
    PARENTHESIS_CLOSE reduce using rule 78 (_5_items -> _5_item .)


state 105

    (79) _5_item -> or_expression .
    FALSE           reduce using rule 79 (_5_item -> or_expression .)
    TRUE            reduce using rule 79 (_5_item -> or_expression .)
    STRING          reduce using rule 79 (_5_item -> or_expression .)
    IDENTIFIER      reduce using rule 79 (_5_item -> or_expression .)
    PARENTHESIS_OPEN reduce using rule 79 (_5_item -> or_expression .)
    MINUS           reduce using rule 79 (_5_item -> or_expression .)
    PLUS            reduce using rule 79 (_5_item -> or_expression .)
    NUMBER          reduce using rule 79 (_5_item -> or_expression .)
    PARENTHESIS_CLOSE reduce using rule 79 (_5_item -> or_expression .)


state 106

    (80) factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .
    DIVISION        reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    MULTIPLICATION  reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    MINUS           reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PLUS            reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    LESSER_EQUAL    reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    GREATER_EQUAL   reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    LESSER          reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    GREATER         reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    NOT_EQUAL       reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    EQUAL           reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    AND             reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    OR              reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    EOL             reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PARENTHESIS_CLOSE reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    FALSE           reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    TRUE            reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    STRING          reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    IDENTIFIER      reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    PARENTHESIS_OPEN reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)
    NUMBER          reduce using rule 80 (factor -> PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE .)


state 107

    (42) func_call -> IDENTIFIER PARENTHESIS_OPEN . _4_repeat PARENTHESIS_CLOSE
    (74) factor -> IDENTIFIER PARENTHESIS_OPEN . _5_repeat PARENTHESIS_CLOSE
    (43) _4_repeat -> . _4_items
    (44) _4_repeat -> .
    (75) _5_repeat -> . _5_items
    (76) _5_repeat -> .
    (45) _4_items -> . _4_items _4_item
    (46) _4_items -> . _4_item
    (77) _5_items -> . _5_items _5_item
    (78) _5_items -> . _5_item
    (47) _4_item -> . or_expression
    (79) _5_item -> . or_expression
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
  ! reduce/reduce conflict for PARENTHESIS_CLOSE resolved using rule 44 (_4_repeat -> .)
    PARENTHESIS_CLOSE reduce using rule 44 (_4_repeat -> .)
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    _4_repeat                      shift and go to state 82
    _5_repeat                      shift and go to state 102
    _4_items                       shift and go to state 83
    _5_items                       shift and go to state 103
    _4_item                        shift and go to state 84
    _5_item                        shift and go to state 104
    or_expression                  shift and go to state 120
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 108

    (26) command -> IDENTIFIER ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    IF              reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 26 (command -> IDENTIFIER ASSIGNMENT func_call EOL .)


state 109

    (27) command -> IDENTIFIER ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 27 (command -> IDENTIFIER ASSIGNMENT or_expression EOL .)


state 110

    (42) func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .
    RETURN          reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    IDENTIFIER      reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    VAR             reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    IF              reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    WHILE           reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    PRINT           reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    EOL             reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    BLOCK_START     reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    BLOCK_END       reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    ELIF            reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)
    ELSE            reduce using rule 42 (func_call -> IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE .)


state 111

    (45) _4_items -> _4_items _4_item .
    FALSE           reduce using rule 45 (_4_items -> _4_items _4_item .)
    TRUE            reduce using rule 45 (_4_items -> _4_items _4_item .)
    STRING          reduce using rule 45 (_4_items -> _4_items _4_item .)
    IDENTIFIER      reduce using rule 45 (_4_items -> _4_items _4_item .)
    PARENTHESIS_OPEN reduce using rule 45 (_4_items -> _4_items _4_item .)
    MINUS           reduce using rule 45 (_4_items -> _4_items _4_item .)
    PLUS            reduce using rule 45 (_4_items -> _4_items _4_item .)
    NUMBER          reduce using rule 45 (_4_items -> _4_items _4_item .)
    PARENTHESIS_CLOSE reduce using rule 45 (_4_items -> _4_items _4_item .)


state 112

    (28) command -> VAR IDENTIFIER ARROW BOOL_TYPE . ASSIGNMENT or_expression EOL
    (29) command -> VAR IDENTIFIER ARROW BOOL_TYPE . ASSIGNMENT func_call EOL
    (30) command -> VAR IDENTIFIER ARROW BOOL_TYPE . EOL
    ASSIGNMENT      shift and go to state 121
    EOL             shift and go to state 122


state 113

    (31) command -> VAR IDENTIFIER ARROW STRING_TYPE . ASSIGNMENT or_expression EOL
    (32) command -> VAR IDENTIFIER ARROW STRING_TYPE . ASSIGNMENT func_call EOL
    (33) command -> VAR IDENTIFIER ARROW STRING_TYPE . EOL
    ASSIGNMENT      shift and go to state 123
    EOL             shift and go to state 124


state 114

    (34) command -> VAR IDENTIFIER ARROW INT . ASSIGNMENT or_expression EOL
    (35) command -> VAR IDENTIFIER ARROW INT . ASSIGNMENT func_call EOL
    (36) command -> VAR IDENTIFIER ARROW INT . EOL
    ASSIGNMENT      shift and go to state 125
    EOL             shift and go to state 126


state 115

    (37) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command EOL
    (38) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command elif_statement EOL
    (23) command -> . RETURN or_expression EOL
    (24) command -> . block
    (25) command -> . func_call
    (26) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (27) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (28) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (31) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (34) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (36) command -> . VAR IDENTIFIER ARROW INT EOL
    (37) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (39) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (40) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (41) command -> . EOL
    (16) block -> . BLOCK_START _3_repeat BLOCK_END
    (22) block -> . BLOCK_START BLOCK_END
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 30
    IDENTIFIER      shift and go to state 34
    VAR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    PRINT           shift and go to state 38
    EOL             shift and go to state 31
    BLOCK_START     shift and go to state 23

    command                        shift and go to state 127
    block                          shift and go to state 32
    func_call                      shift and go to state 33

state 116

    (39) command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command
    (23) command -> . RETURN or_expression EOL
    (24) command -> . block
    (25) command -> . func_call
    (26) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (27) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (28) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (31) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (34) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (36) command -> . VAR IDENTIFIER ARROW INT EOL
    (37) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (39) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (40) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (41) command -> . EOL
    (16) block -> . BLOCK_START _3_repeat BLOCK_END
    (22) block -> . BLOCK_START BLOCK_END
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 30
    IDENTIFIER      shift and go to state 34
    VAR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    PRINT           shift and go to state 38
    EOL             shift and go to state 31
    BLOCK_START     shift and go to state 23

    command                        shift and go to state 128
    block                          shift and go to state 32
    func_call                      shift and go to state 33

state 117

    (40) command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . EOL
    EOL             shift and go to state 129


state 118

    (74) factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .
    DIVISION        reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    MULTIPLICATION  reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    MINUS           reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    PLUS            reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    LESSER_EQUAL    reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    GREATER_EQUAL   reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    LESSER          reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    GREATER         reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    NOT_EQUAL       reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    EQUAL           reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    AND             reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    OR              reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    EOL             reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    PARENTHESIS_CLOSE reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    FALSE           reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    TRUE            reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    STRING          reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    IDENTIFIER      reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    PARENTHESIS_OPEN reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)
    NUMBER          reduce using rule 74 (factor -> IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE .)


state 119

    (77) _5_items -> _5_items _5_item .
    FALSE           reduce using rule 77 (_5_items -> _5_items _5_item .)
    TRUE            reduce using rule 77 (_5_items -> _5_items _5_item .)
    STRING          reduce using rule 77 (_5_items -> _5_items _5_item .)
    IDENTIFIER      reduce using rule 77 (_5_items -> _5_items _5_item .)
    PARENTHESIS_OPEN reduce using rule 77 (_5_items -> _5_items _5_item .)
    MINUS           reduce using rule 77 (_5_items -> _5_items _5_item .)
    PLUS            reduce using rule 77 (_5_items -> _5_items _5_item .)
    NUMBER          reduce using rule 77 (_5_items -> _5_items _5_item .)
    PARENTHESIS_CLOSE reduce using rule 77 (_5_items -> _5_items _5_item .)


state 120

    (47) _4_item -> or_expression .
    (79) _5_item -> or_expression .
  ! reduce/reduce conflict for FALSE resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for STRING resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for PARENTHESIS_OPEN resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for PLUS resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 47 (_4_item -> or_expression .)
  ! reduce/reduce conflict for PARENTHESIS_CLOSE resolved using rule 47 (_4_item -> or_expression .)
    FALSE           reduce using rule 47 (_4_item -> or_expression .)
    TRUE            reduce using rule 47 (_4_item -> or_expression .)
    STRING          reduce using rule 47 (_4_item -> or_expression .)
    IDENTIFIER      reduce using rule 47 (_4_item -> or_expression .)
    PARENTHESIS_OPEN reduce using rule 47 (_4_item -> or_expression .)
    MINUS           reduce using rule 47 (_4_item -> or_expression .)
    PLUS            reduce using rule 47 (_4_item -> or_expression .)
    NUMBER          reduce using rule 47 (_4_item -> or_expression .)
    PARENTHESIS_CLOSE reduce using rule 47 (_4_item -> or_expression .)


state 121

    (28) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT . or_expression EOL
    (29) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT . func_call EOL
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    IDENTIFIER      shift and go to state 79
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 130
    func_call                      shift and go to state 131
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 122

    (30) command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .
    RETURN          reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    IDENTIFIER      reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    VAR             reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    IF              reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    WHILE           reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    PRINT           reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    EOL             reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    BLOCK_START     reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    BLOCK_END       reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    ELIF            reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)
    ELSE            reduce using rule 30 (command -> VAR IDENTIFIER ARROW BOOL_TYPE EOL .)


state 123

    (31) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT . or_expression EOL
    (32) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT . func_call EOL
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    IDENTIFIER      shift and go to state 79
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 132
    func_call                      shift and go to state 133
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 124

    (33) command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .
    RETURN          reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    IDENTIFIER      reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    VAR             reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    IF              reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    WHILE           reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    PRINT           reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    EOL             reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    BLOCK_START     reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    BLOCK_END       reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    ELIF            reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)
    ELSE            reduce using rule 33 (command -> VAR IDENTIFIER ARROW STRING_TYPE EOL .)


state 125

    (34) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT . or_expression EOL
    (35) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT . func_call EOL
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    IDENTIFIER      shift and go to state 79
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 134
    func_call                      shift and go to state 135
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 126

    (36) command -> VAR IDENTIFIER ARROW INT EOL .
    RETURN          reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    IDENTIFIER      reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    VAR             reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    IF              reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    WHILE           reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    PRINT           reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    EOL             reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    BLOCK_START     reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    BLOCK_END       reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    ELIF            reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)
    ELSE            reduce using rule 36 (command -> VAR IDENTIFIER ARROW INT EOL .)


state 127

    (37) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . EOL
    (38) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . elif_statement EOL
    (48) elif_statement -> . else_statement
    (49) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (50) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    (51) else_statement -> . ELSE command
    EOL             shift and go to state 136
    ELIF            shift and go to state 139
    ELSE            shift and go to state 140

    elif_statement                 shift and go to state 137
    else_statement                 shift and go to state 138

state 128

    (39) command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .
    RETURN          reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    IDENTIFIER      reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    VAR             reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    IF              reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    WHILE           reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    PRINT           reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    EOL             reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    BLOCK_START     reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    BLOCK_END       reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELIF            reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELSE            reduce using rule 39 (command -> WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)


state 129

    (40) command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .
    RETURN          reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    IDENTIFIER      reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    VAR             reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    IF              reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    WHILE           reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    PRINT           reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    EOL             reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    BLOCK_START     reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    BLOCK_END       reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    ELIF            reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)
    ELSE            reduce using rule 40 (command -> PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL .)


state 130

    (28) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 141


state 131

    (29) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call . EOL
    EOL             shift and go to state 142


state 132

    (31) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 143


state 133

    (32) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call . EOL
    EOL             shift and go to state 144


state 134

    (34) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression . EOL
    EOL             shift and go to state 145


state 135

    (35) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call . EOL
    EOL             shift and go to state 146


state 136

    (37) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .
    RETURN          reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    IDENTIFIER      reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    VAR             reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    IF              reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    WHILE           reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    PRINT           reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    EOL             reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    BLOCK_START     reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    BLOCK_END       reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    ELIF            reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)
    ELSE            reduce using rule 37 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL .)


state 137

    (38) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement . EOL
    EOL             shift and go to state 147


state 138

    (48) elif_statement -> else_statement .
    EOL             reduce using rule 48 (elif_statement -> else_statement .)


state 139

    (49) elif_statement -> ELIF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (50) elif_statement -> ELIF . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    PARENTHESIS_OPEN shift and go to state 148


state 140

    (51) else_statement -> ELSE . command
    (23) command -> . RETURN or_expression EOL
    (24) command -> . block
    (25) command -> . func_call
    (26) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (27) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (28) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (31) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (34) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (36) command -> . VAR IDENTIFIER ARROW INT EOL
    (37) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (39) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (40) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (41) command -> . EOL
    (16) block -> . BLOCK_START _3_repeat BLOCK_END
    (22) block -> . BLOCK_START BLOCK_END
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 30
    IDENTIFIER      shift and go to state 34
    VAR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    PRINT           shift and go to state 38
    EOL             shift and go to state 31
    BLOCK_START     shift and go to state 23

    command                        shift and go to state 149
    block                          shift and go to state 32
    func_call                      shift and go to state 33

state 141

    (28) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 28 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL .)


state 142

    (29) command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    IF              reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 29 (command -> VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL .)


state 143

    (31) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 31 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL .)


state 144

    (32) command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    IF              reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 32 (command -> VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL .)


state 145

    (34) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .
    RETURN          reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    IDENTIFIER      reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    VAR             reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    IF              reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    WHILE           reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    PRINT           reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    EOL             reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    BLOCK_START     reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    BLOCK_END       reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    ELIF            reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)
    ELSE            reduce using rule 34 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL .)


state 146

    (35) command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .
    RETURN          reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    IDENTIFIER      reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    VAR             reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    IF              reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    WHILE           reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    PRINT           reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    EOL             reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    BLOCK_START     reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    BLOCK_END       reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    ELIF            reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)
    ELSE            reduce using rule 35 (command -> VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL .)


state 147

    (38) command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .
    RETURN          reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    IDENTIFIER      reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    VAR             reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    IF              reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    WHILE           reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    PRINT           reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    EOL             reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    BLOCK_START     reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    BLOCK_END       reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    ELIF            reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)
    ELSE            reduce using rule 38 (command -> IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL .)


state 148

    (49) elif_statement -> ELIF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command
    (50) elif_statement -> ELIF PARENTHESIS_OPEN . or_expression PARENTHESIS_CLOSE command elif_statement
    (52) or_expression -> . and_expression OR or_expression
    (53) or_expression -> . and_expression
    (54) and_expression -> . equal_expression AND and_expression
    (55) and_expression -> . equal_expression
    (56) equal_expression -> . relative_expression NOT_EQUAL equal_expression
    (57) equal_expression -> . relative_expression EQUAL equal_expression
    (58) equal_expression -> . relative_expression
    (59) relative_expression -> . expression LESSER_EQUAL relative_expression
    (60) relative_expression -> . expression GREATER_EQUAL relative_expression
    (61) relative_expression -> . expression LESSER relative_expression
    (62) relative_expression -> . expression GREATER relative_expression
    (63) relative_expression -> . expression
    (64) expression -> . term MINUS expression
    (65) expression -> . term PLUS expression
    (66) expression -> . term
    (67) term -> . factor DIVISION term
    (68) term -> . factor MULTIPLICATION term
    (69) term -> . factor
    (70) factor -> . FALSE
    (71) factor -> . TRUE
    (72) factor -> . STRING
    (73) factor -> . IDENTIFIER
    (74) factor -> . IDENTIFIER PARENTHESIS_OPEN _5_repeat PARENTHESIS_CLOSE
    (80) factor -> . PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE
    (81) factor -> . MINUS factor
    (82) factor -> . PLUS factor
    (83) factor -> . NUMBER
    FALSE           shift and go to state 50
    TRUE            shift and go to state 51
    STRING          shift and go to state 52
    IDENTIFIER      shift and go to state 53
    PARENTHESIS_OPEN shift and go to state 54
    MINUS           shift and go to state 47
    PLUS            shift and go to state 48
    NUMBER          shift and go to state 55

    or_expression                  shift and go to state 150
    and_expression                 shift and go to state 42
    equal_expression               shift and go to state 43
    relative_expression            shift and go to state 44
    expression                     shift and go to state 45
    term                           shift and go to state 46
    factor                         shift and go to state 49

state 149

    (51) else_statement -> ELSE command .
    EOL             reduce using rule 51 (else_statement -> ELSE command .)


state 150

    (49) elif_statement -> ELIF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command
    (50) elif_statement -> ELIF PARENTHESIS_OPEN or_expression . PARENTHESIS_CLOSE command elif_statement
    PARENTHESIS_CLOSE shift and go to state 151


state 151

    (49) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command
    (50) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE . command elif_statement
    (23) command -> . RETURN or_expression EOL
    (24) command -> . block
    (25) command -> . func_call
    (26) command -> . IDENTIFIER ASSIGNMENT func_call EOL
    (27) command -> . IDENTIFIER ASSIGNMENT or_expression EOL
    (28) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT or_expression EOL
    (29) command -> . VAR IDENTIFIER ARROW BOOL_TYPE ASSIGNMENT func_call EOL
    (30) command -> . VAR IDENTIFIER ARROW BOOL_TYPE EOL
    (31) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT or_expression EOL
    (32) command -> . VAR IDENTIFIER ARROW STRING_TYPE ASSIGNMENT func_call EOL
    (33) command -> . VAR IDENTIFIER ARROW STRING_TYPE EOL
    (34) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT or_expression EOL
    (35) command -> . VAR IDENTIFIER ARROW INT ASSIGNMENT func_call EOL
    (36) command -> . VAR IDENTIFIER ARROW INT EOL
    (37) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command EOL
    (38) command -> . IF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement EOL
    (39) command -> . WHILE PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (40) command -> . PRINT PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE EOL
    (41) command -> . EOL
    (16) block -> . BLOCK_START _3_repeat BLOCK_END
    (22) block -> . BLOCK_START BLOCK_END
    (42) func_call -> . IDENTIFIER PARENTHESIS_OPEN _4_repeat PARENTHESIS_CLOSE
    RETURN          shift and go to state 30
    IDENTIFIER      shift and go to state 34
    VAR             shift and go to state 35
    IF              shift and go to state 36
    WHILE           shift and go to state 37
    PRINT           shift and go to state 38
    EOL             shift and go to state 31
    BLOCK_START     shift and go to state 23

    command                        shift and go to state 152
    block                          shift and go to state 32
    func_call                      shift and go to state 33

state 152

    (49) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .
    (50) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command . elif_statement
    (48) elif_statement -> . else_statement
    (49) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command
    (50) elif_statement -> . ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement
    (51) else_statement -> . ELSE command
    EOL             reduce using rule 49 (elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command .)
    ELIF            shift and go to state 139
    ELSE            shift and go to state 140

    elif_statement                 shift and go to state 153
    else_statement                 shift and go to state 138

state 153

    (50) elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement .
    EOL             reduce using rule 50 (elif_statement -> ELIF PARENTHESIS_OPEN or_expression PARENTHESIS_CLOSE command elif_statement .)


Conflicts:

shift/reduce conflict for BLOCK_END in state 23 resolved as shift
shift/reduce conflict for MINUS in state 46 resolved as shift
shift/reduce conflict for PLUS in state 46 resolved as shift
shift/reduce conflict for PARENTHESIS_OPEN in state 53 resolved as shift
reduce/reduce conflict in state 107 resolved using rule _4_repeat -> <empty>
rejected rule (_5_repeat -> <empty>) in state 107
reduce/reduce conflict in state 120 resolved using rule _4_item -> or_expression
rejected rule (_5_item -> or_expression) in state 120